// Created by Microsoft (R) C/C++ Compiler Version 14.39.33521.0 (89c9d3ab).
//
// C:\Users\paolo\source\repos\ETABSAPI\ETABSAPI\x64\Debug\ETABSv1.tli
//
// Wrapper implementations for Win32 type library ETABSv1.tlb
// compiler-generated file - DO NOT EDIT!


//
// dispinterface cAreaElm wrapper method implementations
//

#pragma implementation_key(1)
inline long ETABSv1::cAreaElm::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2)
inline long ETABSv1::cAreaElm::GetLoadTemperature ( _bstr_t Name, long * NumberItems, SAFEARRAY * * AreaName, SAFEARRAY * * LoadPat, SAFEARRAY * * MyType, SAFEARRAY * * Value, SAFEARRAY * * PatternName, enum eItemTypeElm ItemTypeElm ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6005\x6008\x0003", (BSTR)Name, NumberItems, AreaName, LoadPat, MyType, Value, PatternName, ItemTypeElm);
    return _result;
}

#pragma implementation_key(3)
inline long ETABSv1::cAreaElm::GetLoadUniform ( _bstr_t Name, long * NumberItems, SAFEARRAY * * AreaName, SAFEARRAY * * LoadPat, SAFEARRAY * * CSys, SAFEARRAY * * Dir, SAFEARRAY * * Value, enum eItemTypeElm ItemTypeElm ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6008\x6003\x6005\x0003", (BSTR)Name, NumberItems, AreaName, LoadPat, CSys, Dir, Value, ItemTypeElm);
    return _result;
}

#pragma implementation_key(4)
inline long ETABSv1::cAreaElm::GetLocalAxes ( _bstr_t Name, double * Ang ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)Name, Ang);
    return _result;
}

#pragma implementation_key(5)
inline long ETABSv1::cAreaElm::GetMaterialOverwrite ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(6)
inline long ETABSv1::cAreaElm::GetModifiers ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(7)
inline long ETABSv1::cAreaElm::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(8)
inline long ETABSv1::cAreaElm::GetObj ( _bstr_t Name, BSTR * Obj ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, Obj);
    return _result;
}

#pragma implementation_key(9)
inline long ETABSv1::cAreaElm::GetOffsets ( _bstr_t Name, long * OffsetType, BSTR * OffsetPattern, double * OffsetPatternSF, SAFEARRAY * * Offset ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4008\x4005\x6005", (BSTR)Name, OffsetType, OffsetPattern, OffsetPatternSF, Offset);
    return _result;
}

#pragma implementation_key(10)
inline long ETABSv1::cAreaElm::GetPoints ( _bstr_t Name, long * NumberPoints, SAFEARRAY * * Point ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)Name, NumberPoints, Point);
    return _result;
}

#pragma implementation_key(11)
inline long ETABSv1::cAreaElm::GetProperty ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(12)
inline long ETABSv1::cAreaElm::GetThickness ( _bstr_t Name, long * ThicknessType, BSTR * ThicknessPattern, double * ThicknessPatternSF, SAFEARRAY * * Thickness ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4008\x4005\x6005", (BSTR)Name, ThicknessType, ThicknessPattern, ThicknessPatternSF, Thickness);
    return _result;
}

#pragma implementation_key(13)
inline long ETABSv1::cAreaElm::GetTransformationMatrix ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

//
// dispinterface cLineElm wrapper method implementations
//

#pragma implementation_key(14)
inline long ETABSv1::cLineElm::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(15)
inline long ETABSv1::cLineElm::GetEndLengthOffset ( _bstr_t Name, double * Length1, double * Length2, double * RZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005", (BSTR)Name, Length1, Length2, RZ);
    return _result;
}

#pragma implementation_key(16)
inline long ETABSv1::cLineElm::GetInsertionPoint ( _bstr_t Name, SAFEARRAY * * Offset1, SAFEARRAY * * Offset2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x6005", (BSTR)Name, Offset1, Offset2);
    return _result;
}

#pragma implementation_key(17)
inline long ETABSv1::cLineElm::GetLoadDistributed ( _bstr_t Name, long * NumberItems, SAFEARRAY * * LineName, SAFEARRAY * * LoadPat, SAFEARRAY * * MyType, SAFEARRAY * * CSys, SAFEARRAY * * Dir, SAFEARRAY * * RD1, SAFEARRAY * * RD2, SAFEARRAY * * Dist1, SAFEARRAY * * Dist2, SAFEARRAY * * Val1, SAFEARRAY * * Val2, enum eItemTypeElm ItemTypeElm ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6008\x6003\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, LineName, LoadPat, MyType, CSys, Dir, RD1, RD2, Dist1, Dist2, Val1, Val2, ItemTypeElm);
    return _result;
}

#pragma implementation_key(18)
inline long ETABSv1::cLineElm::GetLoadPoint ( _bstr_t Name, long * NumberItems, SAFEARRAY * * LineName, SAFEARRAY * * LoadPat, SAFEARRAY * * MyType, SAFEARRAY * * CSys, SAFEARRAY * * Dir, SAFEARRAY * * RelDist, SAFEARRAY * * Dist, SAFEARRAY * * Val, enum eItemTypeElm ItemTypeElm ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6008\x6003\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, LineName, LoadPat, MyType, CSys, Dir, RelDist, Dist, Val, ItemTypeElm);
    return _result;
}

#pragma implementation_key(19)
inline long ETABSv1::cLineElm::GetLoadTemperature ( _bstr_t Name, long * NumberItems, SAFEARRAY * * LineName, SAFEARRAY * * LoadPat, SAFEARRAY * * MyType, SAFEARRAY * * Val, SAFEARRAY * * PatternName, enum eItemTypeElm ItemTypeElm ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6005\x6008\x0003", (BSTR)Name, NumberItems, LineName, LoadPat, MyType, Val, PatternName, ItemTypeElm);
    return _result;
}

#pragma implementation_key(20)
inline long ETABSv1::cLineElm::GetLocalAxes ( _bstr_t Name, double * Ang ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)Name, Ang);
    return _result;
}

#pragma implementation_key(21)
inline long ETABSv1::cLineElm::GetMaterialOverwrite ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(22)
inline long ETABSv1::cLineElm::GetModifiers ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(23)
inline long ETABSv1::cLineElm::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(24)
inline long ETABSv1::cLineElm::GetObj ( _bstr_t Name, BSTR * Obj, long * ObjType, double * RDI, double * RDJ ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4003\x4005\x4005", (BSTR)Name, Obj, ObjType, RDI, RDJ);
    return _result;
}

#pragma implementation_key(25)
inline long ETABSv1::cLineElm::GetPoints ( _bstr_t Name, BSTR * Point1, BSTR * Point2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008", (BSTR)Name, Point1, Point2);
    return _result;
}

#pragma implementation_key(26)
inline long ETABSv1::cLineElm::GetProperty ( _bstr_t Name, BSTR * PropName, long * ObjType, VARIANT_BOOL * Var, double * SVarRelStartLoc, double * SVarTotalLength ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4003\x400b\x4005\x4005", (BSTR)Name, PropName, ObjType, Var, SVarRelStartLoc, SVarTotalLength);
    return _result;
}

#pragma implementation_key(27)
inline long ETABSv1::cLineElm::GetReleases ( _bstr_t Name, SAFEARRAY * * II, SAFEARRAY * * JJ, SAFEARRAY * * StartValue, SAFEARRAY * * EndValue ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x6005\x6005", (BSTR)Name, II, JJ, StartValue, EndValue);
    return _result;
}

#pragma implementation_key(28)
inline long ETABSv1::cLineElm::GetTCLimits ( _bstr_t Name, VARIANT_BOOL * LimitCompressionExists, double * LimitCompression, VARIANT_BOOL * LimitTensionExists, double * LimitTension ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b\x4005\x400b\x4005", (BSTR)Name, LimitCompressionExists, LimitCompression, LimitTensionExists, LimitTension);
    return _result;
}

#pragma implementation_key(29)
inline long ETABSv1::cLineElm::GetTransformationMatrix ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

//
// dispinterface cPointElm wrapper method implementations
//

#pragma implementation_key(30)
inline long ETABSv1::cPointElm::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(31)
inline long ETABSv1::cPointElm::CountConstraint ( long * Count, _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x0008", Count, (BSTR)Name);
    return _result;
}

#pragma implementation_key(32)
inline long ETABSv1::cPointElm::CountLoadDispl ( long * Count, _bstr_t Name, _bstr_t LoadPat ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x0008\x0008", Count, (BSTR)Name, (BSTR)LoadPat);
    return _result;
}

#pragma implementation_key(33)
inline long ETABSv1::cPointElm::CountLoadForce ( long * Count, _bstr_t Name, _bstr_t LoadPat ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x0008\x0008", Count, (BSTR)Name, (BSTR)LoadPat);
    return _result;
}

#pragma implementation_key(34)
inline long ETABSv1::cPointElm::CountRestraint ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(35)
inline long ETABSv1::cPointElm::CountSpring ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(36)
inline long ETABSv1::cPointElm::GetConnectivity ( _bstr_t Name, long * NumberItems, SAFEARRAY * * ObjectType, SAFEARRAY * * ObjectName, SAFEARRAY * * PointNumber ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6008\x6003", (BSTR)Name, NumberItems, ObjectType, ObjectName, PointNumber);
    return _result;
}

#pragma implementation_key(37)
inline long ETABSv1::cPointElm::GetConstraint ( _bstr_t Name, long * NumberItems, SAFEARRAY * * PointName, SAFEARRAY * * ConstraintName, enum eItemTypeElm ItemTypeElm ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x0003", (BSTR)Name, NumberItems, PointName, ConstraintName, ItemTypeElm);
    return _result;
}

#pragma implementation_key(38)
inline long ETABSv1::cPointElm::GetCoordCartesian ( _bstr_t Name, double * X, double * Y, double * Z, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x0008", (BSTR)Name, X, Y, Z, (BSTR)CSys);
    return _result;
}

#pragma implementation_key(39)
inline long ETABSv1::cPointElm::GetLoadDispl ( _bstr_t Name, long * NumberItems, SAFEARRAY * * PointName, SAFEARRAY * * LoadPat, SAFEARRAY * * LcStep, SAFEARRAY * * CSys, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3, enum eItemTypeElm ItemTypeElm ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, PointName, LoadPat, LcStep, CSys, U1, U2, U3, R1, R2, R3, ItemTypeElm);
    return _result;
}

#pragma implementation_key(40)
inline long ETABSv1::cPointElm::GetLoadForce ( _bstr_t Name, long * NumberItems, SAFEARRAY * * PointName, SAFEARRAY * * LoadPat, SAFEARRAY * * LcStep, SAFEARRAY * * CSys, SAFEARRAY * * F1, SAFEARRAY * * F2, SAFEARRAY * * F3, SAFEARRAY * * M1, SAFEARRAY * * M2, SAFEARRAY * * M3, enum eItemTypeElm ItemTypeElm ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, PointName, LoadPat, LcStep, CSys, F1, F2, F3, M1, M2, M3, ItemTypeElm);
    return _result;
}

#pragma implementation_key(41)
inline long ETABSv1::cPointElm::GetLocalAxes ( _bstr_t Name, double * A, double * B, double * C ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005", (BSTR)Name, A, B, C);
    return _result;
}

#pragma implementation_key(42)
inline long ETABSv1::cPointElm::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(43)
inline long ETABSv1::cPointElm::GetObj ( _bstr_t Name, BSTR * Obj, long * ObjType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4003", (BSTR)Name, Obj, ObjType);
    return _result;
}

#pragma implementation_key(44)
inline long ETABSv1::cPointElm::GetPatternValue ( _bstr_t Name, _bstr_t PatternName, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4005", (BSTR)Name, (BSTR)PatternName, Value);
    return _result;
}

#pragma implementation_key(45)
inline long ETABSv1::cPointElm::GetRestraint ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(46)
inline long ETABSv1::cPointElm::GetSpring ( _bstr_t Name, SAFEARRAY * * K ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, K);
    return _result;
}

#pragma implementation_key(47)
inline long ETABSv1::cPointElm::GetSpringCoupled ( _bstr_t Name, SAFEARRAY * * K ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, K);
    return _result;
}

#pragma implementation_key(48)
inline long ETABSv1::cPointElm::GetTransformationMatrix ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(49)
inline long ETABSv1::cPointElm::IsSpringCoupled ( _bstr_t Name, VARIANT_BOOL * IsCoupled ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, IsCoupled);
    return _result;
}

//
// dispinterface cAnalysisResults wrapper method implementations
//

#pragma implementation_key(50)
inline long ETABSv1::cAnalysisResults::AreaForceShell ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * PointElm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * F11, SAFEARRAY * * F22, SAFEARRAY * * F12, SAFEARRAY * * FMax, SAFEARRAY * * FMin, SAFEARRAY * * FAngle, SAFEARRAY * * FVM, SAFEARRAY * * M11, SAFEARRAY * * M22, SAFEARRAY * * M12, SAFEARRAY * * MMax, SAFEARRAY * * MMin, SAFEARRAY * * MAngle, SAFEARRAY * * V13, SAFEARRAY * * V23, SAFEARRAY * * VMax, SAFEARRAY * * VAngle ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, PointElm, LoadCase, StepType, StepNum, F11, F22, F12, FMax, FMin, FAngle, FVM, M11, M22, M12, MMax, MMin, MAngle, V13, V23, VMax, VAngle);
    return _result;
}

#pragma implementation_key(51)
inline long ETABSv1::cAnalysisResults::AreaJointForceShell ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * PointElm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * F1, SAFEARRAY * * F2, SAFEARRAY * * F3, SAFEARRAY * * M1, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, PointElm, LoadCase, StepType, StepNum, F1, F2, F3, M1, M2, M3);
    return _result;
}

#pragma implementation_key(52)
inline long ETABSv1::cAnalysisResults::AreaStressShell ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * PointElm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * S11Top, SAFEARRAY * * S22Top, SAFEARRAY * * S12Top, SAFEARRAY * * SMaxTop, SAFEARRAY * * SMinTop, SAFEARRAY * * SAngleTop, SAFEARRAY * * SVMTop, SAFEARRAY * * S11Bot, SAFEARRAY * * S22Bot, SAFEARRAY * * S12Bot, SAFEARRAY * * SMaxBot, SAFEARRAY * * SMinBot, SAFEARRAY * * SAngleBot, SAFEARRAY * * SVMBot, SAFEARRAY * * S13Avg, SAFEARRAY * * S23Avg, SAFEARRAY * * SMaxAvg, SAFEARRAY * * SAngleAvg ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, PointElm, LoadCase, StepType, StepNum, S11Top, S22Top, S12Top, SMaxTop, SMinTop, SAngleTop, SVMTop, S11Bot, S22Bot, S12Bot, SMaxBot, SMinBot, SAngleBot, SVMBot, S13Avg, S23Avg, SMaxAvg, SAngleAvg);
    return _result;
}

#pragma implementation_key(53)
inline long ETABSv1::cAnalysisResults::AreaStressShellLayered ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * Layer, SAFEARRAY * * IntPtNum, SAFEARRAY * * IntPtLoc, SAFEARRAY * * PointElm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * S11, SAFEARRAY * * S22, SAFEARRAY * * S12, SAFEARRAY * * SMax, SAFEARRAY * * SMin, SAFEARRAY * * SAngle, SAFEARRAY * * SVM, SAFEARRAY * * S13Avg, SAFEARRAY * * S23Avg, SAFEARRAY * * SMaxAvg, SAFEARRAY * * SAngleAvg ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6003\x6005\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, Layer, IntPtNum, IntPtLoc, PointElm, LoadCase, StepType, StepNum, S11, S22, S12, SMax, SMin, SAngle, SVM, S13Avg, S23Avg, SMaxAvg, SAngleAvg);
    return _result;
}

#pragma implementation_key(54)
inline long ETABSv1::cAnalysisResults::AssembledJointMass ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * PointElm, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, PointElm, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(55)
inline long ETABSv1::cAnalysisResults::BaseReact ( long * NumberResults, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * FX, SAFEARRAY * * FY, SAFEARRAY * * FZ, SAFEARRAY * * MX, SAFEARRAY * * ParamMy, SAFEARRAY * * MZ, double * GX, double * GY, double * GZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x4005\x4005\x4005", NumberResults, LoadCase, StepType, StepNum, FX, FY, FZ, MX, ParamMy, MZ, GX, GY, GZ);
    return _result;
}

#pragma implementation_key(56)
inline long ETABSv1::cAnalysisResults::BaseReactWithCentroid ( long * NumberResults, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * FX, SAFEARRAY * * FY, SAFEARRAY * * FZ, SAFEARRAY * * MX, SAFEARRAY * * ParamMy, SAFEARRAY * * MZ, double * GX, double * GY, double * GZ, SAFEARRAY * * XCentroidForFX, SAFEARRAY * * YCentroidForFX, SAFEARRAY * * ZCentroidForFX, SAFEARRAY * * XCentroidForFY, SAFEARRAY * * YCentroidForFY, SAFEARRAY * * ZCentroidForFY, SAFEARRAY * * XCentroidForFZ, SAFEARRAY * * YCentroidForFZ, SAFEARRAY * * ZCentroidForFZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x4005\x4005\x4005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005", NumberResults, LoadCase, StepType, StepNum, FX, FY, FZ, MX, ParamMy, MZ, GX, GY, GZ, XCentroidForFX, YCentroidForFX, ZCentroidForFX, XCentroidForFY, YCentroidForFY, ZCentroidForFY, XCentroidForFZ, YCentroidForFZ, ZCentroidForFZ);
    return _result;
}

#pragma implementation_key(57)
inline long ETABSv1::cAnalysisResults::BucklingFactor ( long * NumberResults, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * Factor ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6005\x6005", NumberResults, LoadCase, StepType, StepNum, Factor);
    return _result;
}

#pragma implementation_key(58)
inline long ETABSv1::cAnalysisResults::FrameForce ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * ObjSta, SAFEARRAY * * Elm, SAFEARRAY * * ElmSta, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6005\x6008\x6005\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, ObjSta, Elm, ElmSta, LoadCase, StepType, StepNum, P, V2, V3, T, M2, M3);
    return _result;
}

#pragma implementation_key(59)
inline long ETABSv1::cAnalysisResults::FrameJointForce ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * PointElm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * F1, SAFEARRAY * * F2, SAFEARRAY * * F3, SAFEARRAY * * M1, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, PointElm, LoadCase, StepType, StepNum, F1, F2, F3, M1, M2, M3);
    return _result;
}

#pragma implementation_key(60)
inline long ETABSv1::cAnalysisResults::GeneralizedDispl ( _bstr_t Name, long * NumberResults, SAFEARRAY * * GD, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * DType, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6008\x6005\x6008\x6005", (BSTR)Name, NumberResults, GD, LoadCase, StepType, StepNum, DType, Value);
    return _result;
}

#pragma implementation_key(61)
inline long ETABSv1::cAnalysisResults::JointAcc ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, LoadCase, StepType, StepNum, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(62)
inline long ETABSv1::cAnalysisResults::JointAccAbs ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, LoadCase, StepType, StepNum, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(63)
inline long ETABSv1::cAnalysisResults::JointDispl ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, LoadCase, StepType, StepNum, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(64)
inline long ETABSv1::cAnalysisResults::JointDisplAbs ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, LoadCase, StepType, StepNum, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(65)
inline long ETABSv1::cAnalysisResults::JointReact ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * F1, SAFEARRAY * * F2, SAFEARRAY * * F3, SAFEARRAY * * M1, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, LoadCase, StepType, StepNum, F1, F2, F3, M1, M2, M3);
    return _result;
}

#pragma implementation_key(66)
inline long ETABSv1::cAnalysisResults::JointVel ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, LoadCase, StepType, StepNum, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(67)
inline long ETABSv1::cAnalysisResults::JointVelAbs ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, LoadCase, StepType, StepNum, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(68)
inline long ETABSv1::cAnalysisResults::LinkDeformation ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, LoadCase, StepType, StepNum, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(69)
inline long ETABSv1::cAnalysisResults::LinkForce ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * PointElm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, PointElm, LoadCase, StepType, StepNum, P, V2, V3, T, M2, M3);
    return _result;
}

#pragma implementation_key(70)
inline long ETABSv1::cAnalysisResults::LinkJointForce ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * PointElm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * F1, SAFEARRAY * * F2, SAFEARRAY * * F3, SAFEARRAY * * M1, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, PointElm, LoadCase, StepType, StepNum, F1, F2, F3, M1, M2, M3);
    return _result;
}

#pragma implementation_key(71)
inline long ETABSv1::cAnalysisResults::ModalLoadParticipationRatios ( long * NumberResults, SAFEARRAY * * LoadCase, SAFEARRAY * * ItemType, SAFEARRAY * * Item, SAFEARRAY * * Stat, SAFEARRAY * * Dyn ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008\x6005\x6005", NumberResults, LoadCase, ItemType, Item, Stat, Dyn);
    return _result;
}

#pragma implementation_key(72)
inline long ETABSv1::cAnalysisResults::ModalParticipatingMassRatios ( long * NumberResults, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * Period, SAFEARRAY * * UX, SAFEARRAY * * UY, SAFEARRAY * * UZ, SAFEARRAY * * SumUX, SAFEARRAY * * SumUY, SAFEARRAY * * SumUZ, SAFEARRAY * * RX, SAFEARRAY * * RY, SAFEARRAY * * RZ, SAFEARRAY * * SumRX, SAFEARRAY * * SumRY, SAFEARRAY * * SumRZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005", NumberResults, LoadCase, StepType, StepNum, Period, UX, UY, UZ, SumUX, SumUY, SumUZ, RX, RY, RZ, SumRX, SumRY, SumRZ);
    return _result;
}

#pragma implementation_key(73)
inline long ETABSv1::cAnalysisResults::ModalParticipationFactors ( long * NumberResults, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * Period, SAFEARRAY * * UX, SAFEARRAY * * UY, SAFEARRAY * * UZ, SAFEARRAY * * RX, SAFEARRAY * * RY, SAFEARRAY * * RZ, SAFEARRAY * * ModalMass, SAFEARRAY * * ModalStiff ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005", NumberResults, LoadCase, StepType, StepNum, Period, UX, UY, UZ, RX, RY, RZ, ModalMass, ModalStiff);
    return _result;
}

#pragma implementation_key(74)
inline long ETABSv1::cAnalysisResults::ModalPeriod ( long * NumberResults, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * Period, SAFEARRAY * * Frequency, SAFEARRAY * * CircFreq, SAFEARRAY * * EigenValue ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6005\x6005\x6005\x6005\x6005", NumberResults, LoadCase, StepType, StepNum, Period, Frequency, CircFreq, EigenValue);
    return _result;
}

#pragma implementation_key(75)
inline long ETABSv1::cAnalysisResults::ModeShape ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, LoadCase, StepType, StepNum, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(76)
inline long ETABSv1::cAnalysisResults::PanelZoneDeformation ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Elm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Elm, LoadCase, StepType, StepNum, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(77)
inline long ETABSv1::cAnalysisResults::PanelZoneForce ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Elm, SAFEARRAY * * PointElm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Elm, PointElm, LoadCase, StepType, StepNum, P, V2, V3, T, M2, M3);
    return _result;
}

#pragma implementation_key(78)
inline long ETABSv1::cAnalysisResults::SectionCutAnalysis ( long * NumberResults, SAFEARRAY * * SCut, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * F1, SAFEARRAY * * F2, SAFEARRAY * * F3, SAFEARRAY * * M1, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", NumberResults, SCut, LoadCase, StepType, StepNum, F1, F2, F3, M1, M2, M3);
    return _result;
}

#pragma implementation_key(79)
inline long ETABSv1::cAnalysisResults::SectionCutDesign ( long * NumberResults, SAFEARRAY * * SCut, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", NumberResults, SCut, LoadCase, StepType, StepNum, P, V2, V3, T, M2, M3);
    return _result;
}

#pragma implementation_key(80)
inline ETABSv1::cAnalysisResultsSetupPtr ETABSv1::cAnalysisResults::GetSetup ( ) {
    struct cAnalysisResultsSetup * _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cAnalysisResultsSetupPtr(_result, false);
}

#pragma implementation_key(81)
inline long ETABSv1::cAnalysisResults::AreaStrainShell ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * PointElm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * e11top, SAFEARRAY * * e22top, SAFEARRAY * * g12top, SAFEARRAY * * emaxtop, SAFEARRAY * * emintop, SAFEARRAY * * eangletop, SAFEARRAY * * evmtop, SAFEARRAY * * e11bot, SAFEARRAY * * e22bot, SAFEARRAY * * g12bot, SAFEARRAY * * emaxbot, SAFEARRAY * * eminbot, SAFEARRAY * * eanglebot, SAFEARRAY * * evmbot, SAFEARRAY * * g13avg, SAFEARRAY * * g23avg, SAFEARRAY * * gmaxavg, SAFEARRAY * * gangleavg ) {
    long _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, PointElm, LoadCase, StepType, StepNum, e11top, e22top, g12top, emaxtop, emintop, eangletop, evmtop, e11bot, e22bot, g12bot, emaxbot, eminbot, eanglebot, evmbot, g13avg, g23avg, gmaxavg, gangleavg);
    return _result;
}

#pragma implementation_key(82)
inline long ETABSv1::cAnalysisResults::AreaStrainShellLayered ( _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * Obj, SAFEARRAY * * Elm, SAFEARRAY * * Layer, SAFEARRAY * * IntPtNum, SAFEARRAY * * IntPtLoc, SAFEARRAY * * PointElm, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * E11, SAFEARRAY * * E22, SAFEARRAY * * G12, SAFEARRAY * * EMax, SAFEARRAY * * EMin, SAFEARRAY * * EAngle, SAFEARRAY * * EVM, SAFEARRAY * * g13avg, SAFEARRAY * * g23avg, SAFEARRAY * * gmaxavg, SAFEARRAY * * gangleavg ) {
    long _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6008\x6008\x6008\x6003\x6005\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, ItemTypeElm, NumberResults, Obj, Elm, Layer, IntPtNum, IntPtLoc, PointElm, LoadCase, StepType, StepNum, E11, E22, G12, EMax, EMin, EAngle, EVM, g13avg, g23avg, gmaxavg, gangleavg);
    return _result;
}

#pragma implementation_key(83)
inline long ETABSv1::cAnalysisResults::AssembledJointMass_1 ( _bstr_t MassSourceName, _bstr_t Name, enum eItemTypeElm ItemTypeElm, long * NumberResults, SAFEARRAY * * PointElm, SAFEARRAY * * MassSource, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003\x4003\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)MassSourceName, (BSTR)Name, ItemTypeElm, NumberResults, PointElm, MassSource, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(84)
inline long ETABSv1::cAnalysisResults::PierForce ( long * NumberResults, SAFEARRAY * * StoryName, SAFEARRAY * * PierName, SAFEARRAY * * LoadCase, SAFEARRAY * * Location, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005", NumberResults, StoryName, PierName, LoadCase, Location, P, V2, V3, T, M2, M3);
    return _result;
}

#pragma implementation_key(85)
inline long ETABSv1::cAnalysisResults::SpandrelForce ( long * NumberResults, SAFEARRAY * * StoryName, SAFEARRAY * * SpandrelName, SAFEARRAY * * LoadCase, SAFEARRAY * * Location, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005", NumberResults, StoryName, SpandrelName, LoadCase, Location, P, V2, V3, T, M2, M3);
    return _result;
}

#pragma implementation_key(86)
inline long ETABSv1::cAnalysisResults::JointDrifts ( long * NumberResults, SAFEARRAY * * Story, SAFEARRAY * * Label, SAFEARRAY * * Name, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * DisplacementX, SAFEARRAY * * DisplacementY, SAFEARRAY * * DriftX, SAFEARRAY * * DriftY ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005", NumberResults, Story, Label, Name, LoadCase, StepType, StepNum, DisplacementX, DisplacementY, DriftX, DriftY);
    return _result;
}

#pragma implementation_key(87)
inline long ETABSv1::cAnalysisResults::StoryDrifts ( long * NumberResults, SAFEARRAY * * Story, SAFEARRAY * * LoadCase, SAFEARRAY * * StepType, SAFEARRAY * * StepNum, SAFEARRAY * * Direction, SAFEARRAY * * Drift, SAFEARRAY * * Label, SAFEARRAY * * X, SAFEARRAY * * Y, SAFEARRAY * * Z ) {
    long _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008\x6005\x6008\x6005\x6008\x6005\x6005\x6005", NumberResults, Story, LoadCase, StepType, StepNum, Direction, Drift, Label, X, Y, Z);
    return _result;
}

//
// dispinterface cAnalysisResultsSetup wrapper method implementations
//

#pragma implementation_key(88)
inline long ETABSv1::cAnalysisResultsSetup::DeselectAllCasesAndCombosForOutput ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(89)
inline long ETABSv1::cAnalysisResultsSetup::GetCaseSelectedForOutput ( _bstr_t Name, VARIANT_BOOL * Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(90)
inline long ETABSv1::cAnalysisResultsSetup::GetComboSelectedForOutput ( _bstr_t Name, VARIANT_BOOL * Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(91)
inline long ETABSv1::cAnalysisResultsSetup::GetOptionBaseReactLoc ( double * GX, double * GY, double * GZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x4005", GX, GY, GZ);
    return _result;
}

#pragma implementation_key(92)
inline long ETABSv1::cAnalysisResultsSetup::GetOptionBucklingMode ( long * BuckModeStart, long * BuckModeEnd, VARIANT_BOOL * BuckModeAll ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x400b", BuckModeStart, BuckModeEnd, BuckModeAll);
    return _result;
}

#pragma implementation_key(93)
inline long ETABSv1::cAnalysisResultsSetup::GetOptionDirectHist ( long * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", Value);
    return _result;
}

#pragma implementation_key(94)
inline long ETABSv1::cAnalysisResultsSetup::GetOptionModalHist ( long * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", Value);
    return _result;
}

#pragma implementation_key(95)
inline long ETABSv1::cAnalysisResultsSetup::GetOptionModeShape ( long * ModeShapeStart, long * ModeShapeEnd, VARIANT_BOOL * ModeShapesAll ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x400b", ModeShapeStart, ModeShapeEnd, ModeShapesAll);
    return _result;
}

#pragma implementation_key(96)
inline long ETABSv1::cAnalysisResultsSetup::GetOptionMultiStepStatic ( long * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", Value);
    return _result;
}

#pragma implementation_key(97)
inline long ETABSv1::cAnalysisResultsSetup::GetOptionMultiValuedCombo ( long * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", Value);
    return _result;
}

#pragma implementation_key(98)
inline long ETABSv1::cAnalysisResultsSetup::GetOptionNLStatic ( long * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", Value);
    return _result;
}

#pragma implementation_key(99)
inline long ETABSv1::cAnalysisResultsSetup::SetCaseSelectedForOutput ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(100)
inline long ETABSv1::cAnalysisResultsSetup::SetComboSelectedForOutput ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(101)
inline long ETABSv1::cAnalysisResultsSetup::SetOptionBaseReactLoc ( double GX, double GY, double GZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005", GX, GY, GZ);
    return _result;
}

#pragma implementation_key(102)
inline long ETABSv1::cAnalysisResultsSetup::SetOptionBucklingMode ( long BuckModeStart, long BuckModeEnd, VARIANT_BOOL BuckModeAll ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", BuckModeStart, BuckModeEnd, BuckModeAll);
    return _result;
}

#pragma implementation_key(103)
inline long ETABSv1::cAnalysisResultsSetup::SetOptionDirectHist ( long Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Value);
    return _result;
}

#pragma implementation_key(104)
inline long ETABSv1::cAnalysisResultsSetup::SetOptionModalHist ( long Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Value);
    return _result;
}

#pragma implementation_key(105)
inline long ETABSv1::cAnalysisResultsSetup::SetOptionModeShape ( long ModeShapeStart, long ModeShapeEnd, VARIANT_BOOL ModeShapesAll ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", ModeShapeStart, ModeShapeEnd, ModeShapesAll);
    return _result;
}

#pragma implementation_key(106)
inline long ETABSv1::cAnalysisResultsSetup::SetOptionMultiStepStatic ( long Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Value);
    return _result;
}

#pragma implementation_key(107)
inline long ETABSv1::cAnalysisResultsSetup::SetOptionMultiValuedCombo ( long Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Value);
    return _result;
}

#pragma implementation_key(108)
inline long ETABSv1::cAnalysisResultsSetup::SetOptionNLStatic ( long Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Value);
    return _result;
}

//
// dispinterface cAnalyze wrapper method implementations
//

#pragma implementation_key(109)
inline long ETABSv1::cAnalyze::CreateAnalysisModel ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(110)
inline long ETABSv1::cAnalyze::DeleteResults ( _bstr_t Name, VARIANT_BOOL All ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, All);
    return _result;
}

#pragma implementation_key(111)
inline long ETABSv1::cAnalyze::GetActiveDOF ( SAFEARRAY * * DOF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x600b", DOF);
    return _result;
}

#pragma implementation_key(112)
inline long ETABSv1::cAnalyze::GetCaseStatus ( long * NumberItems, SAFEARRAY * * CaseName, SAFEARRAY * * Status ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6003", NumberItems, CaseName, Status);
    return _result;
}

#pragma implementation_key(113)
inline long ETABSv1::cAnalyze::GetRunCaseFlag ( long * NumberItems, SAFEARRAY * * CaseName, SAFEARRAY * * Run ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x600b", NumberItems, CaseName, Run);
    return _result;
}

#pragma implementation_key(114)
inline long ETABSv1::cAnalyze::GetSolverOption ( long * SolverType, VARIANT_BOOL * Force32BitSolver, BSTR * StiffCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400b\x4008", SolverType, Force32BitSolver, StiffCase);
    return _result;
}

#pragma implementation_key(115)
inline long ETABSv1::cAnalyze::GetSolverOption_1 ( long * SolverType, long * SolverProcessType, VARIANT_BOOL * Force32BitSolver, BSTR * StiffCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x400b\x4008", SolverType, SolverProcessType, Force32BitSolver, StiffCase);
    return _result;
}

#pragma implementation_key(116)
inline long ETABSv1::cAnalyze::ModifyUndeformedGeometry ( _bstr_t CaseName, double SF, long Stage, VARIANT_BOOL Original ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0003\x000b", (BSTR)CaseName, SF, Stage, Original);
    return _result;
}

#pragma implementation_key(117)
inline long ETABSv1::cAnalyze::RunAnalysis ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(118)
inline long ETABSv1::cAnalyze::SetActiveDOF ( SAFEARRAY * * DOF ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x600b", DOF);
    return _result;
}

#pragma implementation_key(119)
inline long ETABSv1::cAnalyze::SetRunCaseFlag ( _bstr_t Name, VARIANT_BOOL Run, VARIANT_BOOL All ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x000b", (BSTR)Name, Run, All);
    return _result;
}

#pragma implementation_key(120)
inline long ETABSv1::cAnalyze::SetSolverOption ( long SolverType, VARIANT_BOOL Force32BitSolver, _bstr_t StiffCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0008", SolverType, Force32BitSolver, (BSTR)StiffCase);
    return _result;
}

#pragma implementation_key(121)
inline long ETABSv1::cAnalyze::SetSolverOption_1 ( long SolverType, long SolverProcessType, VARIANT_BOOL Force32BitSolver, _bstr_t StiffCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x0008", SolverType, SolverProcessType, Force32BitSolver, (BSTR)StiffCase);
    return _result;
}

#pragma implementation_key(122)
inline long ETABSv1::cAnalyze::ModifyUndeformedGeometryModeShape ( _bstr_t CaseName, long Mode, double MaxDispl, long Direction, VARIANT_BOOL Original ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003\x000b", (BSTR)CaseName, Mode, MaxDispl, Direction, Original);
    return _result;
}

#pragma implementation_key(123)
inline long ETABSv1::cAnalyze::GetSolverOption_2 ( long * SolverType, long * SolverProcessType, long * NumberParallelRuns, BSTR * StiffCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4003\x4008", SolverType, SolverProcessType, NumberParallelRuns, StiffCase);
    return _result;
}

#pragma implementation_key(124)
inline long ETABSv1::cAnalyze::SetSolverOption_2 ( long SolverType, long SolverProcessType, long NumberParallelRuns, _bstr_t StiffCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0008", SolverType, SolverProcessType, NumberParallelRuns, (BSTR)StiffCase);
    return _result;
}

#pragma implementation_key(125)
inline long ETABSv1::cAnalyze::MergeAnalysisResults ( _bstr_t SourceFileName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)SourceFileName);
    return _result;
}

#pragma implementation_key(126)
inline long ETABSv1::cAnalyze::GetSolverOption_3 ( long * SolverType, long * SolverProcessType, long * NumberParallelRuns, long * ResponseFileSizeMaxMB, long * NumberAnalysisThreads, BSTR * StiffCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4003\x4003\x4003\x4008", SolverType, SolverProcessType, NumberParallelRuns, ResponseFileSizeMaxMB, NumberAnalysisThreads, StiffCase);
    return _result;
}

#pragma implementation_key(127)
inline long ETABSv1::cAnalyze::SetSolverOption_3 ( long SolverType, long SolverProcessType, long NumberParallelRuns, long ResponseFileSizeMaxMB, long NumberAnalysisThreads, _bstr_t StiffCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0008", SolverType, SolverProcessType, NumberParallelRuns, ResponseFileSizeMaxMB, NumberAnalysisThreads, (BSTR)StiffCase);
    return _result;
}

#pragma implementation_key(128)
inline long ETABSv1::cAnalyze::GetDesignResponseOption ( long * NumberDesignThreads, long * NumberResponseRecoveryThreads, long * UseMemoryMappedFilesForResponseRecovery, VARIANT_BOOL * ModelDifferencesOKWhenMergingResults ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4003\x400b", NumberDesignThreads, NumberResponseRecoveryThreads, UseMemoryMappedFilesForResponseRecovery, ModelDifferencesOKWhenMergingResults);
    return _result;
}

#pragma implementation_key(129)
inline long ETABSv1::cAnalyze::SetDesignResponseOption ( long NumberDesignThreads, long NumberResponseRecoveryThreads, long UseMemoryMappedFilesForResponseRecovery, VARIANT_BOOL ModelDifferencesOKWhenMergingResults ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b", NumberDesignThreads, NumberResponseRecoveryThreads, UseMemoryMappedFilesForResponseRecovery, ModelDifferencesOKWhenMergingResults);
    return _result;
}

//
// dispinterface cDCompColEurocode_4_2004 wrapper method implementations
//

#pragma implementation_key(130)
inline long ETABSv1::cDCompColEurocode_4_2004::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(131)
inline long ETABSv1::cDCompColEurocode_4_2004::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(132)
inline long ETABSv1::cDCompColEurocode_4_2004::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(133)
inline long ETABSv1::cDCompColEurocode_4_2004::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDesignCompositeColumn wrapper method implementations
//

#pragma implementation_key(134)
inline long ETABSv1::cDesignCompositeColumn::GetCode ( BSTR * CodeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008", CodeName);
    return _result;
}

#pragma implementation_key(135)
inline long ETABSv1::cDesignCompositeColumn::GetComboDeflection ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(136)
inline long ETABSv1::cDesignCompositeColumn::GetComboStrength ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(137)
inline long ETABSv1::cDesignCompositeColumn::GetDesignSection ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(138)
inline long ETABSv1::cDesignCompositeColumn::GetGroup ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(139)
inline VARIANT_BOOL ETABSv1::cDesignCompositeColumn::GetResultsAvailable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(140)
inline long ETABSv1::cDesignCompositeColumn::GetSummaryResults ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * FrameType, SAFEARRAY * * DesignSect, SAFEARRAY * * Status, SAFEARRAY * * PMMCombo, SAFEARRAY * * PMMRatio, SAFEARRAY * * PRatio, SAFEARRAY * * MMajRatio, SAFEARRAY * * MMinRatio, SAFEARRAY * * VMajCombo, SAFEARRAY * * VMajRatio, SAFEARRAY * * VMinCombo, SAFEARRAY * * VMinRatio, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6008\x6005\x6008\x6005\x0003", (BSTR)Name, NumberItems, FrameName, FrameType, DesignSect, Status, PMMCombo, PMMRatio, PRatio, MMajRatio, MMinRatio, VMajCombo, VMajRatio, VMinCombo, VMinRatio, ItemType);
    return _result;
}

#pragma implementation_key(141)
inline long ETABSv1::cDesignCompositeColumn::DeleteResults ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(142)
inline long ETABSv1::cDesignCompositeColumn::GetTargetDispl ( long * NumberItems, SAFEARRAY * * LoadCase, SAFEARRAY * * Point, SAFEARRAY * * Displ, VARIANT_BOOL * Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6005\x400b", NumberItems, LoadCase, Point, Displ, Active);
    return _result;
}

#pragma implementation_key(143)
inline long ETABSv1::cDesignCompositeColumn::GetTargetPeriod ( long * NumberItems, BSTR * ModalCase, SAFEARRAY * * Mode, SAFEARRAY * * Period, VARIANT_BOOL * Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4008\x6003\x6005\x400b", NumberItems, ModalCase, Mode, Period, Active);
    return _result;
}

#pragma implementation_key(144)
inline long ETABSv1::cDesignCompositeColumn::ResetOverwrites ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(145)
inline long ETABSv1::cDesignCompositeColumn::SetAutoSelectNull ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(146)
inline long ETABSv1::cDesignCompositeColumn::SetCode ( _bstr_t CodeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)CodeName);
    return _result;
}

#pragma implementation_key(147)
inline long ETABSv1::cDesignCompositeColumn::SetComboDeflection ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(148)
inline long ETABSv1::cDesignCompositeColumn::SetComboStrength ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(149)
inline long ETABSv1::cDesignCompositeColumn::SetDesignSection ( _bstr_t Name, _bstr_t PropName, VARIANT_BOOL LastAnalysis, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x000b\x0003", (BSTR)Name, (BSTR)PropName, LastAnalysis, ItemType);
    return _result;
}

#pragma implementation_key(150)
inline long ETABSv1::cDesignCompositeColumn::SetGroup ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(151)
inline long ETABSv1::cDesignCompositeColumn::SetTargetDispl ( long NumberItems, SAFEARRAY * * LoadCase, SAFEARRAY * * Point, SAFEARRAY * * Displ, VARIANT_BOOL Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x6008\x6008\x6005\x000b", NumberItems, LoadCase, Point, Displ, Active);
    return _result;
}

#pragma implementation_key(152)
inline long ETABSv1::cDesignCompositeColumn::SetTargetPeriod ( long NumberItems, _bstr_t ModalCase, SAFEARRAY * * Mode, SAFEARRAY * * Period, VARIANT_BOOL Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x6003\x6005\x000b", NumberItems, (BSTR)ModalCase, Mode, Period, Active);
    return _result;
}

#pragma implementation_key(153)
inline long ETABSv1::cDesignCompositeColumn::StartDesign ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(154)
inline long ETABSv1::cDesignCompositeColumn::VerifyPassed ( long * NumberItems, long * N1, long * N2, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4003\x6008", NumberItems, N1, N2, MyName);
    return _result;
}

#pragma implementation_key(155)
inline long ETABSv1::cDesignCompositeColumn::VerifySections ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(156)
inline ETABSv1::cDCompColEurocode_4_2004Ptr ETABSv1::cDesignCompositeColumn::GetEurocode_4_2004 ( ) {
    struct cDCompColEurocode_4_2004 * _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCompColEurocode_4_2004Ptr(_result, false);
}

//
// dispinterface cDStAustralian_AS4100_2020 wrapper method implementations
//

#pragma implementation_key(157)
inline long ETABSv1::cDStAustralian_AS4100_2020::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(158)
inline long ETABSv1::cDStAustralian_AS4100_2020::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(159)
inline long ETABSv1::cDStAustralian_AS4100_2020::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(160)
inline long ETABSv1::cDStAustralian_AS4100_2020::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cHelper wrapper method implementations
//

#pragma implementation_key(161)
inline ETABSv1::cOAPIPtr ETABSv1::cHelper::CreateObject ( _bstr_t fullPath ) {
    struct cOAPI * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)fullPath);
    return cOAPIPtr(_result, false);
}

#pragma implementation_key(162)
inline ETABSv1::cOAPIPtr ETABSv1::cHelper::GetObject ( _bstr_t typeName ) {
    struct cOAPI * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)typeName);
    return cOAPIPtr(_result, false);
}

#pragma implementation_key(163)
inline ETABSv1::cOAPIPtr ETABSv1::cHelper::CreateObjectProgID ( _bstr_t progID ) {
    struct cOAPI * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008", (BSTR)progID);
    return cOAPIPtr(_result, false);
}

#pragma implementation_key(164)
inline double ETABSv1::cHelper::GetOAPIVersionNumber ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(165)
inline ETABSv1::cOAPIPtr ETABSv1::cHelper::CreateObjectHost ( _bstr_t hostName, _bstr_t fullPath ) {
    struct cOAPI * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)hostName, (BSTR)fullPath);
    return cOAPIPtr(_result, false);
}

#pragma implementation_key(166)
inline ETABSv1::cOAPIPtr ETABSv1::cHelper::CreateObjectHostPort ( _bstr_t hostName, long portNumber, _bstr_t fullPath ) {
    struct cOAPI * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x0008", (BSTR)hostName, portNumber, (BSTR)fullPath);
    return cOAPIPtr(_result, false);
}

#pragma implementation_key(167)
inline ETABSv1::cOAPIPtr ETABSv1::cHelper::CreateObjectProgIDHost ( _bstr_t hostName, _bstr_t progID ) {
    struct cOAPI * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)hostName, (BSTR)progID);
    return cOAPIPtr(_result, false);
}

#pragma implementation_key(168)
inline ETABSv1::cOAPIPtr ETABSv1::cHelper::CreateObjectProgIDHostPort ( _bstr_t hostName, long portNumber, _bstr_t progID ) {
    struct cOAPI * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x0008", (BSTR)hostName, portNumber, (BSTR)progID);
    return cOAPIPtr(_result, false);
}

#pragma implementation_key(169)
inline ETABSv1::cOAPIPtr ETABSv1::cHelper::GetObjectHost ( _bstr_t hostName, _bstr_t progID ) {
    struct cOAPI * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0008", (BSTR)hostName, (BSTR)progID);
    return cOAPIPtr(_result, false);
}

#pragma implementation_key(170)
inline ETABSv1::cOAPIPtr ETABSv1::cHelper::GetObjectHostPort ( _bstr_t hostName, long portNumber, _bstr_t progID ) {
    struct cOAPI * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003\x0008", (BSTR)hostName, portNumber, (BSTR)progID);
    return cOAPIPtr(_result, false);
}

#pragma implementation_key(171)
inline ETABSv1::cOAPIPtr ETABSv1::cHelper::GetObjectProcess ( _bstr_t typeName, long pid ) {
    struct cOAPI * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0008\x0003", (BSTR)typeName, pid);
    return cOAPIPtr(_result, false);
}

//
// dispinterface cOAPI wrapper method implementations
//

#pragma implementation_key(172)
inline long ETABSv1::cOAPI::ApplicationExit ( VARIANT_BOOL FileSave ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", FileSave);
    return _result;
}

#pragma implementation_key(173)
inline ETABSv1::cSapModelPtr ETABSv1::cOAPI::GetSapModel ( ) {
    struct cSapModel * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cSapModelPtr(_result, false);
}

#pragma implementation_key(174)
inline double ETABSv1::cOAPI::GetOAPIVersionNumber ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(175)
inline long ETABSv1::cOAPI::Hide ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(176)
inline long ETABSv1::cOAPI::Unhide ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(177)
inline VARIANT_BOOL ETABSv1::cOAPI::Visible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(178)
inline long ETABSv1::cOAPI::SetAsActiveObject ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(179)
inline long ETABSv1::cOAPI::UnsetAsActiveObject ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(180)
inline long ETABSv1::cOAPI::InternalExec ( long operation ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", operation);
    return _result;
}

#pragma implementation_key(181)
inline long ETABSv1::cOAPI::ApplicationStart ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface cSapModel wrapper method implementations
//

#pragma implementation_key(182)
inline ETABSv1::cAnalyzePtr ETABSv1::cSapModel::GetAnalyze ( ) {
    struct cAnalyze * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cAnalyzePtr(_result, false);
}

#pragma implementation_key(183)
inline ETABSv1::cAreaElmPtr ETABSv1::cSapModel::GetAreaElm ( ) {
    struct cAreaElm * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cAreaElmPtr(_result, false);
}

#pragma implementation_key(184)
inline ETABSv1::cAreaObjPtr ETABSv1::cSapModel::GetAreaObj ( ) {
    struct cAreaObj * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cAreaObjPtr(_result, false);
}

#pragma implementation_key(185)
inline ETABSv1::cConstraintPtr ETABSv1::cSapModel::GetConstraintDef ( ) {
    struct cConstraint * _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cConstraintPtr(_result, false);
}

#pragma implementation_key(186)
inline ETABSv1::cDesignConcretePtr ETABSv1::cSapModel::GetDesignConcrete ( ) {
    struct cDesignConcrete * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDesignConcretePtr(_result, false);
}

#pragma implementation_key(187)
inline ETABSv1::cDesignSteelPtr ETABSv1::cSapModel::GetDesignSteel ( ) {
    struct cDesignSteel * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDesignSteelPtr(_result, false);
}

#pragma implementation_key(188)
inline ETABSv1::cEditAreaPtr ETABSv1::cSapModel::GetEditArea ( ) {
    struct cEditArea * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cEditAreaPtr(_result, false);
}

#pragma implementation_key(189)
inline ETABSv1::cEditFramePtr ETABSv1::cSapModel::GetEditFrame ( ) {
    struct cEditFrame * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cEditFramePtr(_result, false);
}

#pragma implementation_key(190)
inline ETABSv1::cEditGeneralPtr ETABSv1::cSapModel::GetEditGeneral ( ) {
    struct cEditGeneral * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cEditGeneralPtr(_result, false);
}

#pragma implementation_key(191)
inline ETABSv1::cEditPointPtr ETABSv1::cSapModel::GetEditPoint ( ) {
    struct cEditPoint * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cEditPointPtr(_result, false);
}

#pragma implementation_key(192)
inline ETABSv1::cFilePtr ETABSv1::cSapModel::GetFile ( ) {
    struct cFile * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cFilePtr(_result, false);
}

#pragma implementation_key(193)
inline ETABSv1::cFrameObjPtr ETABSv1::cSapModel::GetFrameObj ( ) {
    struct cFrameObj * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cFrameObjPtr(_result, false);
}

#pragma implementation_key(194)
inline ETABSv1::cFunctionPtr ETABSv1::cSapModel::GetFunc ( ) {
    struct cFunction * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cFunctionPtr(_result, false);
}

#pragma implementation_key(195)
inline ETABSv1::cGenDisplPtr ETABSv1::cSapModel::GetGDispl ( ) {
    struct cGenDispl * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cGenDisplPtr(_result, false);
}

#pragma implementation_key(196)
inline enum ETABSv1::eUnits ETABSv1::cSapModel::GetDatabaseUnits ( ) {
    enum eUnits _result;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(197)
inline long ETABSv1::cSapModel::GetMergeTol ( double * MergeTol ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005", MergeTol);
    return _result;
}

#pragma implementation_key(198)
inline _bstr_t ETABSv1::cSapModel::GetModelFilename ( VARIANT_BOOL IncludePath ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x000b", IncludePath);
    return _bstr_t(_result, false);
}

#pragma implementation_key(199)
inline _bstr_t ETABSv1::cSapModel::GetModelFilepath ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(200)
inline VARIANT_BOOL ETABSv1::cSapModel::GetModelIsLocked ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(201)
inline _bstr_t ETABSv1::cSapModel::GetPresentCoordSystem ( ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_BSTR, (void*)&_result, NULL);
    return _bstr_t(_result, false);
}

#pragma implementation_key(202)
inline enum ETABSv1::eUnits ETABSv1::cSapModel::GetPresentUnits ( ) {
    enum eUnits _result;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(203)
inline long ETABSv1::cSapModel::GetProgramInfo ( BSTR * ProgramName, BSTR * ProgramVersion, BSTR * ProgramLevel ) {
    long _result = 0;
    _com_dispatch_method(this, 0x62, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008\x4008\x4008", ProgramName, ProgramVersion, ProgramLevel);
    return _result;
}

#pragma implementation_key(204)
inline long ETABSv1::cSapModel::GetProjectInfo ( long * NumberItems, SAFEARRAY * * Item, SAFEARRAY * * Data ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008", NumberItems, Item, Data);
    return _result;
}

#pragma implementation_key(205)
inline long ETABSv1::cSapModel::GetVersion ( BSTR * Version, double * MyVersionNumber ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008\x4005", Version, MyVersionNumber);
    return _result;
}

#pragma implementation_key(206)
inline ETABSv1::cGroupPtr ETABSv1::cSapModel::GetGroupDef ( ) {
    struct cGroup * _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cGroupPtr(_result, false);
}

#pragma implementation_key(207)
inline long ETABSv1::cSapModel::InitializeNewModel ( enum eUnits Units ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Units);
    return _result;
}

#pragma implementation_key(208)
inline ETABSv1::cLineElmPtr ETABSv1::cSapModel::GetLineElm ( ) {
    struct cLineElm * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cLineElmPtr(_result, false);
}

#pragma implementation_key(209)
inline ETABSv1::cLinkElmPtr ETABSv1::cSapModel::GetLinkElm ( ) {
    struct cLinkElm * _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cLinkElmPtr(_result, false);
}

#pragma implementation_key(210)
inline ETABSv1::cLinkObjPtr ETABSv1::cSapModel::GetLinkObj ( ) {
    struct cLinkObj * _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cLinkObjPtr(_result, false);
}

#pragma implementation_key(211)
inline ETABSv1::cLoadCasesPtr ETABSv1::cSapModel::GetLoadCases ( ) {
    struct cLoadCases * _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cLoadCasesPtr(_result, false);
}

#pragma implementation_key(212)
inline ETABSv1::cLoadPatternsPtr ETABSv1::cSapModel::GetLoadPatterns ( ) {
    struct cLoadPatterns * _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cLoadPatternsPtr(_result, false);
}

#pragma implementation_key(213)
inline ETABSv1::cOptionsPtr ETABSv1::cSapModel::GetOptions ( ) {
    struct cOptions * _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cOptionsPtr(_result, false);
}

#pragma implementation_key(214)
inline ETABSv1::cPatternPtr ETABSv1::cSapModel::GetPatternDef ( ) {
    struct cPattern * _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPatternPtr(_result, false);
}

#pragma implementation_key(215)
inline ETABSv1::cPointElmPtr ETABSv1::cSapModel::GetPointElm ( ) {
    struct cPointElm * _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPointElmPtr(_result, false);
}

#pragma implementation_key(216)
inline ETABSv1::cPointObjPtr ETABSv1::cSapModel::GetPointObj ( ) {
    struct cPointObj * _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPointObjPtr(_result, false);
}

#pragma implementation_key(217)
inline ETABSv1::cPropAreaPtr ETABSv1::cSapModel::GetPropArea ( ) {
    struct cPropArea * _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropAreaPtr(_result, false);
}

#pragma implementation_key(218)
inline ETABSv1::cPropFramePtr ETABSv1::cSapModel::GetPropFrame ( ) {
    struct cPropFrame * _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropFramePtr(_result, false);
}

#pragma implementation_key(219)
inline ETABSv1::cPropLinkPtr ETABSv1::cSapModel::GetPropLink ( ) {
    struct cPropLink * _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropLinkPtr(_result, false);
}

#pragma implementation_key(220)
inline ETABSv1::cPropMaterialPtr ETABSv1::cSapModel::GetPropMaterial ( ) {
    struct cPropMaterial * _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropMaterialPtr(_result, false);
}

#pragma implementation_key(221)
inline ETABSv1::cPropRebarPtr ETABSv1::cSapModel::GetPropRebar ( ) {
    struct cPropRebar * _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropRebarPtr(_result, false);
}

#pragma implementation_key(222)
inline ETABSv1::cPropTendonPtr ETABSv1::cSapModel::GetPropTendon ( ) {
    struct cPropTendon * _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropTendonPtr(_result, false);
}

#pragma implementation_key(223)
inline ETABSv1::cComboPtr ETABSv1::cSapModel::GetRespCombo ( ) {
    struct cCombo * _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cComboPtr(_result, false);
}

#pragma implementation_key(224)
inline ETABSv1::cAnalysisResultsPtr ETABSv1::cSapModel::GetResults ( ) {
    struct cAnalysisResults * _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cAnalysisResultsPtr(_result, false);
}

#pragma implementation_key(225)
inline ETABSv1::cSelectPtr ETABSv1::cSapModel::GetSelectObj ( ) {
    struct cSelect * _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cSelectPtr(_result, false);
}

#pragma implementation_key(226)
inline long ETABSv1::cSapModel::SetMergeTol ( double MergeTol ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005", MergeTol);
    return _result;
}

#pragma implementation_key(227)
inline long ETABSv1::cSapModel::SetModelIsLocked ( VARIANT_BOOL Lockit ) {
    long _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", Lockit);
    return _result;
}

#pragma implementation_key(228)
inline long ETABSv1::cSapModel::SetPresentUnits ( enum eUnits Units ) {
    long _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Units);
    return _result;
}

#pragma implementation_key(229)
inline long ETABSv1::cSapModel::SetProjectInfo ( _bstr_t Item, _bstr_t Data ) {
    long _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Item, (BSTR)Data);
    return _result;
}

#pragma implementation_key(230)
inline ETABSv1::cTendonObjPtr ETABSv1::cSapModel::GetTendonObj ( ) {
    struct cTendonObj * _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cTendonObjPtr(_result, false);
}

#pragma implementation_key(231)
inline ETABSv1::cViewPtr ETABSv1::cSapModel::GetView ( ) {
    struct cView * _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cViewPtr(_result, false);
}

#pragma implementation_key(232)
inline ETABSv1::cDesignResultsPtr ETABSv1::cSapModel::GetDesignResults ( ) {
    struct cDesignResults * _result = 0;
    _com_dispatch_method(this, 0x61, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDesignResultsPtr(_result, false);
}

#pragma implementation_key(233)
inline ETABSv1::cDatabaseTablesPtr ETABSv1::cSapModel::GetDatabaseTables ( ) {
    struct cDatabaseTables * _result = 0;
    _com_dispatch_method(this, 0x63, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDatabaseTablesPtr(_result, false);
}

#pragma implementation_key(234)
inline ETABSv1::cDesignCompositeBeamPtr ETABSv1::cSapModel::GetDesignCompositeBeam ( ) {
    struct cDesignCompositeBeam * _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDesignCompositeBeamPtr(_result, false);
}

#pragma implementation_key(235)
inline ETABSv1::cGridSysPtr ETABSv1::cSapModel::GetGridSys ( ) {
    struct cGridSys * _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cGridSysPtr(_result, false);
}

#pragma implementation_key(236)
inline ETABSv1::cStoryPtr ETABSv1::cSapModel::GetStory ( ) {
    struct cStory * _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cStoryPtr(_result, false);
}

#pragma implementation_key(237)
inline ETABSv1::cTowerPtr ETABSv1::cSapModel::GetTower ( ) {
    struct cTower * _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cTowerPtr(_result, false);
}

#pragma implementation_key(238)
inline long ETABSv1::cSapModel::GetDatabaseUnits_2 ( enum eForce * forceUnits, enum eLength * lengthUnits, enum eTemperature * temperatureUnits ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4003", forceUnits, lengthUnits, temperatureUnits);
    return _result;
}

#pragma implementation_key(239)
inline long ETABSv1::cSapModel::GetPresentUnits_2 ( enum eForce * forceUnits, enum eLength * lengthUnits, enum eTemperature * temperatureUnits ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4003", forceUnits, lengthUnits, temperatureUnits);
    return _result;
}

#pragma implementation_key(240)
inline long ETABSv1::cSapModel::SetPresentUnits_2 ( enum eForce forceUnits, enum eLength lengthUnits, enum eTemperature temperatureUnits ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", forceUnits, lengthUnits, temperatureUnits);
    return _result;
}

#pragma implementation_key(241)
inline ETABSv1::cDiaphragmPtr ETABSv1::cSapModel::GetDiaphragm ( ) {
    struct cDiaphragm * _result = 0;
    _com_dispatch_method(this, 0x3d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDiaphragmPtr(_result, false);
}

#pragma implementation_key(242)
inline long ETABSv1::cSapModel::TreeIsUpdateSuspended ( VARIANT_BOOL * IsSuspended ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400b", IsSuspended);
    return _result;
}

#pragma implementation_key(243)
inline long ETABSv1::cSapModel::TreeResumeUpdateData ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(244)
inline long ETABSv1::cSapModel::TreeSuspendUpdateData ( VARIANT_BOOL updateAtResume ) {
    long _result = 0;
    _com_dispatch_method(this, 0x40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", updateAtResume);
    return _result;
}

#pragma implementation_key(245)
inline ETABSv1::cPierLabelPtr ETABSv1::cSapModel::GetPierLabel ( ) {
    struct cPierLabel * _result = 0;
    _com_dispatch_method(this, 0x58, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPierLabelPtr(_result, false);
}

#pragma implementation_key(246)
inline ETABSv1::cSpandrelLabelPtr ETABSv1::cSapModel::GetSpandrelLabel ( ) {
    struct cSpandrelLabel * _result = 0;
    _com_dispatch_method(this, 0x59, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cSpandrelLabelPtr(_result, false);
}

#pragma implementation_key(247)
inline ETABSv1::cDetailingPtr ETABSv1::cSapModel::GetDetailing ( ) {
    struct cDetailing * _result = 0;
    _com_dispatch_method(this, 0x5a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDetailingPtr(_result, false);
}

#pragma implementation_key(248)
inline ETABSv1::cPropPointSpringPtr ETABSv1::cSapModel::GetPropPointSpring ( ) {
    struct cPropPointSpring * _result = 0;
    _com_dispatch_method(this, 0x5c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropPointSpringPtr(_result, false);
}

#pragma implementation_key(249)
inline ETABSv1::cPropLineSpringPtr ETABSv1::cSapModel::GetPropLineSpring ( ) {
    struct cPropLineSpring * _result = 0;
    _com_dispatch_method(this, 0x5d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropLineSpringPtr(_result, false);
}

#pragma implementation_key(250)
inline ETABSv1::cPropAreaSpringPtr ETABSv1::cSapModel::GetPropAreaSpring ( ) {
    struct cPropAreaSpring * _result = 0;
    _com_dispatch_method(this, 0x5e, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropAreaSpringPtr(_result, false);
}

#pragma implementation_key(251)
inline ETABSv1::cDesignConcreteSlabPtr ETABSv1::cSapModel::GetDesignConcreteSlab ( ) {
    struct cDesignConcreteSlab * _result = 0;
    _com_dispatch_method(this, 0x5f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDesignConcreteSlabPtr(_result, false);
}

#pragma implementation_key(252)
inline ETABSv1::cDesignShearWallPtr ETABSv1::cSapModel::GetDesignShearWall ( ) {
    struct cDesignShearWall * _result = 0;
    _com_dispatch_method(this, 0x60, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDesignShearWallPtr(_result, false);
}

#pragma implementation_key(253)
inline ETABSv1::cDesignCompositeColumnPtr ETABSv1::cSapModel::GetDesignCompositeColumn ( ) {
    struct cDesignCompositeColumn * _result = 0;
    _com_dispatch_method(this, 0x66, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDesignCompositeColumnPtr(_result, false);
}

//
// dispinterface cPluginContract wrapper method implementations
//

#pragma implementation_key(254)
inline HRESULT ETABSv1::cPluginContract::Main ( struct cSapModel * * SapModel, struct cPluginCallback * * ISapPlugin ) {
    return _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x4009\x4009", SapModel, ISapPlugin);
}

#pragma implementation_key(255)
inline long ETABSv1::cPluginContract::Info ( BSTR * Text ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008", Text);
    return _result;
}

//
// dispinterface cPluginCallback wrapper method implementations
//

#pragma implementation_key(256)
inline long ETABSv1::cPluginCallback::GetErrorFlag ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(257)
inline HRESULT ETABSv1::cPluginCallback::Finish ( long iVal ) {
    return _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_EMPTY, NULL, 
        L"\x0003", iVal);
}

#pragma implementation_key(258)
inline VARIANT_BOOL ETABSv1::cPluginCallback::GetFinished ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface cGridSys wrapper method implementations
//

#pragma implementation_key(259)
inline long ETABSv1::cGridSys::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(260)
inline long ETABSv1::cGridSys::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(261)
inline long ETABSv1::cGridSys::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(262)
inline long ETABSv1::cGridSys::GetGridSys ( _bstr_t Name, double * X, double * Y, double * RZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005", (BSTR)Name, X, Y, RZ);
    return _result;
}

#pragma implementation_key(263)
inline long ETABSv1::cGridSys::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(264)
inline long ETABSv1::cGridSys::GetTransformationMatrix ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(265)
inline long ETABSv1::cGridSys::SetGridSys ( _bstr_t Name, double X, double Y, double RZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005", (BSTR)Name, X, Y, RZ);
    return _result;
}

#pragma implementation_key(266)
inline long ETABSv1::cGridSys::GetGridSys_2 ( _bstr_t Name, double * Xo, double * Yo, double * RZ, BSTR * GridSysType, long * NumXLines, long * NumYLines, SAFEARRAY * * GridLineIDX, SAFEARRAY * * GridLineIDY, SAFEARRAY * * OrdinateX, SAFEARRAY * * OrdinateY, SAFEARRAY * * VisibleX, SAFEARRAY * * VisibleY, SAFEARRAY * * BubbleLocX, SAFEARRAY * * BubbleLocY ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4008\x4003\x4003\x6008\x6008\x6005\x6005\x600b\x600b\x6008\x6008", (BSTR)Name, Xo, Yo, RZ, GridSysType, NumXLines, NumYLines, GridLineIDX, GridLineIDY, OrdinateX, OrdinateY, VisibleX, VisibleY, BubbleLocX, BubbleLocY);
    return _result;
}

#pragma implementation_key(267)
inline long ETABSv1::cGridSys::GetGridSysType ( _bstr_t Name, BSTR * GridSysType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, GridSysType);
    return _result;
}

#pragma implementation_key(268)
inline long ETABSv1::cGridSys::GetNameTypeList ( long * NumberNames, SAFEARRAY * * GridSysName, SAFEARRAY * * GridSysType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008", NumberNames, GridSysName, GridSysType);
    return _result;
}

#pragma implementation_key(269)
inline long ETABSv1::cGridSys::GetGridSysCartesian ( _bstr_t Name, double * Xo, double * Yo, double * RZ, VARIANT_BOOL * StoryRangeIsDefault, BSTR * TopStory, BSTR * BottomStory, double * BubbleSize, long * GridColor, long * NumXLines, SAFEARRAY * * GridLineIDX, SAFEARRAY * * OrdinateX, SAFEARRAY * * VisibleX, SAFEARRAY * * BubbleLocX, long * NumYLines, SAFEARRAY * * GridLineIDY, SAFEARRAY * * OrdinateY, SAFEARRAY * * VisibleY, SAFEARRAY * * BubbleLocY, long * NumGenLines, SAFEARRAY * * GridLineIDGen, SAFEARRAY * * GenOrdX1, SAFEARRAY * * GenOrdY1, SAFEARRAY * * GenOrdX2, SAFEARRAY * * GenOrdY2, SAFEARRAY * * VisibleGen, SAFEARRAY * * BubbleLocGen ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x400b\x4008\x4008\x4005\x4003\x4003\x6008\x6005\x600b\x6008\x4003\x6008\x6005\x600b\x6008\x4003\x6008\x6005\x6005\x6005\x6005\x600b\x6008", (BSTR)Name, Xo, Yo, RZ, StoryRangeIsDefault, TopStory, BottomStory, BubbleSize, GridColor, NumXLines, GridLineIDX, OrdinateX, VisibleX, BubbleLocX, NumYLines, GridLineIDY, OrdinateY, VisibleY, BubbleLocY, NumGenLines, GridLineIDGen, GenOrdX1, GenOrdY1, GenOrdX2, GenOrdY2, VisibleGen, BubbleLocGen);
    return _result;
}

#pragma implementation_key(270)
inline long ETABSv1::cGridSys::GetGridSysCylindrical ( _bstr_t Name, double * Xo, double * Yo, double * RZ, VARIANT_BOOL * StoryRangeIsDefault, BSTR * TopStory, BSTR * BottomStory, double * BubbleSize, long * GridColor, long * NumRLines, SAFEARRAY * * GridLineIDR, SAFEARRAY * * OrdinateR, SAFEARRAY * * VisibleR, SAFEARRAY * * BubbleLocR, long * NumTLines, SAFEARRAY * * GridLineIDT, SAFEARRAY * * OrdinateT, SAFEARRAY * * VisibleT, SAFEARRAY * * BubbleLocT ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x400b\x4008\x4008\x4005\x4003\x4003\x6008\x6005\x600b\x6008\x4003\x6008\x6005\x600b\x6008", (BSTR)Name, Xo, Yo, RZ, StoryRangeIsDefault, TopStory, BottomStory, BubbleSize, GridColor, NumRLines, GridLineIDR, OrdinateR, VisibleR, BubbleLocR, NumTLines, GridLineIDT, OrdinateT, VisibleT, BubbleLocT);
    return _result;
}

//
// dispinterface cDiaphragm wrapper method implementations
//

#pragma implementation_key(271)
inline long ETABSv1::cDiaphragm::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(272)
inline long ETABSv1::cDiaphragm::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(273)
inline long ETABSv1::cDiaphragm::GetDiaphragm ( _bstr_t Name, VARIANT_BOOL * SemiRigid ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, SemiRigid);
    return _result;
}

#pragma implementation_key(274)
inline long ETABSv1::cDiaphragm::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(275)
inline long ETABSv1::cDiaphragm::SetDiaphragm ( _bstr_t Name, VARIANT_BOOL SemiRigid ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, SemiRigid);
    return _result;
}

//
// dispinterface cSpandrelLabel wrapper method implementations
//

#pragma implementation_key(276)
inline long ETABSv1::cSpandrelLabel::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(277)
inline long ETABSv1::cSpandrelLabel::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(278)
inline long ETABSv1::cSpandrelLabel::GetSpandrel ( _bstr_t Name, VARIANT_BOOL * IsMultiStory ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, IsMultiStory);
    return _result;
}

#pragma implementation_key(279)
inline long ETABSv1::cSpandrelLabel::GetNameList ( long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * IsMultiStory ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x600b", NumberNames, MyName, IsMultiStory);
    return _result;
}

#pragma implementation_key(280)
inline long ETABSv1::cSpandrelLabel::SetSpandrel ( _bstr_t Name, VARIANT_BOOL IsMultiStory ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, IsMultiStory);
    return _result;
}

#pragma implementation_key(281)
inline long ETABSv1::cSpandrelLabel::GetSectionProperties ( _bstr_t Name, long * NumberStories, SAFEARRAY * * StoryName, SAFEARRAY * * NumAreaObj, SAFEARRAY * * NumLineObj, SAFEARRAY * * Length, SAFEARRAY * * DepthLeft, SAFEARRAY * * ThickLeft, SAFEARRAY * * DepthRight, SAFEARRAY * * ThickRight, SAFEARRAY * * MatProp, SAFEARRAY * * CGLeftX, SAFEARRAY * * CGLeftY, SAFEARRAY * * CGLeftZ, SAFEARRAY * * CGRightX, SAFEARRAY * * CGRightY, SAFEARRAY * * CGRightZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6003\x6005\x6005\x6005\x6005\x6005\x6008\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, NumberStories, StoryName, NumAreaObj, NumLineObj, Length, DepthLeft, ThickLeft, DepthRight, ThickRight, MatProp, CGLeftX, CGLeftY, CGLeftZ, CGRightX, CGRightY, CGRightZ);
    return _result;
}

//
// dispinterface cPierLabel wrapper method implementations
//

#pragma implementation_key(282)
inline long ETABSv1::cPierLabel::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(283)
inline long ETABSv1::cPierLabel::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(284)
inline long ETABSv1::cPierLabel::GetPier ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(285)
inline long ETABSv1::cPierLabel::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(286)
inline long ETABSv1::cPierLabel::GetSectionProperties ( _bstr_t Name, long * NumberStories, SAFEARRAY * * StoryName, SAFEARRAY * * AxisAngle, SAFEARRAY * * NumAreaObjs, SAFEARRAY * * NumLineObjs, SAFEARRAY * * WidthBot, SAFEARRAY * * ThicknessBot, SAFEARRAY * * WidthTop, SAFEARRAY * * ThicknessTop, SAFEARRAY * * MatProp, SAFEARRAY * * CGBotX, SAFEARRAY * * CGBotY, SAFEARRAY * * CGBotZ, SAFEARRAY * * CGTopX, SAFEARRAY * * CGTopY, SAFEARRAY * * CGTopZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6003\x6003\x6005\x6005\x6005\x6005\x6008\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, NumberStories, StoryName, AxisAngle, NumAreaObjs, NumLineObjs, WidthBot, ThicknessBot, WidthTop, ThicknessTop, MatProp, CGBotX, CGBotY, CGBotZ, CGTopX, CGTopY, CGTopZ);
    return _result;
}

#pragma implementation_key(287)
inline long ETABSv1::cPierLabel::SetPier ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface cStory wrapper method implementations
//

#pragma implementation_key(288)
inline long ETABSv1::cStory::GetElevation ( _bstr_t Name, double * Elevation ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)Name, Elevation);
    return _result;
}

#pragma implementation_key(289)
inline long ETABSv1::cStory::GetGUID ( _bstr_t Name, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, GUID);
    return _result;
}

#pragma implementation_key(290)
inline long ETABSv1::cStory::GetHeight ( _bstr_t Name, double * Height ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)Name, Height);
    return _result;
}

#pragma implementation_key(291)
inline long ETABSv1::cStory::GetMasterStory ( _bstr_t Name, VARIANT_BOOL * IsMasterStory ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, IsMasterStory);
    return _result;
}

#pragma implementation_key(292)
inline long ETABSv1::cStory::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(293)
inline long ETABSv1::cStory::GetSimilarTo ( _bstr_t Name, VARIANT_BOOL * IsMasterStory, BSTR * SimilarToStory ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b\x4008", (BSTR)Name, IsMasterStory, SimilarToStory);
    return _result;
}

#pragma implementation_key(294)
inline long ETABSv1::cStory::GetSplice ( _bstr_t Name, VARIANT_BOOL * SpliceAbove, double * SpliceHeight ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b\x4005", (BSTR)Name, SpliceAbove, SpliceHeight);
    return _result;
}

#pragma implementation_key(295)
inline long ETABSv1::cStory::GetStories ( long * NumberStories, SAFEARRAY * * StoryNames, SAFEARRAY * * StoryElevations, SAFEARRAY * * StoryHeights, SAFEARRAY * * IsMasterStory, SAFEARRAY * * SimilarToStory, SAFEARRAY * * SpliceAbove, SAFEARRAY * * SpliceHeight ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6005\x6005\x600b\x6008\x600b\x6005", NumberStories, StoryNames, StoryElevations, StoryHeights, IsMasterStory, SimilarToStory, SpliceAbove, SpliceHeight);
    return _result;
}

#pragma implementation_key(296)
inline long ETABSv1::cStory::SetGUID ( _bstr_t Name, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(297)
inline long ETABSv1::cStory::SetElevation ( _bstr_t Name, double Elevation ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005", (BSTR)Name, Elevation);
    return _result;
}

#pragma implementation_key(298)
inline long ETABSv1::cStory::SetHeight ( _bstr_t Name, double Height ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005", (BSTR)Name, Height);
    return _result;
}

#pragma implementation_key(299)
inline long ETABSv1::cStory::SetMasterStory ( _bstr_t Name, VARIANT_BOOL IsMasterStory ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, IsMasterStory);
    return _result;
}

#pragma implementation_key(300)
inline long ETABSv1::cStory::SetSimilarTo ( _bstr_t Name, _bstr_t SimilarToStory ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)SimilarToStory);
    return _result;
}

#pragma implementation_key(301)
inline long ETABSv1::cStory::SetSplice ( _bstr_t Name, VARIANT_BOOL SpliceAbove, double SpliceHeight ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0005", (BSTR)Name, SpliceAbove, SpliceHeight);
    return _result;
}

#pragma implementation_key(302)
inline long ETABSv1::cStory::SetStories ( SAFEARRAY * StoryNames, SAFEARRAY * StoryElevations, SAFEARRAY * StoryHeights, SAFEARRAY * IsMasterStory, SAFEARRAY * SimilarToStory, SAFEARRAY * SpliceAbove, SAFEARRAY * SpliceHeight ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x2008\x2005\x2005\x200b\x2008\x200b\x2005", StoryNames, StoryElevations, StoryHeights, IsMasterStory, SimilarToStory, SpliceAbove, SpliceHeight);
    return _result;
}

#pragma implementation_key(303)
inline long ETABSv1::cStory::GetStories_2 ( double * BaseElevation, long * NumberStories, SAFEARRAY * * StoryNames, SAFEARRAY * * StoryElevations, SAFEARRAY * * StoryHeights, SAFEARRAY * * IsMasterStory, SAFEARRAY * * SimilarToStory, SAFEARRAY * * SpliceAbove, SAFEARRAY * * SpliceHeight, SAFEARRAY * * color ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4003\x6008\x6005\x6005\x600b\x6008\x600b\x6005\x6003", BaseElevation, NumberStories, StoryNames, StoryElevations, StoryHeights, IsMasterStory, SimilarToStory, SpliceAbove, SpliceHeight, color);
    return _result;
}

#pragma implementation_key(304)
inline long ETABSv1::cStory::SetStories_2 ( double BaseElevation, long NumberStories, SAFEARRAY * * StoryNames, SAFEARRAY * * StoryHeights, SAFEARRAY * * IsMasterStory, SAFEARRAY * * SimilarToStory, SAFEARRAY * * SpliceAbove, SAFEARRAY * * SpliceHeight, SAFEARRAY * * color ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0003\x6008\x6005\x600b\x6008\x600b\x6005\x6003", BaseElevation, NumberStories, StoryNames, StoryHeights, IsMasterStory, SimilarToStory, SpliceAbove, SpliceHeight, color);
    return _result;
}

//
// dispinterface cCombo wrapper method implementations
//

#pragma implementation_key(305)
inline long ETABSv1::cCombo::Add ( _bstr_t Name, long ComboType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ComboType);
    return _result;
}

#pragma implementation_key(306)
inline long ETABSv1::cCombo::AddDesignDefaultCombos ( VARIANT_BOOL DesignSteel, VARIANT_BOOL DesignConcrete, VARIANT_BOOL DesignAluminum, VARIANT_BOOL DesignColdFormed ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x000b\x000b", DesignSteel, DesignConcrete, DesignAluminum, DesignColdFormed);
    return _result;
}

#pragma implementation_key(307)
inline long ETABSv1::cCombo::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(308)
inline long ETABSv1::cCombo::DeleteCase ( _bstr_t Name, enum eCNameType CNameType, _bstr_t CName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0008", (BSTR)Name, CNameType, (BSTR)CName);
    return _result;
}

#pragma implementation_key(309)
inline long ETABSv1::cCombo::GetCaseList ( _bstr_t Name, long * NumberItems, SAFEARRAY * * CNameType, SAFEARRAY * * CName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6008\x6005", (BSTR)Name, NumberItems, CNameType, CName, SF);
    return _result;
}

#pragma implementation_key(310)
inline long ETABSv1::cCombo::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(311)
inline long ETABSv1::cCombo::SetCaseList ( _bstr_t Name, enum eCNameType * CNameType, _bstr_t CName, double SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x0008\x0005", (BSTR)Name, CNameType, (BSTR)CName, SF);
    return _result;
}

#pragma implementation_key(312)
inline long ETABSv1::cCombo::GetTypeOAPI ( _bstr_t Name, long * ComboType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, ComboType);
    return _result;
}

#pragma implementation_key(313)
inline long ETABSv1::cCombo::GetCaseList_1 ( _bstr_t Name, long * NumberItems, SAFEARRAY * * CNameType, SAFEARRAY * * CName, SAFEARRAY * * ModeNumber, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6008\x6003\x6005", (BSTR)Name, NumberItems, CNameType, CName, ModeNumber, SF);
    return _result;
}

#pragma implementation_key(314)
inline long ETABSv1::cCombo::SetCaseList_1 ( _bstr_t Name, enum eCNameType * CNameType, _bstr_t CName, long ModeNumber, double SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x0008\x0003\x0005", (BSTR)Name, CNameType, (BSTR)CName, ModeNumber, SF);
    return _result;
}

#pragma implementation_key(315)
inline long ETABSv1::cCombo::GetTypeCombo ( _bstr_t Name, long * ComboType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, ComboType);
    return _result;
}

//
// dispinterface cConstraint wrapper method implementations
//

#pragma implementation_key(316)
inline long ETABSv1::cConstraint::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(317)
inline long ETABSv1::cConstraint::GetDiaphragm ( _bstr_t Name, enum eConstraintAxis * Axis, BSTR * CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4008", (BSTR)Name, Axis, CSys);
    return _result;
}

#pragma implementation_key(318)
inline long ETABSv1::cConstraint::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(319)
inline long ETABSv1::cConstraint::SetDiaphragm ( _bstr_t Name, enum eConstraintAxis Axis, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0008", (BSTR)Name, Axis, (BSTR)CSys);
    return _result;
}

//
// dispinterface cGenDispl wrapper method implementations
//

#pragma implementation_key(320)
inline long ETABSv1::cGenDispl::Add ( _bstr_t Name, long MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, MyType);
    return _result;
}

#pragma implementation_key(321)
inline long ETABSv1::cGenDispl::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(322)
inline long ETABSv1::cGenDispl::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(323)
inline long ETABSv1::cGenDispl::CountPoint ( _bstr_t Name, long * Count ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, Count);
    return _result;
}

#pragma implementation_key(324)
inline long ETABSv1::cGenDispl::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(325)
inline long ETABSv1::cGenDispl::DeletePoint ( _bstr_t Name, _bstr_t PointName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)PointName);
    return _result;
}

#pragma implementation_key(326)
inline long ETABSv1::cGenDispl::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(327)
inline long ETABSv1::cGenDispl::GetPoint ( _bstr_t Name, long * NumberItems, SAFEARRAY * * PointName, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, NumberItems, PointName, U1, U2, U3, R1, R2, R3);
    return _result;
}

#pragma implementation_key(328)
inline long ETABSv1::cGenDispl::GetTypeOAPI ( _bstr_t Name, long * MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, MyType);
    return _result;
}

#pragma implementation_key(329)
inline long ETABSv1::cGenDispl::SetPoint ( _bstr_t Name, _bstr_t PointName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x6005", (BSTR)Name, (BSTR)PointName, SF);
    return _result;
}

#pragma implementation_key(330)
inline long ETABSv1::cGenDispl::SetType ( _bstr_t Name, long MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, MyType);
    return _result;
}

#pragma implementation_key(331)
inline long ETABSv1::cGenDispl::SetTypeOAPI ( _bstr_t Name, long MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, MyType);
    return _result;
}

#pragma implementation_key(332)
inline long ETABSv1::cGenDispl::GetTypeGenDispl ( _bstr_t Name, long * MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, MyType);
    return _result;
}

//
// dispinterface cGroup wrapper method implementations
//

#pragma implementation_key(333)
inline long ETABSv1::cGroup::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(334)
inline long ETABSv1::cGroup::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(335)
inline long ETABSv1::cGroup::GetAssignments ( _bstr_t Name, long * NumberItems, SAFEARRAY * * ObjectType, SAFEARRAY * * ObjectName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6008", (BSTR)Name, NumberItems, ObjectType, ObjectName);
    return _result;
}

#pragma implementation_key(336)
inline long ETABSv1::cGroup::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(337)
inline long ETABSv1::cGroup::GetGroup ( _bstr_t Name, long * color, VARIANT_BOOL * SpecifiedForSelection, VARIANT_BOOL * SpecifiedForSectionCutDefinition, VARIANT_BOOL * SpecifiedForSteelDesign, VARIANT_BOOL * SpecifiedForConcreteDesign, VARIANT_BOOL * SpecifiedForAluminumDesign, VARIANT_BOOL * SpecifiedForColdFormedDesign, VARIANT_BOOL * SpecifiedForStaticNLActiveStage, VARIANT_BOOL * SpecifiedForBridgeResponseOutput, VARIANT_BOOL * SpecifiedForAutoSeismicOutput, VARIANT_BOOL * SpecifiedForAutoWindOutput, VARIANT_BOOL * SpecifiedForMassAndWeight ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x400b\x400b\x400b\x400b\x400b\x400b\x400b\x400b\x400b\x400b\x400b", (BSTR)Name, color, SpecifiedForSelection, SpecifiedForSectionCutDefinition, SpecifiedForSteelDesign, SpecifiedForConcreteDesign, SpecifiedForAluminumDesign, SpecifiedForColdFormedDesign, SpecifiedForStaticNLActiveStage, SpecifiedForBridgeResponseOutput, SpecifiedForAutoSeismicOutput, SpecifiedForAutoWindOutput, SpecifiedForMassAndWeight);
    return _result;
}

#pragma implementation_key(338)
inline long ETABSv1::cGroup::SetGroup ( _bstr_t Name, long color, VARIANT_BOOL SpecifiedForSelection, VARIANT_BOOL SpecifiedForSectionCutDefinition, VARIANT_BOOL SpecifiedForSteelDesign, VARIANT_BOOL SpecifiedForConcreteDesign, VARIANT_BOOL SpecifiedForAluminumDesign, VARIANT_BOOL SpecifiedForColdFormedDesign, VARIANT_BOOL SpecifiedForStaticNLActiveStage, VARIANT_BOOL SpecifiedForBridgeResponseOutput, VARIANT_BOOL SpecifiedForAutoSeismicOutput, VARIANT_BOOL SpecifiedForAutoWindOutput, VARIANT_BOOL SpecifiedForMassAndWeight ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b", (BSTR)Name, color, SpecifiedForSelection, SpecifiedForSectionCutDefinition, SpecifiedForSteelDesign, SpecifiedForConcreteDesign, SpecifiedForAluminumDesign, SpecifiedForColdFormedDesign, SpecifiedForStaticNLActiveStage, SpecifiedForBridgeResponseOutput, SpecifiedForAutoSeismicOutput, SpecifiedForAutoWindOutput, SpecifiedForMassAndWeight);
    return _result;
}

#pragma implementation_key(339)
inline long ETABSv1::cGroup::GetGroup_1 ( _bstr_t Name, long * color, VARIANT_BOOL * SpecifiedForSelection, VARIANT_BOOL * SpecifiedForSectionCutDefinition, VARIANT_BOOL * SpecifiedForSteelDesign, VARIANT_BOOL * SpecifiedForConcreteDesign, VARIANT_BOOL * SpecifiedForAluminumDesign, VARIANT_BOOL * SpecifiedForStaticNLActiveStage, VARIANT_BOOL * SpecifiedForAutoSeismicOutput, VARIANT_BOOL * SpecifiedForAutoWindOutput, VARIANT_BOOL * SpecifiedForMassAndWeight, VARIANT_BOOL * SpecifiedForSteelJoistDesign, VARIANT_BOOL * SpecifiedForWallDesign, VARIANT_BOOL * SpecifiedForBasePlateDesign, VARIANT_BOOL * SpecifiedForConnectionDesign ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x400b\x400b\x400b\x400b\x400b\x400b\x400b\x400b\x400b\x400b\x400b\x400b\x400b", (BSTR)Name, color, SpecifiedForSelection, SpecifiedForSectionCutDefinition, SpecifiedForSteelDesign, SpecifiedForConcreteDesign, SpecifiedForAluminumDesign, SpecifiedForStaticNLActiveStage, SpecifiedForAutoSeismicOutput, SpecifiedForAutoWindOutput, SpecifiedForMassAndWeight, SpecifiedForSteelJoistDesign, SpecifiedForWallDesign, SpecifiedForBasePlateDesign, SpecifiedForConnectionDesign);
    return _result;
}

#pragma implementation_key(340)
inline long ETABSv1::cGroup::SetGroup_1 ( _bstr_t Name, long color, VARIANT_BOOL SpecifiedForSelection, VARIANT_BOOL SpecifiedForSectionCutDefinition, VARIANT_BOOL SpecifiedForSteelDesign, VARIANT_BOOL SpecifiedForConcreteDesign, VARIANT_BOOL SpecifiedForAluminumDesign, VARIANT_BOOL SpecifiedForStaticNLActiveStage, VARIANT_BOOL SpecifiedForAutoSeismicOutput, VARIANT_BOOL SpecifiedForAutoWindOutput, VARIANT_BOOL SpecifiedForMassAndWeight, VARIANT_BOOL SpecifiedForSteelJoistDesign, VARIANT_BOOL SpecifiedForWallDesign, VARIANT_BOOL SpecifiedForBasePlateDesign, VARIANT_BOOL SpecifiedForConnectionDesign ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b", (BSTR)Name, color, SpecifiedForSelection, SpecifiedForSectionCutDefinition, SpecifiedForSteelDesign, SpecifiedForConcreteDesign, SpecifiedForAluminumDesign, SpecifiedForStaticNLActiveStage, SpecifiedForAutoSeismicOutput, SpecifiedForAutoWindOutput, SpecifiedForMassAndWeight, SpecifiedForSteelJoistDesign, SpecifiedForWallDesign, SpecifiedForBasePlateDesign, SpecifiedForConnectionDesign);
    return _result;
}

//
// dispinterface cTower wrapper method implementations
//

#pragma implementation_key(341)
inline long ETABSv1::cTower::AddCopyOfTower ( _bstr_t TowerName, _bstr_t NewTowerName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)TowerName, (BSTR)NewTowerName);
    return _result;
}

#pragma implementation_key(342)
inline long ETABSv1::cTower::AddNewTower ( _bstr_t TowerName, long NumberStories, double TypicalStoryHeight, double BotttomStoryHeight ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0005", (BSTR)TowerName, NumberStories, TypicalStoryHeight, BotttomStoryHeight);
    return _result;
}

#pragma implementation_key(343)
inline long ETABSv1::cTower::AllowMultipleTowers ( VARIANT_BOOL AllowMultTowers, _bstr_t RetainedTower, VARIANT_BOOL Combine ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x000b", AllowMultTowers, (BSTR)RetainedTower, Combine);
    return _result;
}

#pragma implementation_key(344)
inline long ETABSv1::cTower::DeleteTower ( _bstr_t TowerName, VARIANT_BOOL Associate, _bstr_t AssocWithTower ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0008", (BSTR)TowerName, Associate, (BSTR)AssocWithTower);
    return _result;
}

#pragma implementation_key(345)
inline long ETABSv1::cTower::GetActiveTower ( BSTR * TowerName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008", TowerName);
    return _result;
}

#pragma implementation_key(346)
inline long ETABSv1::cTower::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(347)
inline long ETABSv1::cTower::RenameTower ( _bstr_t TowerName, _bstr_t NewTowerName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)TowerName, (BSTR)NewTowerName);
    return _result;
}

#pragma implementation_key(348)
inline long ETABSv1::cTower::SetActiveTower ( _bstr_t TowerName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)TowerName);
    return _result;
}

//
// dispinterface cFunction wrapper method implementations
//

#pragma implementation_key(349)
inline long ETABSv1::cFunction::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(350)
inline long ETABSv1::cFunction::ConvertToUser ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(351)
inline long ETABSv1::cFunction::Count ( long FuncType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", FuncType);
    return _result;
}

#pragma implementation_key(352)
inline long ETABSv1::cFunction::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(353)
inline ETABSv1::cFunctionRSPtr ETABSv1::cFunction::GetFuncRS ( ) {
    struct cFunctionRS * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cFunctionRSPtr(_result, false);
}

#pragma implementation_key(354)
inline ETABSv1::cFunctionTHPtr ETABSv1::cFunction::GetFuncTH ( ) {
    struct cFunctionTH * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cFunctionTHPtr(_result, false);
}

#pragma implementation_key(355)
inline long ETABSv1::cFunction::GetNameList ( long * NumberNames, SAFEARRAY * * MyName, long FuncType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x0003", NumberNames, MyName, FuncType);
    return _result;
}

#pragma implementation_key(356)
inline long ETABSv1::cFunction::GetTypeOAPI ( _bstr_t Name, long * FuncType, long * AddType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003", (BSTR)Name, FuncType, AddType);
    return _result;
}

#pragma implementation_key(357)
inline long ETABSv1::cFunction::GetValues ( _bstr_t Name, long * NumberItems, SAFEARRAY * * MyTime, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6005\x6005", (BSTR)Name, NumberItems, MyTime, Value);
    return _result;
}

//
// dispinterface cFunctionRS wrapper method implementations
//

#pragma implementation_key(358)
inline long ETABSv1::cFunctionRS::GetNTC2008 ( _bstr_t Name, long * ParamsOption, double * Latitude, double * Longitude, long * Island, long * LimitState, long * UsageClass, double * NomLife, double * PeakAccel, double * F0, double * Tcs, long * SpecType, long * SoilType, long * Topography, double * hRatio, double * Damping, double * q ) {
    long _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005\x4005\x4003\x4003\x4003\x4005\x4005\x4005\x4005\x4003\x4003\x4003\x4005\x4005\x4005", (BSTR)Name, ParamsOption, Latitude, Longitude, Island, LimitState, UsageClass, NomLife, PeakAccel, F0, Tcs, SpecType, SoilType, Topography, hRatio, Damping, q);
    return _result;
}

#pragma implementation_key(359)
inline long ETABSv1::cFunctionRS::SetNTC2008 ( _bstr_t Name, long ParamsOption, double Latitude, double Longitude, long Island, long LimitState, long UsageClass, double NomLife, double PeakAccel, double F0, double Tcs, long SpecType, long SoilType, long Topography, double hRatio, double Damping, double q ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0005\x0003\x0003\x0003\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x0005\x0005\x0005", (BSTR)Name, ParamsOption, Latitude, Longitude, Island, LimitState, UsageClass, NomLife, PeakAccel, F0, Tcs, SpecType, SoilType, Topography, hRatio, Damping, q);
    return _result;
}

#pragma implementation_key(360)
inline long ETABSv1::cFunctionRS::GetNTC2018 ( _bstr_t Name, long * ParamsOption, double * Latitude, double * Longitude, long * Island, long * LimitState, long * UsageClass, double * NomLife, double * PeakAccel, double * F0, double * Tcs, long * SpecType, long * SoilType, long * Topography, double * hRatio, double * Damping, double * q ) {
    long _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005\x4005\x4003\x4003\x4003\x4005\x4005\x4005\x4005\x4003\x4003\x4003\x4005\x4005\x4005", (BSTR)Name, ParamsOption, Latitude, Longitude, Island, LimitState, UsageClass, NomLife, PeakAccel, F0, Tcs, SpecType, SoilType, Topography, hRatio, Damping, q);
    return _result;
}

#pragma implementation_key(361)
inline long ETABSv1::cFunctionRS::SetNTC2018 ( _bstr_t Name, long ParamsOption, double Latitude, double Longitude, long Island, long LimitState, long UsageClass, double NomLife, double PeakAccel, double F0, double Tcs, long SpecType, long SoilType, long Topography, double hRatio, double Damping, double q ) {
    long _result = 0;
    _com_dispatch_method(this, 0x46, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0005\x0003\x0003\x0003\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x0005\x0005\x0005", (BSTR)Name, ParamsOption, Latitude, Longitude, Island, LimitState, UsageClass, NomLife, PeakAccel, F0, Tcs, SpecType, SoilType, Topography, hRatio, Damping, q);
    return _result;
}

//
// dispinterface cCaseDirectHistoryLinear wrapper method implementations
//

#pragma implementation_key(362)
inline long ETABSv1::cCaseDirectHistoryLinear::GetLoads ( _bstr_t Name, long * NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * Func, SAFEARRAY * * SF, SAFEARRAY * * Tf, SAFEARRAY * * At, SAFEARRAY * * CSys, SAFEARRAY * * Ang ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6008\x6005\x6005\x6005\x6008\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, Func, SF, Tf, At, CSys, Ang);
    return _result;
}

//
// dispinterface cCaseDirectHistoryNonlinear wrapper method implementations
//

#pragma implementation_key(363)
inline long ETABSv1::cCaseDirectHistoryNonlinear::GetLoads ( _bstr_t Name, long * NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * Func, SAFEARRAY * * SF, SAFEARRAY * * Tf, SAFEARRAY * * At, SAFEARRAY * * CSys, SAFEARRAY * * Ang ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6008\x6005\x6005\x6005\x6008\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, Func, SF, Tf, At, CSys, Ang);
    return _result;
}

//
// dispinterface cCaseHyperStatic wrapper method implementations
//

#pragma implementation_key(364)
inline long ETABSv1::cCaseHyperStatic::GetBaseCase ( _bstr_t Name, BSTR * HyperStaticCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, HyperStaticCase);
    return _result;
}

#pragma implementation_key(365)
inline long ETABSv1::cCaseHyperStatic::SetBaseCase ( _bstr_t Name, _bstr_t HyperStaticCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)HyperStaticCase);
    return _result;
}

#pragma implementation_key(366)
inline long ETABSv1::cCaseHyperStatic::SetCase ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

//
// dispinterface cCaseModalEigen wrapper method implementations
//

#pragma implementation_key(367)
inline long ETABSv1::cCaseModalEigen::GetInitialCase ( _bstr_t Name, BSTR * InitialCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, InitialCase);
    return _result;
}

#pragma implementation_key(368)
inline long ETABSv1::cCaseModalEigen::GetLoads ( _bstr_t Name, long * NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * TargetPar, SAFEARRAY * * StaticCorrect ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6005\x600b", (BSTR)Name, NumberLoads, LoadType, LoadName, TargetPar, StaticCorrect);
    return _result;
}

#pragma implementation_key(369)
inline long ETABSv1::cCaseModalEigen::GetNumberModes ( _bstr_t Name, long * MaxModes, long * MinModes ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003", (BSTR)Name, MaxModes, MinModes);
    return _result;
}

#pragma implementation_key(370)
inline long ETABSv1::cCaseModalEigen::GetParameters ( _bstr_t Name, double * EigenShiftFreq, double * EigenCutOff, double * EigenTol, long * AllowAutoFreqShift ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4003", (BSTR)Name, EigenShiftFreq, EigenCutOff, EigenTol, AllowAutoFreqShift);
    return _result;
}

#pragma implementation_key(371)
inline long ETABSv1::cCaseModalEigen::SetCase ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(372)
inline long ETABSv1::cCaseModalEigen::SetInitialCase ( _bstr_t Name, _bstr_t InitialCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)InitialCase);
    return _result;
}

#pragma implementation_key(373)
inline long ETABSv1::cCaseModalEigen::SetLoads ( _bstr_t Name, long NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * TargetPar, SAFEARRAY * * StaticCorrect ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6008\x6008\x6005\x600b", (BSTR)Name, NumberLoads, LoadType, LoadName, TargetPar, StaticCorrect);
    return _result;
}

#pragma implementation_key(374)
inline long ETABSv1::cCaseModalEigen::SetNumberModes ( _bstr_t Name, long MaxModes, long MinModes ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003", (BSTR)Name, MaxModes, MinModes);
    return _result;
}

#pragma implementation_key(375)
inline long ETABSv1::cCaseModalEigen::SetParameters ( _bstr_t Name, double EigenShiftFreq, double EigenCutOff, double EigenTol, long AllowAutoFreqShift ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0003", (BSTR)Name, EigenShiftFreq, EigenCutOff, EigenTol, AllowAutoFreqShift);
    return _result;
}

//
// dispinterface cCaseModalHistoryLinear wrapper method implementations
//

#pragma implementation_key(376)
inline long ETABSv1::cCaseModalHistoryLinear::GetLoads ( _bstr_t Name, long * NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * Func, SAFEARRAY * * SF, SAFEARRAY * * Tf, SAFEARRAY * * At, SAFEARRAY * * CSys, SAFEARRAY * * Ang ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6008\x6005\x6005\x6005\x6008\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, Func, SF, Tf, At, CSys, Ang);
    return _result;
}

#pragma implementation_key(377)
inline long ETABSv1::cCaseModalHistoryLinear::SetCase ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(378)
inline long ETABSv1::cCaseModalHistoryLinear::SetLoads ( _bstr_t Name, long NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * Func, SAFEARRAY * * SF, SAFEARRAY * * Tf, SAFEARRAY * * At, SAFEARRAY * * CSys, SAFEARRAY * * Ang ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6008\x6008\x6008\x6005\x6005\x6005\x6008\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, Func, SF, Tf, At, CSys, Ang);
    return _result;
}

//
// dispinterface cCaseModalHistoryNonlinear wrapper method implementations
//

#pragma implementation_key(379)
inline long ETABSv1::cCaseModalHistoryNonlinear::GetLoads ( _bstr_t Name, long * NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * Func, SAFEARRAY * * SF, SAFEARRAY * * Tf, SAFEARRAY * * At, SAFEARRAY * * CSys, SAFEARRAY * * Ang ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6008\x6005\x6005\x6005\x6008\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, Func, SF, Tf, At, CSys, Ang);
    return _result;
}

//
// dispinterface cCaseModalRitz wrapper method implementations
//

#pragma implementation_key(380)
inline long ETABSv1::cCaseModalRitz::GetInitialCase ( _bstr_t Name, BSTR * InitialCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, InitialCase);
    return _result;
}

#pragma implementation_key(381)
inline long ETABSv1::cCaseModalRitz::GetLoads ( _bstr_t Name, long * NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * RitzMaxCyc, SAFEARRAY * * TargetPar ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, RitzMaxCyc, TargetPar);
    return _result;
}

#pragma implementation_key(382)
inline long ETABSv1::cCaseModalRitz::GetNumberModes ( _bstr_t Name, long * MaxModes, long * MinModes ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003", (BSTR)Name, MaxModes, MinModes);
    return _result;
}

#pragma implementation_key(383)
inline long ETABSv1::cCaseModalRitz::SetCase ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(384)
inline long ETABSv1::cCaseModalRitz::SetInitialCase ( _bstr_t Name, _bstr_t InitialCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)InitialCase);
    return _result;
}

#pragma implementation_key(385)
inline long ETABSv1::cCaseModalRitz::SetLoads ( _bstr_t Name, long NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * RitzMaxCyc, SAFEARRAY * * TargetPar ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6008\x6008\x6003\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, RitzMaxCyc, TargetPar);
    return _result;
}

#pragma implementation_key(386)
inline long ETABSv1::cCaseModalRitz::SetNumberModes ( _bstr_t Name, long MaxModes, long MinModes ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003", (BSTR)Name, MaxModes, MinModes);
    return _result;
}

//
// dispinterface cCaseResponseSpectrum wrapper method implementations
//

#pragma implementation_key(387)
inline long ETABSv1::cCaseResponseSpectrum::GetDampConstant ( _bstr_t Name, double * Damp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)Name, Damp);
    return _result;
}

#pragma implementation_key(388)
inline long ETABSv1::cCaseResponseSpectrum::GetDampInterpolated ( _bstr_t Name, long * DampType, long * NumberItems, SAFEARRAY * * Time, SAFEARRAY * * Damp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x6005\x6005", (BSTR)Name, DampType, NumberItems, Time, Damp);
    return _result;
}

#pragma implementation_key(389)
inline long ETABSv1::cCaseResponseSpectrum::GetDampOverrides ( _bstr_t Name, long * NumberItems, SAFEARRAY * * Mode, SAFEARRAY * * Damp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6005", (BSTR)Name, NumberItems, Mode, Damp);
    return _result;
}

#pragma implementation_key(390)
inline long ETABSv1::cCaseResponseSpectrum::GetDampProportional ( _bstr_t Name, long * DampType, double * DampA, double * DampB, double * DampF1, double * DampF2, double * DampD1, double * DampD2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, DampType, DampA, DampB, DampF1, DampF2, DampD1, DampD2);
    return _result;
}

#pragma implementation_key(391)
inline long ETABSv1::cCaseResponseSpectrum::GetDampType ( _bstr_t Name, long * DampType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, DampType);
    return _result;
}

#pragma implementation_key(392)
inline long ETABSv1::cCaseResponseSpectrum::GetDiaphragmEccentricityOverride ( _bstr_t Name, long * Num, SAFEARRAY * * Diaph, SAFEARRAY * * Eccen ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005", (BSTR)Name, Num, Diaph, Eccen);
    return _result;
}

#pragma implementation_key(393)
inline long ETABSv1::cCaseResponseSpectrum::GetDirComb ( _bstr_t Name, long * MyType, double * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005", (BSTR)Name, MyType, SF);
    return _result;
}

#pragma implementation_key(394)
inline long ETABSv1::cCaseResponseSpectrum::GetEccentricity ( _bstr_t Name, double * Eccen ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)Name, Eccen);
    return _result;
}

#pragma implementation_key(395)
inline long ETABSv1::cCaseResponseSpectrum::GetLoads ( _bstr_t Name, long * NumberLoads, SAFEARRAY * * LoadName, SAFEARRAY * * Func, SAFEARRAY * * SF, SAFEARRAY * * CSys, SAFEARRAY * * Ang ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6005\x6008\x6005", (BSTR)Name, NumberLoads, LoadName, Func, SF, CSys, Ang);
    return _result;
}

#pragma implementation_key(396)
inline long ETABSv1::cCaseResponseSpectrum::GetModalCase ( _bstr_t Name, BSTR * ModalCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, ModalCase);
    return _result;
}

#pragma implementation_key(397)
inline long ETABSv1::cCaseResponseSpectrum::GetModalComb ( _bstr_t Name, long * MyType, double * F1, double * F2, double * Td ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005\x4005\x4005", (BSTR)Name, MyType, F1, F2, Td);
    return _result;
}

#pragma implementation_key(398)
inline long ETABSv1::cCaseResponseSpectrum::GetModalComb_1 ( _bstr_t Name, long * MyType, double * F1, double * F2, long * PeriodicRigidCombType, double * Td ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005\x4005\x4003\x4005", (BSTR)Name, MyType, F1, F2, PeriodicRigidCombType, Td);
    return _result;
}

#pragma implementation_key(399)
inline long ETABSv1::cCaseResponseSpectrum::SetCase ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(400)
inline long ETABSv1::cCaseResponseSpectrum::SetEccentricity ( _bstr_t Name, double Eccen ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005", (BSTR)Name, Eccen);
    return _result;
}

#pragma implementation_key(401)
inline long ETABSv1::cCaseResponseSpectrum::SetLoads ( _bstr_t Name, long NumberLoads, SAFEARRAY * * LoadName, SAFEARRAY * * Func, SAFEARRAY * * SF, SAFEARRAY * * CSys, SAFEARRAY * * Ang ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6008\x6008\x6005\x6008\x6005", (BSTR)Name, NumberLoads, LoadName, Func, SF, CSys, Ang);
    return _result;
}

#pragma implementation_key(402)
inline long ETABSv1::cCaseResponseSpectrum::SetModalCase ( _bstr_t Name, _bstr_t ModalCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)ModalCase);
    return _result;
}

//
// dispinterface cCaseStaticLinear wrapper method implementations
//

#pragma implementation_key(403)
inline long ETABSv1::cCaseStaticLinear::GetInitialCase ( _bstr_t Name, BSTR * InitialCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, InitialCase);
    return _result;
}

#pragma implementation_key(404)
inline long ETABSv1::cCaseStaticLinear::GetLoads ( _bstr_t Name, long * NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, SF);
    return _result;
}

#pragma implementation_key(405)
inline long ETABSv1::cCaseStaticLinear::SetCase ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(406)
inline long ETABSv1::cCaseStaticLinear::SetInitialCase ( _bstr_t Name, _bstr_t InitialCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)InitialCase);
    return _result;
}

#pragma implementation_key(407)
inline long ETABSv1::cCaseStaticLinear::SetLoads ( _bstr_t Name, long NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6008\x6008\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, SF);
    return _result;
}

//
// dispinterface cCaseStaticNonlinear wrapper method implementations
//

#pragma implementation_key(408)
inline long ETABSv1::cCaseStaticNonlinear::GetGeometricNonlinearity ( _bstr_t Name, long * NLGeomType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, NLGeomType);
    return _result;
}

#pragma implementation_key(409)
inline long ETABSv1::cCaseStaticNonlinear::GetHingeUnloading ( _bstr_t Name, long * UnloadType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, UnloadType);
    return _result;
}

#pragma implementation_key(410)
inline long ETABSv1::cCaseStaticNonlinear::GetInitialCase ( _bstr_t Name, BSTR * InitialCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, InitialCase);
    return _result;
}

#pragma implementation_key(411)
inline long ETABSv1::cCaseStaticNonlinear::GetLoadApplication ( _bstr_t Name, long * LoadControl, long * DispType, double * Displ, long * Monitor, long * DOF, BSTR * PointName, BSTR * GDispl ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x4005\x4003\x4003\x4008\x4008", (BSTR)Name, LoadControl, DispType, Displ, Monitor, DOF, PointName, GDispl);
    return _result;
}

#pragma implementation_key(412)
inline long ETABSv1::cCaseStaticNonlinear::GetLoads ( _bstr_t Name, long * NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, SF);
    return _result;
}

#pragma implementation_key(413)
inline long ETABSv1::cCaseStaticNonlinear::GetModalCase ( _bstr_t Name, BSTR * ModalCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, ModalCase);
    return _result;
}

#pragma implementation_key(414)
inline long ETABSv1::cCaseStaticNonlinear::GetResultsSaved ( _bstr_t Name, VARIANT_BOOL * SaveMultipleSteps, long * MinSavedStates, long * MaxSavedStates, VARIANT_BOOL * PositiveOnly ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b\x4003\x4003\x400b", (BSTR)Name, SaveMultipleSteps, MinSavedStates, MaxSavedStates, PositiveOnly);
    return _result;
}

#pragma implementation_key(415)
inline long ETABSv1::cCaseStaticNonlinear::GetSolControlParameters ( _bstr_t Name, long * MaxTotalSteps, long * MaxFailedSubSteps, long * MaxIterCS, long * MaxIterNR, double * TolConvD, VARIANT_BOOL * UseEventStepping, double * TolEventD, long * MaxLineSearchPerIter, double * TolLineSearch, double * LineSearchStepFact ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x4003\x4003\x4005\x400b\x4005\x4003\x4005\x4005", (BSTR)Name, MaxTotalSteps, MaxFailedSubSteps, MaxIterCS, MaxIterNR, TolConvD, UseEventStepping, TolEventD, MaxLineSearchPerIter, TolLineSearch, LineSearchStepFact);
    return _result;
}

#pragma implementation_key(416)
inline long ETABSv1::cCaseStaticNonlinear::GetTargetForceParameters ( _bstr_t Name, double * TolConvF, long * MaxIter, double * AccelFact, VARIANT_BOOL * NoStop ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4003\x4005\x400b", (BSTR)Name, TolConvF, MaxIter, AccelFact, NoStop);
    return _result;
}

#pragma implementation_key(417)
inline long ETABSv1::cCaseStaticNonlinear::SetCase ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(418)
inline long ETABSv1::cCaseStaticNonlinear::SetGeometricNonlinearity ( _bstr_t Name, long NLGeomType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, NLGeomType);
    return _result;
}

#pragma implementation_key(419)
inline long ETABSv1::cCaseStaticNonlinear::SetHingeUnloading ( _bstr_t Name, long UnloadType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, UnloadType);
    return _result;
}

#pragma implementation_key(420)
inline long ETABSv1::cCaseStaticNonlinear::SetInitialCase ( _bstr_t Name, _bstr_t InitialCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)InitialCase);
    return _result;
}

#pragma implementation_key(421)
inline long ETABSv1::cCaseStaticNonlinear::SetLoadApplication ( _bstr_t Name, long LoadControl, long DispType, double Displ, long Monitor, long DOF, _bstr_t PointName, _bstr_t GDispl ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0005\x0003\x0003\x0008\x0008", (BSTR)Name, LoadControl, DispType, Displ, Monitor, DOF, (BSTR)PointName, (BSTR)GDispl);
    return _result;
}

#pragma implementation_key(422)
inline long ETABSv1::cCaseStaticNonlinear::SetLoads ( _bstr_t Name, long NumberLoads, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6008\x6008\x6005", (BSTR)Name, NumberLoads, LoadType, LoadName, SF);
    return _result;
}

#pragma implementation_key(423)
inline long ETABSv1::cCaseStaticNonlinear::SetModalCase ( _bstr_t Name, _bstr_t ModalCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)ModalCase);
    return _result;
}

#pragma implementation_key(424)
inline long ETABSv1::cCaseStaticNonlinear::SetResultsSaved ( _bstr_t Name, VARIANT_BOOL SaveMultipleSteps, long MinSavedStates, long MaxSavedStates, VARIANT_BOOL PositiveOnly ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0003\x0003\x000b", (BSTR)Name, SaveMultipleSteps, MinSavedStates, MaxSavedStates, PositiveOnly);
    return _result;
}

#pragma implementation_key(425)
inline long ETABSv1::cCaseStaticNonlinear::SetSolControlParameters ( _bstr_t Name, long MaxTotalSteps, long MaxFailedSubSteps, long MaxIterCS, long MaxIterNR, double TolConvD, VARIANT_BOOL UseEventStepping, double TolEventD, long MaxLineSearchPerIter, double TolLineSearch, double LineSearchStepFact ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0003\x0003\x0005\x000b\x0005\x0003\x0005\x0005", (BSTR)Name, MaxTotalSteps, MaxFailedSubSteps, MaxIterCS, MaxIterNR, TolConvD, UseEventStepping, TolEventD, MaxLineSearchPerIter, TolLineSearch, LineSearchStepFact);
    return _result;
}

#pragma implementation_key(426)
inline long ETABSv1::cCaseStaticNonlinear::SetTargetForceParameters ( _bstr_t Name, double TolConvF, long MaxIter, double AccelFact, VARIANT_BOOL NoStop ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0003\x0005\x000b", (BSTR)Name, TolConvF, MaxIter, AccelFact, NoStop);
    return _result;
}

#pragma implementation_key(427)
inline long ETABSv1::cCaseStaticNonlinear::GetMassSource ( _bstr_t Name, BSTR * mSource ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, mSource);
    return _result;
}

#pragma implementation_key(428)
inline long ETABSv1::cCaseStaticNonlinear::SetMassSource ( _bstr_t Name, _bstr_t mSource ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)mSource);
    return _result;
}

//
// dispinterface cCaseStaticNonlinearStaged wrapper method implementations
//

#pragma implementation_key(429)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetGeometricNonlinearity ( _bstr_t Name, long * NLGeomType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, NLGeomType);
    return _result;
}

#pragma implementation_key(430)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetHingeUnloading ( _bstr_t Name, long * UnloadType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, UnloadType);
    return _result;
}

#pragma implementation_key(431)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetInitialCase ( _bstr_t Name, BSTR * InitialCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, InitialCase);
    return _result;
}

#pragma implementation_key(432)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetMaterialNonlinearity ( _bstr_t Name, VARIANT_BOOL * TimeDepMatProp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, TimeDepMatProp);
    return _result;
}

#pragma implementation_key(433)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetResultsSaved ( _bstr_t Name, long * StagedSaveOption, long * StagedMinSteps, long * StagedMinStepsTD ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x4003", (BSTR)Name, StagedSaveOption, StagedMinSteps, StagedMinStepsTD);
    return _result;
}

#pragma implementation_key(434)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetSolControlParameters ( _bstr_t Name, long * MaxTotalSteps, long * MaxFailedSubSteps, long * MaxIterCS, long * MaxIterNR, double * TolConvD, VARIANT_BOOL * UseEventStepping, double * TolEventD, long * MaxLineSearchPerIter, double * TolLineSearch, double * LineSearchStepFact ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x4003\x4003\x4005\x400b\x4005\x4003\x4005\x4005", (BSTR)Name, MaxTotalSteps, MaxFailedSubSteps, MaxIterCS, MaxIterNR, TolConvD, UseEventStepping, TolEventD, MaxLineSearchPerIter, TolLineSearch, LineSearchStepFact);
    return _result;
}

#pragma implementation_key(435)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetStageData ( _bstr_t Name, long * Stage, long * NumberOperations, SAFEARRAY * * operation, SAFEARRAY * * GroupName, SAFEARRAY * * Age, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x6003\x6008\x6003\x6008\x6008\x6005", (BSTR)Name, Stage, NumberOperations, operation, GroupName, Age, LoadType, LoadName, SF);
    return _result;
}

#pragma implementation_key(436)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetStageData_1 ( _bstr_t Name, long * Stage, long * NumberOperations, SAFEARRAY * * operation, SAFEARRAY * * ObjectType, SAFEARRAY * * ObjectName, SAFEARRAY * * Age, SAFEARRAY * * MyType, SAFEARRAY * * MyName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x6003\x6008\x6008\x6003\x6008\x6008\x6005", (BSTR)Name, Stage, NumberOperations, operation, ObjectType, ObjectName, Age, MyType, MyName, SF);
    return _result;
}

#pragma implementation_key(437)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetStageDefinitions ( _bstr_t Name, long * NumberStages, SAFEARRAY * * Duration, SAFEARRAY * * Comment ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6008", (BSTR)Name, NumberStages, Duration, Comment);
    return _result;
}

#pragma implementation_key(438)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetStageDefinitions_1 ( _bstr_t Name, long * NumberStages, SAFEARRAY * * Duration, SAFEARRAY * * Output, SAFEARRAY * * OutputName, SAFEARRAY * * Comment ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x600b\x6008\x6008", (BSTR)Name, NumberStages, Duration, Output, OutputName, Comment);
    return _result;
}

#pragma implementation_key(439)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetTargetForceParameters ( _bstr_t Name, double * TolConvF, long * MaxIter, double * AccelFact, VARIANT_BOOL * NoStop ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4003\x4005\x400b", (BSTR)Name, TolConvF, MaxIter, AccelFact, NoStop);
    return _result;
}

#pragma implementation_key(440)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetCase ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(441)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetGeometricNonlinearity ( _bstr_t Name, long NLGeomType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, NLGeomType);
    return _result;
}

#pragma implementation_key(442)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetHingeUnloading ( _bstr_t Name, long UnloadType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, UnloadType);
    return _result;
}

#pragma implementation_key(443)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetInitialCase ( _bstr_t Name, _bstr_t InitialCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)InitialCase);
    return _result;
}

#pragma implementation_key(444)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetMaterialNonlinearity ( _bstr_t Name, VARIANT_BOOL TimeDepMatProp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, TimeDepMatProp);
    return _result;
}

#pragma implementation_key(445)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetResultsSaved ( _bstr_t Name, long StagedSaveOption, long StagedMinSteps, long StagedMinStepsTD ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0003", (BSTR)Name, StagedSaveOption, StagedMinSteps, StagedMinStepsTD);
    return _result;
}

#pragma implementation_key(446)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetSolControlParameters ( _bstr_t Name, long MaxTotalSteps, long MaxFailedSubSteps, long MaxIterCS, long MaxIterNR, double TolConvD, VARIANT_BOOL UseEventStepping, double TolEventD, long MaxLineSearchPerIter, double TolLineSearch, double LineSearchStepFact ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0003\x0003\x0005\x000b\x0005\x0003\x0005\x0005", (BSTR)Name, MaxTotalSteps, MaxFailedSubSteps, MaxIterCS, MaxIterNR, TolConvD, UseEventStepping, TolEventD, MaxLineSearchPerIter, TolLineSearch, LineSearchStepFact);
    return _result;
}

#pragma implementation_key(447)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetStageData ( _bstr_t Name, long Stage, long NumberOperations, SAFEARRAY * * operation, SAFEARRAY * * GroupName, SAFEARRAY * * Age, SAFEARRAY * * LoadType, SAFEARRAY * * LoadName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x6003\x6008\x6003\x6008\x6008\x6005", (BSTR)Name, Stage, NumberOperations, operation, GroupName, Age, LoadType, LoadName, SF);
    return _result;
}

#pragma implementation_key(448)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetStageData_1 ( _bstr_t Name, long Stage, long NumberOperations, SAFEARRAY * * operation, SAFEARRAY * * ObjectType, SAFEARRAY * * ObjectName, SAFEARRAY * * Age, SAFEARRAY * * MyType, SAFEARRAY * * MyName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x6003\x6008\x6008\x6003\x6008\x6008\x6005", (BSTR)Name, Stage, NumberOperations, operation, ObjectType, ObjectName, Age, MyType, MyName, SF);
    return _result;
}

#pragma implementation_key(449)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetStageDefinitions ( _bstr_t Name, long NumberStages, SAFEARRAY * * Duration, SAFEARRAY * * Comment ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6003\x6008", (BSTR)Name, NumberStages, Duration, Comment);
    return _result;
}

#pragma implementation_key(450)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetStageDefinitions_1 ( _bstr_t Name, long NumberStages, SAFEARRAY * * Duration, SAFEARRAY * * Output, SAFEARRAY * * OutputName, SAFEARRAY * * Comment ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6003\x600b\x6008\x6008", (BSTR)Name, NumberStages, Duration, Output, OutputName, Comment);
    return _result;
}

#pragma implementation_key(451)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetTargetForceParameters ( _bstr_t Name, double TolConvF, long MaxIter, double AccelFact, VARIANT_BOOL NoStop ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0003\x0005\x000b", (BSTR)Name, TolConvF, MaxIter, AccelFact, NoStop);
    return _result;
}

#pragma implementation_key(452)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetMassSource ( _bstr_t Name, BSTR * mSource ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, mSource);
    return _result;
}

#pragma implementation_key(453)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetMassSource ( _bstr_t Name, _bstr_t mSource ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)mSource);
    return _result;
}

#pragma implementation_key(454)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetStageData_2 ( _bstr_t Name, long * Stage, long * NumberOperations, SAFEARRAY * * operation, SAFEARRAY * * ObjectType, SAFEARRAY * * ObjectName, SAFEARRAY * * Age, SAFEARRAY * * MyType, SAFEARRAY * * MyName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x6003\x6008\x6008\x6005\x6008\x6008\x6005", (BSTR)Name, Stage, NumberOperations, operation, ObjectType, ObjectName, Age, MyType, MyName, SF);
    return _result;
}

#pragma implementation_key(455)
inline long ETABSv1::cCaseStaticNonlinearStaged::GetStageDefinitions_2 ( _bstr_t Name, long * NumberStages, SAFEARRAY * * Duration, SAFEARRAY * * Output, SAFEARRAY * * OutputName, SAFEARRAY * * Comment ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6005\x600b\x6008\x6008", (BSTR)Name, NumberStages, Duration, Output, OutputName, Comment);
    return _result;
}

#pragma implementation_key(456)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetStageData_2 ( _bstr_t Name, long Stage, long NumberOperations, SAFEARRAY * * operation, SAFEARRAY * * ObjectType, SAFEARRAY * * ObjectName, SAFEARRAY * * Age, SAFEARRAY * * MyType, SAFEARRAY * * MyName, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x6003\x6008\x6008\x6005\x6008\x6008\x6005", (BSTR)Name, Stage, NumberOperations, operation, ObjectType, ObjectName, Age, MyType, MyName, SF);
    return _result;
}

#pragma implementation_key(457)
inline long ETABSv1::cCaseStaticNonlinearStaged::SetStageDefinitions_2 ( _bstr_t Name, long NumberStages, SAFEARRAY * * Duration, SAFEARRAY * * Output, SAFEARRAY * * OutputName, SAFEARRAY * * Comment ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6005\x600b\x6008\x6008", (BSTR)Name, NumberStages, Duration, Output, OutputName, Comment);
    return _result;
}

//
// dispinterface cLoadCases wrapper method implementations
//

#pragma implementation_key(458)
inline ETABSv1::cCaseBucklingPtr ETABSv1::cLoadCases::GetBuckling ( ) {
    struct cCaseBuckling * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseBucklingPtr(_result, false);
}

#pragma implementation_key(459)
inline long ETABSv1::cLoadCases::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(460)
inline long ETABSv1::cLoadCases::Count ( enum eLoadCaseType CaseType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", CaseType);
    return _result;
}

#pragma implementation_key(461)
inline long ETABSv1::cLoadCases::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(462)
inline ETABSv1::cCaseDirectHistoryLinearPtr ETABSv1::cLoadCases::GetDirHistLinear ( ) {
    struct cCaseDirectHistoryLinear * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseDirectHistoryLinearPtr(_result, false);
}

#pragma implementation_key(463)
inline ETABSv1::cCaseDirectHistoryNonlinearPtr ETABSv1::cLoadCases::GetDirHistNonlinear ( ) {
    struct cCaseDirectHistoryNonlinear * _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseDirectHistoryNonlinearPtr(_result, false);
}

#pragma implementation_key(464)
inline long ETABSv1::cLoadCases::GetNameList ( long * NumberNames, SAFEARRAY * * MyName, enum eLoadCaseType CaseType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x0003", NumberNames, MyName, CaseType);
    return _result;
}

#pragma implementation_key(465)
inline long ETABSv1::cLoadCases::GetTypeOAPI_1 ( _bstr_t Name, enum eLoadCaseType * CaseType, long * SubType, enum eLoadPatternType * DesignType, long * DesignTypeOption, long * Auto ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x4003\x4003\x4003", (BSTR)Name, CaseType, SubType, DesignType, DesignTypeOption, Auto);
    return _result;
}

#pragma implementation_key(466)
inline ETABSv1::cCaseHyperStaticPtr ETABSv1::cLoadCases::GetHyperStatic ( ) {
    struct cCaseHyperStatic * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseHyperStaticPtr(_result, false);
}

#pragma implementation_key(467)
inline ETABSv1::cCaseModalEigenPtr ETABSv1::cLoadCases::GetModalEigen ( ) {
    struct cCaseModalEigen * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseModalEigenPtr(_result, false);
}

#pragma implementation_key(468)
inline ETABSv1::cCaseModalRitzPtr ETABSv1::cLoadCases::GetModalRitz ( ) {
    struct cCaseModalRitz * _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseModalRitzPtr(_result, false);
}

#pragma implementation_key(469)
inline ETABSv1::cCaseModalHistoryLinearPtr ETABSv1::cLoadCases::GetModHistLinear ( ) {
    struct cCaseModalHistoryLinear * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseModalHistoryLinearPtr(_result, false);
}

#pragma implementation_key(470)
inline ETABSv1::cCaseModalHistoryNonlinearPtr ETABSv1::cLoadCases::GetModHistNonlinear ( ) {
    struct cCaseModalHistoryNonlinear * _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseModalHistoryNonlinearPtr(_result, false);
}

#pragma implementation_key(471)
inline ETABSv1::cCaseResponseSpectrumPtr ETABSv1::cLoadCases::GetResponseSpectrum ( ) {
    struct cCaseResponseSpectrum * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseResponseSpectrumPtr(_result, false);
}

#pragma implementation_key(472)
inline long ETABSv1::cLoadCases::SetDesignType ( _bstr_t Name, long DesignTypeOption, enum eLoadPatternType DesignType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003", (BSTR)Name, DesignTypeOption, DesignType);
    return _result;
}

#pragma implementation_key(473)
inline ETABSv1::cCaseStaticLinearPtr ETABSv1::cLoadCases::GetStaticLinear ( ) {
    struct cCaseStaticLinear * _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseStaticLinearPtr(_result, false);
}

#pragma implementation_key(474)
inline ETABSv1::cCaseStaticNonlinearPtr ETABSv1::cLoadCases::GetStaticNonlinear ( ) {
    struct cCaseStaticNonlinear * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseStaticNonlinearPtr(_result, false);
}

#pragma implementation_key(475)
inline ETABSv1::cCaseStaticNonlinearStagedPtr ETABSv1::cLoadCases::GetStaticNonlinearStaged ( ) {
    struct cCaseStaticNonlinearStaged * _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cCaseStaticNonlinearStagedPtr(_result, false);
}

#pragma implementation_key(476)
inline long ETABSv1::cLoadCases::GetTypeOAPI ( _bstr_t Name, enum eLoadCaseType * CaseType, long * SubType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003", (BSTR)Name, CaseType, SubType);
    return _result;
}

//
// dispinterface cAutoSeismic wrapper method implementations
//

#pragma implementation_key(477)
inline long ETABSv1::cAutoSeismic::GetIBC2006 ( _bstr_t Name, long * DirFlag, double * Eccen, long * PeriodFlag, long * CtType, double * UserT, VARIANT_BOOL * UserZ, double * TopZ, double * BottomZ, double * R, double * Omega, double * Cd, double * I, long * IBC2006Option, double * Latitude, double * Longitude, BSTR * ZipCode, double * Ss, double * S1, double * Tl, long * SiteClass, double * Fa, double * Fv ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005\x4003\x4003\x4005\x400b\x4005\x4005\x4005\x4005\x4005\x4005\x4003\x4005\x4005\x4008\x4005\x4005\x4005\x4003\x4005\x4005", (BSTR)Name, DirFlag, Eccen, PeriodFlag, CtType, UserT, UserZ, TopZ, BottomZ, R, Omega, Cd, I, IBC2006Option, Latitude, Longitude, ZipCode, Ss, S1, Tl, SiteClass, Fa, Fv);
    return _result;
}

#pragma implementation_key(478)
inline long ETABSv1::cAutoSeismic::SetIBC2006 ( _bstr_t Name, long DirFlag, double Eccen, long PeriodFlag, long CtType, double UserT, VARIANT_BOOL UserZ, double TopZ, double BottomZ, double R, double Omega, double Cd, double I, long IBC2006Option, double Latitude, double Longitude, _bstr_t ZipCode, double Ss, double S1, double Tl, long SiteClass, double Fa, double Fv ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003\x0003\x0005\x000b\x0005\x0005\x0005\x0005\x0005\x0005\x0003\x0005\x0005\x0008\x0005\x0005\x0005\x0003\x0005\x0005", (BSTR)Name, DirFlag, Eccen, PeriodFlag, CtType, UserT, UserZ, TopZ, BottomZ, R, Omega, Cd, I, IBC2006Option, Latitude, Longitude, (BSTR)ZipCode, Ss, S1, Tl, SiteClass, Fa, Fv);
    return _result;
}

#pragma implementation_key(479)
inline long ETABSv1::cAutoSeismic::GetASCE716 ( _bstr_t Name, SAFEARRAY * * nDir, double * Eccen, long * PeriodFlag, long * CtType, double * UserT, VARIANT_BOOL * UserZ, double * TopZ, double * BottomZ, double * R, double * Omega, double * Cd, double * I, double * Ss, double * S1, double * Tl, long * SiteClass, double * Fa, double * Fv ) {
    long _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x4005\x4003\x4003\x4005\x400b\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4003\x4005\x4005", (BSTR)Name, nDir, Eccen, PeriodFlag, CtType, UserT, UserZ, TopZ, BottomZ, R, Omega, Cd, I, Ss, S1, Tl, SiteClass, Fa, Fv);
    return _result;
}

#pragma implementation_key(480)
inline long ETABSv1::cAutoSeismic::SetASCE716 ( _bstr_t Name, SAFEARRAY * * nDir, double Eccen, long PeriodFlag, long CtType, double UserT, VARIANT_BOOL UserZ, double TopZ, double BottomZ, double R, double Omega, double Cd, double I, double Ss, double S1, double Tl, long SiteClass, double Fa, double Fv ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x0005\x0003\x0003\x0005\x000b\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0003\x0005\x0005", (BSTR)Name, nDir, Eccen, PeriodFlag, CtType, UserT, UserZ, TopZ, BottomZ, R, Omega, Cd, I, Ss, S1, Tl, SiteClass, Fa, Fv);
    return _result;
}

//
// dispinterface cLoadPatterns wrapper method implementations
//

#pragma implementation_key(481)
inline long ETABSv1::cLoadPatterns::Add ( _bstr_t Name, enum eLoadPatternType MyType, double SelfWTMultiplier, VARIANT_BOOL AddAnalysisCase ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x000b", (BSTR)Name, MyType, SelfWTMultiplier, AddAnalysisCase);
    return _result;
}

#pragma implementation_key(482)
inline ETABSv1::cAutoSeismicPtr ETABSv1::cLoadPatterns::GetAutoSeismic ( ) {
    struct cAutoSeismic * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cAutoSeismicPtr(_result, false);
}

#pragma implementation_key(483)
inline ETABSv1::cAutoWindPtr ETABSv1::cLoadPatterns::GetAutoWind ( ) {
    struct cAutoWind * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cAutoWindPtr(_result, false);
}

#pragma implementation_key(484)
inline long ETABSv1::cLoadPatterns::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(485)
inline long ETABSv1::cLoadPatterns::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(486)
inline long ETABSv1::cLoadPatterns::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(487)
inline long ETABSv1::cLoadPatterns::GetAutoSeismicCode ( _bstr_t Name, BSTR * CodeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, CodeName);
    return _result;
}

#pragma implementation_key(488)
inline long ETABSv1::cLoadPatterns::GetAutoWindCode ( _bstr_t Name, BSTR * CodeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, CodeName);
    return _result;
}

#pragma implementation_key(489)
inline long ETABSv1::cLoadPatterns::GetLoadType ( _bstr_t Name, enum eLoadPatternType * MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, MyType);
    return _result;
}

#pragma implementation_key(490)
inline long ETABSv1::cLoadPatterns::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(491)
inline long ETABSv1::cLoadPatterns::GetSelfWTMultiplier ( _bstr_t Name, double * SelfWTMultiplier ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)Name, SelfWTMultiplier);
    return _result;
}

#pragma implementation_key(492)
inline long ETABSv1::cLoadPatterns::SetLoadType ( _bstr_t Name, enum eLoadPatternType MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, MyType);
    return _result;
}

#pragma implementation_key(493)
inline long ETABSv1::cLoadPatterns::SetSelfWTMultiplier ( _bstr_t Name, double SelfWTMultiplier ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005", (BSTR)Name, SelfWTMultiplier);
    return _result;
}

//
// dispinterface cPropArea wrapper method implementations
//

#pragma implementation_key(494)
inline long ETABSv1::cPropArea::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(495)
inline long ETABSv1::cPropArea::Count ( long PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", PropType);
    return _result;
}

#pragma implementation_key(496)
inline long ETABSv1::cPropArea::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(497)
inline long ETABSv1::cPropArea::GetModifiers ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(498)
inline long ETABSv1::cPropArea::GetNameList ( long * NumberNames, SAFEARRAY * * MyName, long PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x0003", NumberNames, MyName, PropType);
    return _result;
}

#pragma implementation_key(499)
inline long ETABSv1::cPropArea::GetShellDesign ( _bstr_t Name, BSTR * MatProp, long * SteelLayoutOption, double * DesignCoverTopDir1, double * DesignCoverTopDir2, double * DesignCoverBotDir1, double * DesignCoverBotDir2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4003\x4005\x4005\x4005\x4005", (BSTR)Name, MatProp, SteelLayoutOption, DesignCoverTopDir1, DesignCoverTopDir2, DesignCoverBotDir1, DesignCoverBotDir2);
    return _result;
}

#pragma implementation_key(500)
inline long ETABSv1::cPropArea::GetShellLayer ( _bstr_t Name, long * NumberLayers, SAFEARRAY * * LayerName, SAFEARRAY * * Dist, SAFEARRAY * * Thickness, SAFEARRAY * * MatProp, SAFEARRAY * * Nonlinear, SAFEARRAY * * MatAng, SAFEARRAY * * NumIntegrationPts ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x6008\x600b\x6005\x6003", (BSTR)Name, NumberLayers, LayerName, Dist, Thickness, MatProp, Nonlinear, MatAng, NumIntegrationPts);
    return _result;
}

#pragma implementation_key(501)
inline long ETABSv1::cPropArea::GetShellLayer_1 ( _bstr_t Name, long * NumberLayers, SAFEARRAY * * LayerName, SAFEARRAY * * Dist, SAFEARRAY * * Thickness, SAFEARRAY * * MyType, SAFEARRAY * * NumIntegrationPts, SAFEARRAY * * MatProp, SAFEARRAY * * MatAng, SAFEARRAY * * S11Type, SAFEARRAY * * S22Type, SAFEARRAY * * S12Type ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x6003\x6003\x6008\x6005\x6003\x6003\x6003", (BSTR)Name, NumberLayers, LayerName, Dist, Thickness, MyType, NumIntegrationPts, MatProp, MatAng, S11Type, S22Type, S12Type);
    return _result;
}

#pragma implementation_key(502)
inline long ETABSv1::cPropArea::GetShellLayer_2 ( _bstr_t Name, long * NumberLayers, SAFEARRAY * * LayerName, SAFEARRAY * * Dist, SAFEARRAY * * Thickness, SAFEARRAY * * MyType, SAFEARRAY * * NumIntegrationPts, SAFEARRAY * * MatProp, SAFEARRAY * * MatAng, SAFEARRAY * * MatBehavior, SAFEARRAY * * S11Type, SAFEARRAY * * S22Type, SAFEARRAY * * S12Type ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x6003\x6003\x6008\x6005\x6003\x6003\x6003\x6003", (BSTR)Name, NumberLayers, LayerName, Dist, Thickness, MyType, NumIntegrationPts, MatProp, MatAng, MatBehavior, S11Type, S22Type, S12Type);
    return _result;
}

#pragma implementation_key(503)
inline long ETABSv1::cPropArea::GetTypeOAPI ( _bstr_t Name, long * PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, PropType);
    return _result;
}

#pragma implementation_key(504)
inline long ETABSv1::cPropArea::SetModifiers ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(505)
inline long ETABSv1::cPropArea::SetShellDesign ( _bstr_t Name, _bstr_t MatProp, long SteelLayoutOption, double DesignCoverTopDir1, double DesignCoverTopDir2, double DesignCoverBotDir1, double DesignCoverBotDir2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003\x0005\x0005\x0005\x0005", (BSTR)Name, (BSTR)MatProp, SteelLayoutOption, DesignCoverTopDir1, DesignCoverTopDir2, DesignCoverBotDir1, DesignCoverBotDir2);
    return _result;
}

#pragma implementation_key(506)
inline long ETABSv1::cPropArea::SetShellLayer ( _bstr_t Name, long NumberLayers, SAFEARRAY * * LayerName, SAFEARRAY * * Dist, SAFEARRAY * * Thickness, SAFEARRAY * * MatProp, SAFEARRAY * * Nonlinear, SAFEARRAY * * MatAng, SAFEARRAY * * NumIntegrationPts ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6008\x6005\x6005\x6008\x600b\x6005\x6003", (BSTR)Name, NumberLayers, LayerName, Dist, Thickness, MatProp, Nonlinear, MatAng, NumIntegrationPts);
    return _result;
}

#pragma implementation_key(507)
inline long ETABSv1::cPropArea::SetShellLayer_1 ( _bstr_t Name, long * NumberLayers, SAFEARRAY * * LayerName, SAFEARRAY * * Dist, SAFEARRAY * * Thickness, SAFEARRAY * * MyType, SAFEARRAY * * NumIntegrationPts, SAFEARRAY * * MatProp, SAFEARRAY * * MatAng, SAFEARRAY * * S11Type, SAFEARRAY * * S22Type, SAFEARRAY * * S12Type ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x6003\x6003\x6008\x6005\x6003\x6003\x6003", (BSTR)Name, NumberLayers, LayerName, Dist, Thickness, MyType, NumIntegrationPts, MatProp, MatAng, S11Type, S22Type, S12Type);
    return _result;
}

#pragma implementation_key(508)
inline long ETABSv1::cPropArea::SetShellLayer_2 ( _bstr_t Name, long * NumberLayers, SAFEARRAY * * LayerName, SAFEARRAY * * Dist, SAFEARRAY * * Thickness, SAFEARRAY * * MyType, SAFEARRAY * * NumIntegrationPts, SAFEARRAY * * MatProp, SAFEARRAY * * MatAng, SAFEARRAY * * MatBehavior, SAFEARRAY * * S11Type, SAFEARRAY * * S22Type, SAFEARRAY * * S12Type ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x6003\x6003\x6008\x6005\x6003\x6003\x6003\x6003", (BSTR)Name, NumberLayers, LayerName, Dist, Thickness, MyType, NumIntegrationPts, MatProp, MatAng, MatBehavior, S11Type, S22Type, S12Type);
    return _result;
}

#pragma implementation_key(509)
inline long ETABSv1::cPropArea::GetDeck ( _bstr_t Name, enum eDeckType * DeckType, enum eShellType * ShellType, BSTR * MatProp, double * Thickness, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x4008\x4005\x4003\x4008\x4008", (BSTR)Name, DeckType, ShellType, MatProp, Thickness, color, notes, GUID);
    return _result;
}

#pragma implementation_key(510)
inline long ETABSv1::cPropArea::GetDeckFilled ( _bstr_t Name, double * SlabDepth, double * RibDepth, double * RibWidthTop, double * RibWidthBot, double * RibSpacing, double * ShearThickness, double * UnitWeight, double * ShearStudDia, double * ShearStudHt, double * ShearStudFu ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, SlabDepth, RibDepth, RibWidthTop, RibWidthBot, RibSpacing, ShearThickness, UnitWeight, ShearStudDia, ShearStudHt, ShearStudFu);
    return _result;
}

#pragma implementation_key(511)
inline long ETABSv1::cPropArea::GetDeckSolidSlab ( _bstr_t Name, double * SlabDepth, double * ShearStudDia, double * ShearStudHt, double * ShearStudFu ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005", (BSTR)Name, SlabDepth, ShearStudDia, ShearStudHt, ShearStudFu);
    return _result;
}

#pragma implementation_key(512)
inline long ETABSv1::cPropArea::GetDeckUnfilled ( _bstr_t Name, double * RibDepth, double * RibWidthTop, double * RibWidthBot, double * RibSpacing, double * ShearThickness, double * UnitWeight ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, RibDepth, RibWidthTop, RibWidthBot, RibSpacing, ShearThickness, UnitWeight);
    return _result;
}

#pragma implementation_key(513)
inline long ETABSv1::cPropArea::GetSlab ( _bstr_t Name, enum eSlabType * SlabType, enum eShellType * ShellType, BSTR * MatProp, double * Thickness, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x4008\x4005\x4003\x4008\x4008", (BSTR)Name, SlabType, ShellType, MatProp, Thickness, color, notes, GUID);
    return _result;
}

#pragma implementation_key(514)
inline long ETABSv1::cPropArea::GetSlabRibbed ( _bstr_t Name, double * OverallDepth, double * SlabThickness, double * StemWidthTop, double * StemWidthBot, double * RibSpacing, long * RibsParallelTo ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4005\x4003", (BSTR)Name, OverallDepth, SlabThickness, StemWidthTop, StemWidthBot, RibSpacing, RibsParallelTo);
    return _result;
}

#pragma implementation_key(515)
inline long ETABSv1::cPropArea::GetSlabWaffle ( _bstr_t Name, double * OverallDepth, double * SlabThickness, double * StemWidthTop, double * StemWidthBot, double * RibSpacingDir1, double * RibSpacingDir2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, OverallDepth, SlabThickness, StemWidthTop, StemWidthBot, RibSpacingDir1, RibSpacingDir2);
    return _result;
}

#pragma implementation_key(516)
inline long ETABSv1::cPropArea::GetWall ( _bstr_t Name, enum eWallPropType * WallPropType, enum eShellType * ShellType, BSTR * MatProp, double * Thickness, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x4008\x4005\x4003\x4008\x4008", (BSTR)Name, WallPropType, ShellType, MatProp, Thickness, color, notes, GUID);
    return _result;
}

#pragma implementation_key(517)
inline long ETABSv1::cPropArea::GetWallAutoSelectList ( _bstr_t Name, SAFEARRAY * * AutoSelectList, BSTR * StartingProperty ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x4008", (BSTR)Name, AutoSelectList, StartingProperty);
    return _result;
}

#pragma implementation_key(518)
inline long ETABSv1::cPropArea::SetDeck ( _bstr_t Name, enum eDeckType DeckType, enum eShellType ShellType, _bstr_t MatProp, double Thickness, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0008\x0005\x0003\x0008\x0008", (BSTR)Name, DeckType, ShellType, (BSTR)MatProp, Thickness, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(519)
inline long ETABSv1::cPropArea::SetDeckFilled ( _bstr_t Name, double SlabDepth, double RibDepth, double RibWidthTop, double RibWidthBot, double RibSpacing, double ShearThickness, double UnitWeight, double ShearStudDia, double ShearStudHt, double ShearStudFu ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005", (BSTR)Name, SlabDepth, RibDepth, RibWidthTop, RibWidthBot, RibSpacing, ShearThickness, UnitWeight, ShearStudDia, ShearStudHt, ShearStudFu);
    return _result;
}

#pragma implementation_key(520)
inline long ETABSv1::cPropArea::SetDeckSolidSlab ( _bstr_t Name, double SlabDepth, double ShearStudDia, double ShearStudHt, double ShearStudFu ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005", (BSTR)Name, SlabDepth, ShearStudDia, ShearStudHt, ShearStudFu);
    return _result;
}

#pragma implementation_key(521)
inline long ETABSv1::cPropArea::SetDeckUnfilled ( _bstr_t Name, double RibDepth, double RibWidthTop, double RibWidthBot, double RibSpacing, double ShearThickness, double UnitWeight ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0005\x0005", (BSTR)Name, RibDepth, RibWidthTop, RibWidthBot, RibSpacing, ShearThickness, UnitWeight);
    return _result;
}

#pragma implementation_key(522)
inline long ETABSv1::cPropArea::SetSlab ( _bstr_t Name, enum eSlabType SlabType, enum eShellType ShellType, _bstr_t MatProp, double Thickness, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0008\x0005\x0003\x0008\x0008", (BSTR)Name, SlabType, ShellType, (BSTR)MatProp, Thickness, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(523)
inline long ETABSv1::cPropArea::SetSlabRibbed ( _bstr_t Name, double OverallDepth, double SlabThickness, double StemWidthTop, double StemWidthBot, double RibSpacing, long RibsParallelTo ) {
    long _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0005\x0003", (BSTR)Name, OverallDepth, SlabThickness, StemWidthTop, StemWidthBot, RibSpacing, RibsParallelTo);
    return _result;
}

#pragma implementation_key(524)
inline long ETABSv1::cPropArea::SetSlabWaffle ( _bstr_t Name, double OverallDepth, double SlabThickness, double StemWidthTop, double StemWidthBot, double RibSpacingDir1, double RibSpacingDir2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0005\x0005", (BSTR)Name, OverallDepth, SlabThickness, StemWidthTop, StemWidthBot, RibSpacingDir1, RibSpacingDir2);
    return _result;
}

#pragma implementation_key(525)
inline long ETABSv1::cPropArea::SetWall ( _bstr_t Name, enum eWallPropType WallPropType, enum eShellType ShellType, _bstr_t MatProp, double Thickness, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0008\x0005\x0003\x0008\x0008", (BSTR)Name, WallPropType, ShellType, (BSTR)MatProp, Thickness, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(526)
inline long ETABSv1::cPropArea::SetWallAutoSelectList ( _bstr_t Name, SAFEARRAY * AutoSelectList, _bstr_t StartingProperty ) {
    long _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x2008\x0008", (BSTR)Name, AutoSelectList, (BSTR)StartingProperty);
    return _result;
}

#pragma implementation_key(527)
inline long ETABSv1::cPropArea::GetDeck_1 ( _bstr_t Name, enum eDeckType * DeckType, BSTR * SlabFillMatProp, BSTR * DeckMatProp, double * SlabDepth, double * RibDepth, double * RibWidthTop, double * RibWidthBot, double * RibSpacing, double * DeckShearThickness, double * DeckUnitWeight, double * ShearStudDia, double * ShearStudHs, double * ShearStudFu, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, DeckType, SlabFillMatProp, DeckMatProp, SlabDepth, RibDepth, RibWidthTop, RibWidthBot, RibSpacing, DeckShearThickness, DeckUnitWeight, ShearStudDia, ShearStudHs, ShearStudFu, color, notes, GUID);
    return _result;
}

#pragma implementation_key(528)
inline long ETABSv1::cPropArea::SetDeck_1 ( _bstr_t Name, enum eDeckType DeckType, _bstr_t SlabFillMatProp, _bstr_t DeckMatProp, double SlabDepth, double RibDepth, double RibWidthTop, double RibWidthBot, double RibSpacing, double DeckShearThickness, double DeckUnitWeight, double ShearStudDia, double ShearStudHs, double ShearStudFu, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, DeckType, (BSTR)SlabFillMatProp, (BSTR)DeckMatProp, SlabDepth, RibDepth, RibWidthTop, RibWidthBot, RibSpacing, DeckShearThickness, DeckUnitWeight, ShearStudDia, ShearStudHs, ShearStudFu, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

//
// dispinterface cPropLink wrapper method implementations
//

#pragma implementation_key(529)
inline long ETABSv1::cPropLink::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(530)
inline long ETABSv1::cPropLink::Count ( enum eLinkPropType PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", PropType);
    return _result;
}

#pragma implementation_key(531)
inline long ETABSv1::cPropLink::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(532)
inline long ETABSv1::cPropLink::GetDamper ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * C, SAFEARRAY * * CExp, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, C, CExp, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(533)
inline long ETABSv1::cPropLink::GetFrictionIsolator ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Slow, SAFEARRAY * * Fast, SAFEARRAY * * Rate, SAFEARRAY * * Radius, double * Damping, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x4005\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Slow, Fast, Rate, Radius, Damping, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(534)
inline long ETABSv1::cPropLink::GetGap ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Dis, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Dis, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(535)
inline long ETABSv1::cPropLink::GetHook ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Dis, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Dis, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(536)
inline long ETABSv1::cPropLink::GetLinear ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Ke, SAFEARRAY * * Ce, double * DJ2, double * DJ3, VARIANT_BOOL * KeCoupled, VARIANT_BOOL * CeCoupled, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x6005\x6005\x4005\x4005\x400b\x400b\x4008\x4008", (BSTR)Name, DOF, Fixed, Ke, Ce, DJ2, DJ3, KeCoupled, CeCoupled, notes, GUID);
    return _result;
}

#pragma implementation_key(537)
inline long ETABSv1::cPropLink::GetMultiLinearElastic ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(538)
inline long ETABSv1::cPropLink::GetMultiLinearPlastic ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(539)
inline long ETABSv1::cPropLink::GetMultiLinearPoints ( _bstr_t Name, long DOF, long * NumberPoints, SAFEARRAY * * F, SAFEARRAY * * D, long * MyType, double * A1, double * A2, double * B1, double * B2, double * Eta ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x6005\x6005\x4003\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, DOF, NumberPoints, F, D, MyType, A1, A2, B1, B2, Eta);
    return _result;
}

#pragma implementation_key(540)
inline long ETABSv1::cPropLink::GetNameList ( long * NumberNames, SAFEARRAY * * MyName, enum eLinkPropType PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x0003", NumberNames, MyName, PropType);
    return _result;
}

#pragma implementation_key(541)
inline long ETABSv1::cPropLink::GetPDelta ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(542)
inline long ETABSv1::cPropLink::GetPlasticWen ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Yield, SAFEARRAY * * Ratio, SAFEARRAY * * Exp, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x6005\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Yield, Ratio, Exp, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(543)
inline long ETABSv1::cPropLink::GetRubberIsolator ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Yield, SAFEARRAY * * Ratio, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Yield, Ratio, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(544)
inline long ETABSv1::cPropLink::GetSpringData ( _bstr_t Name, double * DefinedForThisLength, double * DefinedForThisArea ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005", (BSTR)Name, DefinedForThisLength, DefinedForThisArea);
    return _result;
}

#pragma implementation_key(545)
inline long ETABSv1::cPropLink::GetTCFrictionIsolator ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Slow, SAFEARRAY * * Fast, SAFEARRAY * * Rate, SAFEARRAY * * Radius, SAFEARRAY * * SlowT, SAFEARRAY * * FastT, SAFEARRAY * * RateT, double * Kt, double * Dis, double * Dist, double * Damping, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x4005\x4005\x4005\x4005\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Slow, Fast, Rate, Radius, SlowT, FastT, RateT, Kt, Dis, Dist, Damping, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(546)
inline long ETABSv1::cPropLink::GetTypeOAPI ( _bstr_t Name, enum eLinkPropType * PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, PropType);
    return _result;
}

#pragma implementation_key(547)
inline long ETABSv1::cPropLink::GetWeightAndMass ( _bstr_t Name, double * W, double * M, double * R1, double * R2, double * R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, W, M, R1, R2, R3);
    return _result;
}

#pragma implementation_key(548)
inline long ETABSv1::cPropLink::SetDamper ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * C, SAFEARRAY * * CExp, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, C, CExp, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(549)
inline long ETABSv1::cPropLink::SetFrictionIsolator ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Slow, SAFEARRAY * * Fast, SAFEARRAY * * Rate, SAFEARRAY * * Radius, double Damping, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x0005\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Slow, Fast, Rate, Radius, Damping, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(550)
inline long ETABSv1::cPropLink::SetGap ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Dis, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Dis, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(551)
inline long ETABSv1::cPropLink::SetHook ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Dis, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Dis, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(552)
inline long ETABSv1::cPropLink::SetLinear ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Ke, SAFEARRAY * * Ce, double DJ2, double DJ3, VARIANT_BOOL KeCoupled, VARIANT_BOOL CeCoupled, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x6005\x6005\x0005\x0005\x000b\x000b\x0008\x0008", (BSTR)Name, DOF, Fixed, Ke, Ce, DJ2, DJ3, KeCoupled, CeCoupled, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(553)
inline long ETABSv1::cPropLink::SetMultiLinearElastic ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(554)
inline long ETABSv1::cPropLink::SetMultiLinearPlastic ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(555)
inline long ETABSv1::cPropLink::SetMultiLinearPoints ( _bstr_t Name, long DOF, long NumberPoints, SAFEARRAY * * F, SAFEARRAY * * D, long MyType, double A1, double A2, double B1, double B2, double Eta ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x6005\x6005\x0003\x0005\x0005\x0005\x0005\x0005", (BSTR)Name, DOF, NumberPoints, F, D, MyType, A1, A2, B1, B2, Eta);
    return _result;
}

#pragma implementation_key(556)
inline long ETABSv1::cPropLink::SetPDelta ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(557)
inline long ETABSv1::cPropLink::SetPlasticWen ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Yield, SAFEARRAY * * Ratio, SAFEARRAY * * Exp, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x6005\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Yield, Ratio, Exp, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(558)
inline long ETABSv1::cPropLink::SetRubberIsolator ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Yield, SAFEARRAY * * Ratio, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Yield, Ratio, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(559)
inline long ETABSv1::cPropLink::SetSpringData ( _bstr_t Name, double DefinedForThisLength, double DefinedForThisArea ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005", (BSTR)Name, DefinedForThisLength, DefinedForThisArea);
    return _result;
}

#pragma implementation_key(560)
inline long ETABSv1::cPropLink::SetTCFrictionIsolator ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * Slow, SAFEARRAY * * Fast, SAFEARRAY * * Rate, SAFEARRAY * * Radius, SAFEARRAY * * SlowT, SAFEARRAY * * FastT, SAFEARRAY * * RateT, double Kt, double Dis, double Dist, double Damping, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x0005\x0005\x0005\x0005\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, Slow, Fast, Rate, Radius, SlowT, FastT, RateT, Kt, Dis, Dist, Damping, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(561)
inline long ETABSv1::cPropLink::SetWeightAndMass ( _bstr_t Name, double W, double M, double R1, double R2, double R3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0005", (BSTR)Name, W, M, R1, R2, R3);
    return _result;
}

#pragma implementation_key(562)
inline long ETABSv1::cPropLink::GetDamperBilinear ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * C, SAFEARRAY * * CY, SAFEARRAY * * ForceLimit, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x6005\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, C, CY, ForceLimit, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(563)
inline long ETABSv1::cPropLink::GetDamperFrictionSpring ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * K1, SAFEARRAY * * K2, SAFEARRAY * * u0, SAFEARRAY * * us, SAFEARRAY * * Direction, double * DJ2, double * DJ3, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6003\x4005\x4005\x4008\x4008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, K1, K2, u0, us, Direction, DJ2, DJ3, notes, GUID);
    return _result;
}

#pragma implementation_key(564)
inline long ETABSv1::cPropLink::SetDamperBilinear ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * C, SAFEARRAY * * CY, SAFEARRAY * * ForceLimit, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x6005\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, C, CY, ForceLimit, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(565)
inline long ETABSv1::cPropLink::SetDamperFrictionSpring ( _bstr_t Name, SAFEARRAY * * DOF, SAFEARRAY * * Fixed, SAFEARRAY * * Nonlinear, SAFEARRAY * * Ke, SAFEARRAY * * Ce, SAFEARRAY * * K, SAFEARRAY * * K1, SAFEARRAY * * K2, SAFEARRAY * * u0, SAFEARRAY * * us, SAFEARRAY * * Direction, double DJ2, double DJ3, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x600b\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6003\x0005\x0005\x0008\x0008", (BSTR)Name, DOF, Fixed, Nonlinear, Ke, Ce, K, K1, K2, u0, us, Direction, DJ2, DJ3, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(566)
inline long ETABSv1::cPropLink::GetAcceptanceCriteria ( _bstr_t Name, long * AcceptanceType, VARIANT_BOOL * Symmetric, SAFEARRAY * * Active, SAFEARRAY * * IOPos, SAFEARRAY * * LSPos, SAFEARRAY * * CPPos, SAFEARRAY * * IONeg, SAFEARRAY * * LSNeg, SAFEARRAY * * CPNeg ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x400b\x600b\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, AcceptanceType, Symmetric, Active, IOPos, LSPos, CPPos, IONeg, LSNeg, CPNeg);
    return _result;
}

#pragma implementation_key(567)
inline long ETABSv1::cPropLink::SetAcceptanceCriteria ( _bstr_t Name, long AcceptanceType, VARIANT_BOOL Symmetric, SAFEARRAY * * Active, SAFEARRAY * * IOPos, SAFEARRAY * * LSPos, SAFEARRAY * * CPPos, SAFEARRAY * * IONeg, SAFEARRAY * * LSNeg, SAFEARRAY * * CPNeg ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000b\x600b\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)Name, AcceptanceType, Symmetric, Active, IOPos, LSPos, CPPos, IONeg, LSNeg, CPNeg);
    return _result;
}

//
// dispinterface cPropRebar wrapper method implementations
//

#pragma implementation_key(568)
inline long ETABSv1::cPropRebar::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(569)
inline long ETABSv1::cPropRebar::GetRebarProps ( _bstr_t Name, double * Area, double * Diameter ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005", (BSTR)Name, Area, Diameter);
    return _result;
}

#pragma implementation_key(570)
inline long ETABSv1::cPropRebar::GetRebarPropsWithGUID ( _bstr_t Name, double * Area, double * Diameter, BSTR * MyGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4008", (BSTR)Name, Area, Diameter, MyGUID);
    return _result;
}

#pragma implementation_key(571)
inline long ETABSv1::cPropRebar::GetNameListWithData ( long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * Areas, SAFEARRAY * * Diameters, SAFEARRAY * * MyGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6005\x6005\x6008", NumberNames, MyName, Areas, Diameters, MyGUID);
    return _result;
}

//
// dispinterface cPropTendon wrapper method implementations
//

#pragma implementation_key(572)
inline long ETABSv1::cPropTendon::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(573)
inline long ETABSv1::cPropTendon::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(574)
inline long ETABSv1::cPropTendon::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(575)
inline long ETABSv1::cPropTendon::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(576)
inline long ETABSv1::cPropTendon::GetProp ( _bstr_t Name, BSTR * MatProp, long * ModelingOption, double * Area, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4003\x4005\x4003\x4008\x4008", (BSTR)Name, MatProp, ModelingOption, Area, color, notes, GUID);
    return _result;
}

#pragma implementation_key(577)
inline long ETABSv1::cPropTendon::SetProp ( _bstr_t Name, _bstr_t MatProp, long ModelingOption, double Area, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, ModelingOption, Area, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

//
// dispinterface cPropFrame wrapper method implementations
//

#pragma implementation_key(578)
inline long ETABSv1::cPropFrame::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(579)
inline long ETABSv1::cPropFrame::Count ( enum eFramePropType PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", PropType);
    return _result;
}

#pragma implementation_key(580)
inline long ETABSv1::cPropFrame::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(581)
inline long ETABSv1::cPropFrame::GetAngle ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, color, notes, GUID);
    return _result;
}

#pragma implementation_key(582)
inline long ETABSv1::cPropFrame::GetAutoSelectSteel ( _bstr_t Name, long * NumberItems, SAFEARRAY * * SectName, BSTR * AutoStartSection, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x4008\x4008\x4008", (BSTR)Name, NumberItems, SectName, AutoStartSection, notes, GUID);
    return _result;
}

#pragma implementation_key(583)
inline long ETABSv1::cPropFrame::GetChannel ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, color, notes, GUID);
    return _result;
}

#pragma implementation_key(584)
inline long ETABSv1::cPropFrame::GetCircle ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, color, notes, GUID);
    return _result;
}

#pragma implementation_key(585)
inline long ETABSv1::cPropFrame::GetCoverPlatedI ( _bstr_t Name, BSTR * SectName, double * FyTopFlange, double * FyWeb, double * FyBotFlange, double * Tc, double * Bc, BSTR * MatPropTop, double * Tcb, double * Bcb, BSTR * MatPropBot, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4005\x4005\x4005\x4005\x4005\x4008\x4005\x4005\x4008\x4003\x4008\x4008", (BSTR)Name, SectName, FyTopFlange, FyWeb, FyBotFlange, Tc, Bc, MatPropTop, Tcb, Bcb, MatPropBot, color, notes, GUID);
    return _result;
}

#pragma implementation_key(586)
inline long ETABSv1::cPropFrame::GetDblAngle ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * Dis, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, Dis, color, notes, GUID);
    return _result;
}

#pragma implementation_key(587)
inline long ETABSv1::cPropFrame::GetDblChannel ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * Dis, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, Dis, color, notes, GUID);
    return _result;
}

#pragma implementation_key(588)
inline long ETABSv1::cPropFrame::GetGeneral ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Area, double * As2, double * As3, double * Torsion, double * I22, double * I33, double * S22, double * S33, double * Z22, double * Z33, double * R22, double * R33, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Area, As2, As3, Torsion, I22, I33, S22, S33, Z22, Z33, R22, R33, color, notes, GUID);
    return _result;
}

#pragma implementation_key(589)
inline long ETABSv1::cPropFrame::GetISection ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * T2b, double * Tfb, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, T2b, Tfb, color, notes, GUID);
    return _result;
}

#pragma implementation_key(590)
inline long ETABSv1::cPropFrame::GetModifiers ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(591)
inline long ETABSv1::cPropFrame::GetNameInPropFile ( _bstr_t Name, BSTR * NameInFile, BSTR * FileName, BSTR * MatProp, enum eFramePropType * PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4008\x4003", (BSTR)Name, NameInFile, FileName, MatProp, PropType);
    return _result;
}

#pragma implementation_key(592)
inline long ETABSv1::cPropFrame::GetNameList ( long * NumberNames, SAFEARRAY * * MyName, enum eFramePropType PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x0003", NumberNames, MyName, PropType);
    return _result;
}

#pragma implementation_key(593)
inline long ETABSv1::cPropFrame::GetNonPrismatic ( _bstr_t Name, long * NumberItems, SAFEARRAY * * StartSec, SAFEARRAY * * EndSec, SAFEARRAY * * MyLength, SAFEARRAY * * MyType, SAFEARRAY * * EI33, SAFEARRAY * * EI22, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6005\x6003\x6003\x6003\x4003\x4008\x4008", (BSTR)Name, NumberItems, StartSec, EndSec, MyLength, MyType, EI33, EI22, color, notes, GUID);
    return _result;
}

#pragma implementation_key(594)
inline long ETABSv1::cPropFrame::GetPipe ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * Tw, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, Tw, color, notes, GUID);
    return _result;
}

#pragma implementation_key(595)
inline long ETABSv1::cPropFrame::GetPropFileNameList ( _bstr_t FileName, long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * MyPropType, enum eFramePropType PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x0003", (BSTR)FileName, NumberNames, MyName, MyPropType, PropType);
    return _result;
}

#pragma implementation_key(596)
inline long ETABSv1::cPropFrame::GetRebarBeam ( _bstr_t Name, BSTR * MatPropLong, BSTR * MatPropConfine, double * CoverTop, double * CoverBot, double * TopLeftArea, double * TopRightArea, double * BotLeftArea, double * BotRightArea ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, MatPropLong, MatPropConfine, CoverTop, CoverBot, TopLeftArea, TopRightArea, BotLeftArea, BotRightArea);
    return _result;
}

#pragma implementation_key(597)
inline long ETABSv1::cPropFrame::GetRebarColumn ( _bstr_t Name, BSTR * MatPropLong, BSTR * MatPropConfine, long * Pattern, long * ConfineType, double * Cover, long * NumberCBars, long * NumberR3Bars, long * NumberR2Bars, BSTR * RebarSize, BSTR * TieSize, double * TieSpacingLongit, long * Number2DirTieBars, long * Number3DirTieBars, VARIANT_BOOL * ToBeDesigned ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4003\x4003\x4005\x4003\x4003\x4003\x4008\x4008\x4005\x4003\x4003\x400b", (BSTR)Name, MatPropLong, MatPropConfine, Pattern, ConfineType, Cover, NumberCBars, NumberR3Bars, NumberR2Bars, RebarSize, TieSize, TieSpacingLongit, Number2DirTieBars, Number3DirTieBars, ToBeDesigned);
    return _result;
}

#pragma implementation_key(598)
inline long ETABSv1::cPropFrame::GetRectangle ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, color, notes, GUID);
    return _result;
}

#pragma implementation_key(599)
inline long ETABSv1::cPropFrame::GetSectProps ( _bstr_t Name, double * Area, double * As2, double * As3, double * Torsion, double * I22, double * I33, double * S22, double * S33, double * Z22, double * Z33, double * R22, double * R33 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, Area, As2, As3, Torsion, I22, I33, S22, S33, Z22, Z33, R22, R33);
    return _result;
}

#pragma implementation_key(600)
inline long ETABSv1::cPropFrame::GetTee ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, color, notes, GUID);
    return _result;
}

#pragma implementation_key(601)
inline long ETABSv1::cPropFrame::GetTube ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, color, notes, GUID);
    return _result;
}

#pragma implementation_key(602)
inline long ETABSv1::cPropFrame::GetTypeOAPI ( _bstr_t Name, enum eFramePropType * PropType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, PropType);
    return _result;
}

#pragma implementation_key(603)
inline long ETABSv1::cPropFrame::GetTypeRebar ( _bstr_t Name, long * MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, MyType);
    return _result;
}

#pragma implementation_key(604)
inline long ETABSv1::cPropFrame::ImportProp ( _bstr_t Name, _bstr_t MatProp, _bstr_t FileName, _bstr_t PropName, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, (BSTR)FileName, (BSTR)PropName, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(605)
inline ETABSv1::cPropFrameSDShapePtr ETABSv1::cPropFrame::GetSDShape ( ) {
    struct cPropFrameSDShape * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropFrameSDShapePtr(_result, false);
}

#pragma implementation_key(606)
inline long ETABSv1::cPropFrame::SetAngle ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(607)
inline long ETABSv1::cPropFrame::SetAutoSelectSteel ( _bstr_t Name, long NumberItems, SAFEARRAY * * SectName, _bstr_t AutoStartSection, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6008\x0008\x0008\x0008", (BSTR)Name, NumberItems, SectName, (BSTR)AutoStartSection, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(608)
inline long ETABSv1::cPropFrame::SetChannel ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(609)
inline long ETABSv1::cPropFrame::SetCircle ( _bstr_t Name, _bstr_t MatProp, double T3, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(610)
inline long ETABSv1::cPropFrame::SetCoverPlatedI ( _bstr_t Name, _bstr_t SectName, double FyTopFlange, double FyWeb, double FyBotFlange, double Tc, double Bc, _bstr_t MatPropTop, double Tcb, double Bcb, _bstr_t MatPropBot, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0008\x0005\x0005\x0008\x0003\x0008\x0008", (BSTR)Name, (BSTR)SectName, FyTopFlange, FyWeb, FyBotFlange, Tc, Bc, (BSTR)MatPropTop, Tcb, Bcb, (BSTR)MatPropBot, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(611)
inline long ETABSv1::cPropFrame::SetDblAngle ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double Dis, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, Dis, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(612)
inline long ETABSv1::cPropFrame::SetDblChannel ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double Dis, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, Dis, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(613)
inline long ETABSv1::cPropFrame::SetGeneral ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Area, double As2, double As3, double Torsion, double I22, double I33, double S22, double S33, double Z22, double Z33, double R22, double R33, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Area, As2, As3, Torsion, I22, I33, S22, S33, Z22, Z33, R22, R33, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(614)
inline long ETABSv1::cPropFrame::SetISection ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double T2b, double Tfb, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, T2b, Tfb, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(615)
inline long ETABSv1::cPropFrame::SetModifiers ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(616)
inline long ETABSv1::cPropFrame::SetNonPrismatic ( _bstr_t Name, long NumberItems, SAFEARRAY * * StartSec, SAFEARRAY * * EndSec, SAFEARRAY * * MyLength, SAFEARRAY * * MyType, SAFEARRAY * * EI33, SAFEARRAY * * EI22, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6008\x6008\x6005\x6003\x6003\x6003\x0003\x0008\x0008", (BSTR)Name, NumberItems, StartSec, EndSec, MyLength, MyType, EI33, EI22, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(617)
inline long ETABSv1::cPropFrame::SetPipe ( _bstr_t Name, _bstr_t MatProp, double T3, double Tw, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, Tw, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(618)
inline long ETABSv1::cPropFrame::SetRebarBeam ( _bstr_t Name, _bstr_t MatPropLong, _bstr_t MatPropConfine, double CoverTop, double CoverBot, double TopLeftArea, double TopRightArea, double BotLeftArea, double BotRightArea ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0005", (BSTR)Name, (BSTR)MatPropLong, (BSTR)MatPropConfine, CoverTop, CoverBot, TopLeftArea, TopRightArea, BotLeftArea, BotRightArea);
    return _result;
}

#pragma implementation_key(619)
inline long ETABSv1::cPropFrame::SetRebarColumn ( _bstr_t Name, _bstr_t MatPropLong, _bstr_t MatPropConfine, long Pattern, long ConfineType, double Cover, long NumberCBars, long NumberR3Bars, long NumberR2Bars, _bstr_t RebarSize, _bstr_t TieSize, double TieSpacingLongit, long Number2DirTieBars, long Number3DirTieBars, VARIANT_BOOL ToBeDesigned ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0008\x0003\x0003\x0005\x0003\x0003\x0003\x0008\x0008\x0005\x0003\x0003\x000b", (BSTR)Name, (BSTR)MatPropLong, (BSTR)MatPropConfine, Pattern, ConfineType, Cover, NumberCBars, NumberR3Bars, NumberR2Bars, (BSTR)RebarSize, (BSTR)TieSize, TieSpacingLongit, Number2DirTieBars, Number3DirTieBars, ToBeDesigned);
    return _result;
}

#pragma implementation_key(620)
inline long ETABSv1::cPropFrame::SetRectangle ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(621)
inline long ETABSv1::cPropFrame::SetTee ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(622)
inline long ETABSv1::cPropFrame::SetTube ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(623)
inline long ETABSv1::cPropFrame::GetSDSection ( _bstr_t Name, BSTR * MatProp, long * NumberItems, SAFEARRAY * * ShapeName, SAFEARRAY * * MyType, long * DesignType, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4003\x6008\x6003\x4003\x4003\x4008\x4008", (BSTR)Name, MatProp, NumberItems, ShapeName, MyType, DesignType, color, notes, GUID);
    return _result;
}

#pragma implementation_key(624)
inline long ETABSv1::cPropFrame::SetSDSection ( _bstr_t Name, _bstr_t MatProp, long DesignType, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, DesignType, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(625)
inline long ETABSv1::cPropFrame::GetColdC ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Thickness, double * Radius, double * LipDepth, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Thickness, Radius, LipDepth, color, notes, GUID);
    return _result;
}

#pragma implementation_key(626)
inline long ETABSv1::cPropFrame::GetColdHat ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Thickness, double * Radius, double * LipDepth, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Thickness, Radius, LipDepth, color, notes, GUID);
    return _result;
}

#pragma implementation_key(627)
inline long ETABSv1::cPropFrame::GetColdZ ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Thickness, double * Radius, double * LipDepth, double * LipAngle, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Thickness, Radius, LipDepth, LipAngle, color, notes, GUID);
    return _result;
}

#pragma implementation_key(628)
inline long ETABSv1::cPropFrame::GetPrecastI ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, SAFEARRAY * * B, SAFEARRAY * * D, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x6005\x6005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, B, D, color, notes, GUID);
    return _result;
}

#pragma implementation_key(629)
inline long ETABSv1::cPropFrame::SetColdC ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Thickness, double Radius, double LipDepth, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Thickness, Radius, LipDepth, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(630)
inline long ETABSv1::cPropFrame::SetColdHat ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Thickness, double Radius, double LipDepth, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Thickness, Radius, LipDepth, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(631)
inline long ETABSv1::cPropFrame::SetColdZ ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Thickness, double Radius, double LipDepth, double LipAngle, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Thickness, Radius, LipDepth, LipAngle, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(632)
inline long ETABSv1::cPropFrame::SetPrecastI ( _bstr_t Name, _bstr_t MatProp, SAFEARRAY * * B, SAFEARRAY * * D, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x6005\x6005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, B, D, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(633)
inline long ETABSv1::cPropFrame::GetMaterial ( _bstr_t Name, BSTR * MatProp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, MatProp);
    return _result;
}

#pragma implementation_key(634)
inline long ETABSv1::cPropFrame::SetMaterial ( _bstr_t Name, _bstr_t MatProp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)MatProp);
    return _result;
}

#pragma implementation_key(635)
inline long ETABSv1::cPropFrame::GetTrapezoidal ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * T2b, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, T2b, color, notes, GUID);
    return _result;
}

#pragma implementation_key(636)
inline long ETABSv1::cPropFrame::SetTrapezoidal ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double T2b, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, T2b, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(637)
inline long ETABSv1::cPropFrame::GetTube_1 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * Radius, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, Radius, color, notes, GUID);
    return _result;
}

#pragma implementation_key(638)
inline long ETABSv1::cPropFrame::SetTube_1 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double Radius, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, Radius, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(639)
inline long ETABSv1::cPropFrame::GetAngle_1 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * FilletRadius, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, FilletRadius, color, notes, GUID);
    return _result;
}

#pragma implementation_key(640)
inline long ETABSv1::cPropFrame::SetAngle_1 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double FilletRadius, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, FilletRadius, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(641)
inline long ETABSv1::cPropFrame::GetChannel_2 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * FilletRadius, VARIANT_BOOL * MirrorAbout2, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, FilletRadius, MirrorAbout2, color, notes, GUID);
    return _result;
}

#pragma implementation_key(642)
inline long ETABSv1::cPropFrame::SetChannel_2 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double FilletRadius, VARIANT_BOOL MirrorAbout2, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, FilletRadius, MirrorAbout2, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(643)
inline long ETABSv1::cPropFrame::GetDblAngle_2 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * Dis, double * FilletRadius, VARIANT_BOOL * MirrorAbout3, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, Dis, FilletRadius, MirrorAbout3, color, notes, GUID);
    return _result;
}

#pragma implementation_key(644)
inline long ETABSv1::cPropFrame::SetDblAngle_2 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double Dis, double FilletRadius, VARIANT_BOOL MirrorAbout3, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0005\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, Dis, FilletRadius, MirrorAbout3, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(645)
inline long ETABSv1::cPropFrame::GetDblChannel_1 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * Dis, double * FilletRadius, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x80, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, Dis, FilletRadius, color, notes, GUID);
    return _result;
}

#pragma implementation_key(646)
inline long ETABSv1::cPropFrame::SetDblChannel_1 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double Dis, double FilletRadius, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x81, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, Dis, FilletRadius, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(647)
inline long ETABSv1::cPropFrame::GetISection_1 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * T2b, double * Tfb, double * FilletRadius, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x82, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, T2b, Tfb, FilletRadius, color, notes, GUID);
    return _result;
}

#pragma implementation_key(648)
inline long ETABSv1::cPropFrame::SetISection_1 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double T2b, double Tfb, double FilletRadius, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x83, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, T2b, Tfb, FilletRadius, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(649)
inline long ETABSv1::cPropFrame::GetTee_1 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * FilletRadius, VARIANT_BOOL * MirrorAbout3, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x84, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, FilletRadius, MirrorAbout3, color, notes, GUID);
    return _result;
}

#pragma implementation_key(650)
inline long ETABSv1::cPropFrame::SetTee_1 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double FilletRadius, VARIANT_BOOL MirrorAbout3, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x85, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, FilletRadius, MirrorAbout3, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(651)
inline long ETABSv1::cPropFrame::GetConcreteL ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * TwC, double * TwT, VARIANT_BOOL * MirrorAbout2, VARIANT_BOOL * MirrorAbout3, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x56, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x400b\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, TwC, TwT, MirrorAbout2, MirrorAbout3, color, notes, GUID);
    return _result;
}

#pragma implementation_key(652)
inline long ETABSv1::cPropFrame::GetConcreteTee ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * TwF, double * TwT, VARIANT_BOOL * MirrorAbout3, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x52, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, TwF, TwT, MirrorAbout3, color, notes, GUID);
    return _result;
}

#pragma implementation_key(653)
inline long ETABSv1::cPropFrame::GetPlate ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, color, notes, GUID);
    return _result;
}

#pragma implementation_key(654)
inline long ETABSv1::cPropFrame::GetRod ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, color, notes, GUID);
    return _result;
}

#pragma implementation_key(655)
inline long ETABSv1::cPropFrame::GetSteelAngle ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * R, VARIANT_BOOL * MirrorAbout2, VARIANT_BOOL * MirrorAbout3, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x400b\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, R, MirrorAbout2, MirrorAbout3, color, notes, GUID);
    return _result;
}

#pragma implementation_key(656)
inline long ETABSv1::cPropFrame::GetSteelTee ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * R, VARIANT_BOOL * MirrorAbout3, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, R, MirrorAbout3, color, notes, GUID);
    return _result;
}

#pragma implementation_key(657)
inline long ETABSv1::cPropFrame::SetConcreteL ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double TwC, double TwT, VARIANT_BOOL MirrorAbout2, VARIANT_BOOL MirrorAbout3, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x57, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x000b\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, TwC, TwT, MirrorAbout2, MirrorAbout3, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(658)
inline long ETABSv1::cPropFrame::SetConcreteTee ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double TwF, double TwT, VARIANT_BOOL MirrorAbout3, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x53, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, TwF, TwT, MirrorAbout3, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(659)
inline long ETABSv1::cPropFrame::SetPlate ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(660)
inline long ETABSv1::cPropFrame::SetRod ( _bstr_t Name, _bstr_t MatProp, double T3, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(661)
inline long ETABSv1::cPropFrame::SetSteelAngle ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double R, VARIANT_BOOL MirrorAbout2, VARIANT_BOOL MirrorAbout3, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x55, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x000b\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, R, MirrorAbout2, MirrorAbout3, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(662)
inline long ETABSv1::cPropFrame::SetSteelTee ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double R, VARIANT_BOOL MirrorAbout3, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, R, MirrorAbout3, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(663)
inline long ETABSv1::cPropFrame::GetAllFrameProperties ( long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * PropType, SAFEARRAY * * T3, SAFEARRAY * * T2, SAFEARRAY * * Tf, SAFEARRAY * * Tw, SAFEARRAY * * T2b, SAFEARRAY * * Tfb ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6003\x6005\x6005\x6005\x6005\x6005\x6005", NumberNames, MyName, PropType, T3, T2, Tf, Tw, T2b, Tfb);
    return _result;
}

#pragma implementation_key(664)
inline long ETABSv1::cPropFrame::GetAllFrameProperties_2 ( long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * PropType, SAFEARRAY * * T3, SAFEARRAY * * T2, SAFEARRAY * * Tf, SAFEARRAY * * Tw, SAFEARRAY * * T2b, SAFEARRAY * * Tfb, SAFEARRAY * * Area ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6003\x6005\x6005\x6005\x6005\x6005\x6005\x6005", NumberNames, MyName, PropType, T3, T2, Tf, Tw, T2b, Tfb, Area);
    return _result;
}

#pragma implementation_key(665)
inline long ETABSv1::cPropFrame::GetRebarColumn_1 ( _bstr_t Name, BSTR * MatPropLong, BSTR * MatPropConfine, long * Pattern, long * ConfineType, double * Cover, long * NumberCBars, long * NumberR3Bars, long * NumberR2Bars, BSTR * RebarSize, BSTR * TieSize, double * TieSpacingLongit, long * Number2DirTieBars, long * Number3DirTieBars, VARIANT_BOOL * ToBeDesigned, BSTR * LongitCornerRebarSize, double * LongitRebarArea, double * LongitCornerRebarArea ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4003\x4003\x4005\x4003\x4003\x4003\x4008\x4008\x4005\x4003\x4003\x400b\x4008\x4005\x4005", (BSTR)Name, MatPropLong, MatPropConfine, Pattern, ConfineType, Cover, NumberCBars, NumberR3Bars, NumberR2Bars, RebarSize, TieSize, TieSpacingLongit, Number2DirTieBars, Number3DirTieBars, ToBeDesigned, LongitCornerRebarSize, LongitRebarArea, LongitCornerRebarArea);
    return _result;
}

#pragma implementation_key(666)
inline long ETABSv1::cPropFrame::GetConcreteBox ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x68, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, color, notes, GUID);
    return _result;
}

#pragma implementation_key(667)
inline long ETABSv1::cPropFrame::SetConcreteBox ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(668)
inline long ETABSv1::cPropFrame::GetConcreteCross ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, color, notes, GUID);
    return _result;
}

#pragma implementation_key(669)
inline long ETABSv1::cPropFrame::SetConcreteCross ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(670)
inline long ETABSv1::cPropFrame::GetConcretePipe ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * Diameter, double * Tw, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, Diameter, Tw, color, notes, GUID);
    return _result;
}

#pragma implementation_key(671)
inline long ETABSv1::cPropFrame::SetConcretePipe ( _bstr_t Name, _bstr_t MatProp, double Diameter, double Tw, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, Diameter, Tw, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(672)
inline long ETABSv1::cPropFrame::GetDblAngle_1 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, double * Dis, VARIANT_BOOL * MirrorAbout3, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, Dis, MirrorAbout3, color, notes, GUID);
    return _result;
}

#pragma implementation_key(673)
inline long ETABSv1::cPropFrame::SetDblAngle_1 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, double Dis, VARIANT_BOOL MirrorAbout3, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, Dis, MirrorAbout3, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(674)
inline long ETABSv1::cPropFrame::GetChannel_1 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Tf, double * Tw, VARIANT_BOOL * MirrorAbout2, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Tf, Tw, MirrorAbout2, color, notes, GUID);
    return _result;
}

#pragma implementation_key(675)
inline long ETABSv1::cPropFrame::SetChannel_1 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Tf, double Tw, VARIANT_BOOL MirrorAbout2, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Tf, Tw, MirrorAbout2, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(676)
inline long ETABSv1::cPropFrame::GetColdC_1 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Thickness, double * Radius, double * LipDepth, VARIANT_BOOL * MirrorAbout2, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Thickness, Radius, LipDepth, MirrorAbout2, color, notes, GUID);
    return _result;
}

#pragma implementation_key(677)
inline long ETABSv1::cPropFrame::SetColdC_1 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Thickness, double Radius, double LipDepth, VARIANT_BOOL MirrorAbout2, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Thickness, Radius, LipDepth, MirrorAbout2, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(678)
inline long ETABSv1::cPropFrame::GetColdHat_1 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Thickness, double * Radius, double * LipDepth, VARIANT_BOOL * MirrorAbout2, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x76, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Thickness, Radius, LipDepth, MirrorAbout2, color, notes, GUID);
    return _result;
}

#pragma implementation_key(679)
inline long ETABSv1::cPropFrame::SetColdHat_1 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Thickness, double Radius, double LipDepth, VARIANT_BOOL MirrorAbout2, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x77, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Thickness, Radius, LipDepth, MirrorAbout2, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(680)
inline long ETABSv1::cPropFrame::GetColdZ_1 ( _bstr_t Name, BSTR * FileName, BSTR * MatProp, double * T3, double * T2, double * Thickness, double * Radius, double * LipDepth, double * LipAngle, VARIANT_BOOL * MirrorAbout2, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x78, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x400b\x4003\x4008\x4008", (BSTR)Name, FileName, MatProp, T3, T2, Thickness, Radius, LipDepth, LipAngle, MirrorAbout2, color, notes, GUID);
    return _result;
}

#pragma implementation_key(681)
inline long ETABSv1::cPropFrame::SetColdZ_1 ( _bstr_t Name, _bstr_t MatProp, double T3, double T2, double Thickness, double Radius, double LipDepth, double LipAngle, VARIANT_BOOL MirrorAbout2, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x79, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0005\x0005\x0005\x0005\x0005\x000b\x0003\x0008\x0008", (BSTR)Name, (BSTR)MatProp, T3, T2, Thickness, Radius, LipDepth, LipAngle, MirrorAbout2, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

//
// dispinterface cPropFrameSDShape wrapper method implementations
//

#pragma implementation_key(682)
inline long ETABSv1::cPropFrameSDShape::GetAngle ( _bstr_t Name, _bstr_t ShapeName, BSTR * MatProp, BSTR * PropName, long * color, double * XCenter, double * YCenter, double * H, double * Bf, double * Tf, double * Tw, double * Rotation ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008\x4008\x4003\x4005\x4005\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, (BSTR)ShapeName, MatProp, PropName, color, XCenter, YCenter, H, Bf, Tf, Tw, Rotation);
    return _result;
}

#pragma implementation_key(683)
inline long ETABSv1::cPropFrameSDShape::GetISection ( _bstr_t Name, _bstr_t ShapeName, BSTR * MatProp, BSTR * PropName, long * color, double * XCenter, double * YCenter, double * H, double * Bf, double * Tf, double * Tw, double * Bfb, double * Tfb, double * Rotation ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008\x4008\x4003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, (BSTR)ShapeName, MatProp, PropName, color, XCenter, YCenter, H, Bf, Tf, Tw, Bfb, Tfb, Rotation);
    return _result;
}

#pragma implementation_key(684)
inline long ETABSv1::cPropFrameSDShape::GetReinfCircle ( _bstr_t Name, _bstr_t ShapeName, double * XCenter, double * YCenter, double * Diameter, long * NumBars, double * Rotation, BSTR * RebarSize, BSTR * MatRebar ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4005\x4005\x4005\x4003\x4005\x4008\x4008", (BSTR)Name, (BSTR)ShapeName, XCenter, YCenter, Diameter, NumBars, Rotation, RebarSize, MatRebar);
    return _result;
}

#pragma implementation_key(685)
inline long ETABSv1::cPropFrameSDShape::GetReinfCorner ( _bstr_t Name, _bstr_t ShapeName, long * NumberItems, SAFEARRAY * * PointNum, SAFEARRAY * * RebarSize ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4003\x6003\x6008", (BSTR)Name, (BSTR)ShapeName, NumberItems, PointNum, RebarSize);
    return _result;
}

#pragma implementation_key(686)
inline long ETABSv1::cPropFrameSDShape::GetReinfEdge ( _bstr_t Name, _bstr_t ShapeName, long * NumberItems, SAFEARRAY * * EdgeNum, SAFEARRAY * * RebarSize, SAFEARRAY * * Spacing, SAFEARRAY * * Cover ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4003\x6003\x6008\x6005\x6005", (BSTR)Name, (BSTR)ShapeName, NumberItems, EdgeNum, RebarSize, Spacing, Cover);
    return _result;
}

#pragma implementation_key(687)
inline long ETABSv1::cPropFrameSDShape::GetReinfLine ( _bstr_t Name, _bstr_t ShapeName, double * X1, double * Y1, double * X2, double * Y2, double * Spacing, BSTR * RebarSize, VARIANT_BOOL * EndBars, BSTR * MatRebar ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4005\x4005\x4005\x4005\x4005\x4008\x400b\x4008", (BSTR)Name, (BSTR)ShapeName, X1, Y1, X2, Y2, Spacing, RebarSize, EndBars, MatRebar);
    return _result;
}

#pragma implementation_key(688)
inline long ETABSv1::cPropFrameSDShape::GetReinfRectangular ( _bstr_t Name, _bstr_t ShapeName, double * XCenter, double * YCenter, double * H, double * W, double * Rotation, BSTR * MatRebar ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4005\x4005\x4005\x4005\x4005\x4008", (BSTR)Name, (BSTR)ShapeName, XCenter, YCenter, H, W, Rotation, MatRebar);
    return _result;
}

#pragma implementation_key(689)
inline long ETABSv1::cPropFrameSDShape::GetReinfSingle ( _bstr_t Name, _bstr_t ShapeName, double * XCenter, double * YCenter, BSTR * RebarSize, BSTR * MatRebar ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4005\x4005\x4008\x4008", (BSTR)Name, (BSTR)ShapeName, XCenter, YCenter, RebarSize, MatRebar);
    return _result;
}

#pragma implementation_key(690)
inline long ETABSv1::cPropFrameSDShape::GetSolidCircle ( _bstr_t Name, _bstr_t ShapeName, BSTR * MatProp, BSTR * SSOverwrite, long * color, double * XCenter, double * YCenter, double * Diameter, VARIANT_BOOL * Reinf, long * NumberBars, double * Rotation, double * Cover, BSTR * RebarSize, BSTR * MatRebar ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008\x4008\x4003\x4005\x4005\x4005\x400b\x4003\x4005\x4005\x4008\x4008", (BSTR)Name, (BSTR)ShapeName, MatProp, SSOverwrite, color, XCenter, YCenter, Diameter, Reinf, NumberBars, Rotation, Cover, RebarSize, MatRebar);
    return _result;
}

#pragma implementation_key(691)
inline long ETABSv1::cPropFrameSDShape::GetSolidRect ( _bstr_t Name, _bstr_t ShapeName, BSTR * MatProp, BSTR * SSOverwrite, long * color, double * XCenter, double * YCenter, double * H, double * W, double * Rotation, VARIANT_BOOL * Reinf, BSTR * MatRebar ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008\x4008\x4003\x4005\x4005\x4005\x4005\x4005\x400b\x4008", (BSTR)Name, (BSTR)ShapeName, MatProp, SSOverwrite, color, XCenter, YCenter, H, W, Rotation, Reinf, MatRebar);
    return _result;
}

#pragma implementation_key(692)
inline long ETABSv1::cPropFrameSDShape::GetTee ( _bstr_t Name, _bstr_t ShapeName, BSTR * MatProp, BSTR * PropName, long * color, double * XCenter, double * YCenter, double * H, double * Bf, double * Tf, double * Tw, double * Rotation ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008\x4008\x4003\x4005\x4005\x4005\x4005\x4005\x4005\x4005", (BSTR)Name, (BSTR)ShapeName, MatProp, PropName, color, XCenter, YCenter, H, Bf, Tf, Tw, Rotation);
    return _result;
}

#pragma implementation_key(693)
inline long ETABSv1::cPropFrameSDShape::GetConcreteL ( _bstr_t Name, _bstr_t ShapeName, BSTR * MatProp, BSTR * PropName, long * color, double * XCenter, double * YCenter, double * H, double * Bf, double * Tf, double * Tw, double * Rotation, VARIANT_BOOL * MirrorAbout2, VARIANT_BOOL * MirrorAbout3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008\x4008\x4003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x400b\x400b", (BSTR)Name, (BSTR)ShapeName, MatProp, PropName, color, XCenter, YCenter, H, Bf, Tf, Tw, Rotation, MirrorAbout2, MirrorAbout3);
    return _result;
}

#pragma implementation_key(694)
inline long ETABSv1::cPropFrameSDShape::GetConcreteTee ( _bstr_t Name, _bstr_t ShapeName, BSTR * MatProp, BSTR * PropName, long * color, double * XCenter, double * YCenter, double * H, double * Bf, double * Tf, double * Tw, double * Rotation, VARIANT_BOOL * MirrorAbout3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008\x4008\x4003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x400b", (BSTR)Name, (BSTR)ShapeName, MatProp, PropName, color, XCenter, YCenter, H, Bf, Tf, Tw, Rotation, MirrorAbout3);
    return _result;
}

//
// dispinterface cPropMaterial wrapper method implementations
//

#pragma implementation_key(695)
inline long ETABSv1::cPropMaterial::AddMaterial ( BSTR * Name, enum eMatType MatType, _bstr_t Region, _bstr_t Standard, _bstr_t Grade, _bstr_t UserName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008\x0003\x0008\x0008\x0008\x0008", Name, MatType, (BSTR)Region, (BSTR)Standard, (BSTR)Grade, (BSTR)UserName);
    return _result;
}

#pragma implementation_key(696)
inline long ETABSv1::cPropMaterial::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(697)
inline long ETABSv1::cPropMaterial::Count ( enum eMatType MatType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", MatType);
    return _result;
}

#pragma implementation_key(698)
inline long ETABSv1::cPropMaterial::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(699)
inline long ETABSv1::cPropMaterial::GetDamping ( _bstr_t Name, double * ModalRatio, double * ViscousMassCoeff, double * ViscousStiffCoeff, double * HystereticMassCoeff, double * HystereticStiffCoeff, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4005\x0005", (BSTR)Name, ModalRatio, ViscousMassCoeff, ViscousStiffCoeff, HystereticMassCoeff, HystereticStiffCoeff, Temp);
    return _result;
}

#pragma implementation_key(700)
inline long ETABSv1::cPropMaterial::GetMassSource ( long * MyOption, long * NumberLoads, SAFEARRAY * * LoadPat, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x6008\x6005", MyOption, NumberLoads, LoadPat, SF);
    return _result;
}

#pragma implementation_key(701)
inline long ETABSv1::cPropMaterial::GetMaterial ( _bstr_t Name, enum eMatType * MatType, long * color, BSTR * notes, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x4008\x4008", (BSTR)Name, MatType, color, notes, GUID);
    return _result;
}

#pragma implementation_key(702)
inline long ETABSv1::cPropMaterial::GetMPAnisotropic ( _bstr_t Name, SAFEARRAY * * E, SAFEARRAY * * U, SAFEARRAY * * A, SAFEARRAY * * G, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x6005\x6005\x6005\x0005", (BSTR)Name, E, U, A, G, Temp);
    return _result;
}

#pragma implementation_key(703)
inline long ETABSv1::cPropMaterial::GetMPIsotropic ( _bstr_t Name, double * E, double * U, double * A, double * G, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x0005", (BSTR)Name, E, U, A, G, Temp);
    return _result;
}

#pragma implementation_key(704)
inline long ETABSv1::cPropMaterial::GetMPOrthotropic ( _bstr_t Name, SAFEARRAY * * E, SAFEARRAY * * U, SAFEARRAY * * A, SAFEARRAY * * G, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x6005\x6005\x6005\x0005", (BSTR)Name, E, U, A, G, Temp);
    return _result;
}

#pragma implementation_key(705)
inline long ETABSv1::cPropMaterial::GetMPUniaxial ( _bstr_t Name, double * E, double * A, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x0005", (BSTR)Name, E, A, Temp);
    return _result;
}

#pragma implementation_key(706)
inline long ETABSv1::cPropMaterial::GetNameList ( long * NumberNames, SAFEARRAY * * MyName, enum eMatType MatType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x0003", NumberNames, MyName, MatType);
    return _result;
}

#pragma implementation_key(707)
inline long ETABSv1::cPropMaterial::GetOConcrete ( _bstr_t Name, double * Fc, VARIANT_BOOL * IsLightweight, double * FcsFactor, long * SSType, long * SSHysType, double * StrainAtFc, double * StrainUltimate, double * FrictionAngle, double * DilatationalAngle, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x400b\x4005\x4003\x4003\x4005\x4005\x4005\x4005\x0005", (BSTR)Name, Fc, IsLightweight, FcsFactor, SSType, SSHysType, StrainAtFc, StrainUltimate, FrictionAngle, DilatationalAngle, Temp);
    return _result;
}

#pragma implementation_key(708)
inline long ETABSv1::cPropMaterial::GetOConcrete_1 ( _bstr_t Name, double * Fc, VARIANT_BOOL * IsLightweight, double * FcsFactor, long * SSType, long * SSHysType, double * StrainAtFc, double * StrainUltimate, double * FinalSlope, double * FrictionAngle, double * DilatationalAngle, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x400b\x4005\x4003\x4003\x4005\x4005\x4005\x4005\x4005\x0005", (BSTR)Name, Fc, IsLightweight, FcsFactor, SSType, SSHysType, StrainAtFc, StrainUltimate, FinalSlope, FrictionAngle, DilatationalAngle, Temp);
    return _result;
}

#pragma implementation_key(709)
inline long ETABSv1::cPropMaterial::GetONoDesign ( _bstr_t Name, double * FrictionAngle, double * DilatationalAngle, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x0005", (BSTR)Name, FrictionAngle, DilatationalAngle, Temp);
    return _result;
}

#pragma implementation_key(710)
inline long ETABSv1::cPropMaterial::GetORebar ( _bstr_t Name, double * FY, double * Fu, double * EFy, double * EFu, long * SSType, long * SSHysType, double * StrainAtHardening, double * StrainUltimate, VARIANT_BOOL * UseCaltransSSDefaults, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4003\x4003\x4005\x4005\x400b\x0005", (BSTR)Name, FY, Fu, EFy, EFu, SSType, SSHysType, StrainAtHardening, StrainUltimate, UseCaltransSSDefaults, Temp);
    return _result;
}

#pragma implementation_key(711)
inline long ETABSv1::cPropMaterial::GetORebar_1 ( _bstr_t Name, double * FY, double * Fu, double * EFy, double * EFu, long * SSType, long * SSHysType, double * StrainAtHardening, double * StrainUltimate, double * FinalSlope, VARIANT_BOOL * UseCaltransSSDefaults, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4003\x4003\x4005\x4005\x4005\x400b\x0005", (BSTR)Name, FY, Fu, EFy, EFu, SSType, SSHysType, StrainAtHardening, StrainUltimate, FinalSlope, UseCaltransSSDefaults, Temp);
    return _result;
}

#pragma implementation_key(712)
inline long ETABSv1::cPropMaterial::GetOSteel ( _bstr_t Name, double * FY, double * Fu, double * EFy, double * EFu, long * SSType, long * SSHysType, double * StrainAtHardening, double * StrainAtMaxStress, double * StrainAtRupture, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4003\x4003\x4005\x4005\x4005\x0005", (BSTR)Name, FY, Fu, EFy, EFu, SSType, SSHysType, StrainAtHardening, StrainAtMaxStress, StrainAtRupture, Temp);
    return _result;
}

#pragma implementation_key(713)
inline long ETABSv1::cPropMaterial::GetOSteel_1 ( _bstr_t Name, double * FY, double * Fu, double * EFy, double * EFu, long * SSType, long * SSHysType, double * StrainAtHardening, double * StrainAtMaxStress, double * StrainAtRupture, double * FinalSlope, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4003\x4003\x4005\x4005\x4005\x4005\x0005", (BSTR)Name, FY, Fu, EFy, EFu, SSType, SSHysType, StrainAtHardening, StrainAtMaxStress, StrainAtRupture, FinalSlope, Temp);
    return _result;
}

#pragma implementation_key(714)
inline long ETABSv1::cPropMaterial::GetOTendon ( _bstr_t Name, double * FY, double * Fu, long * SSType, long * SSHysType, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4003\x4003\x0005", (BSTR)Name, FY, Fu, SSType, SSHysType, Temp);
    return _result;
}

#pragma implementation_key(715)
inline long ETABSv1::cPropMaterial::GetOTendon_1 ( _bstr_t Name, double * FY, double * Fu, long * SSType, long * SSHysType, double * FinalSlope, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4003\x4003\x4005\x0005", (BSTR)Name, FY, Fu, SSType, SSHysType, FinalSlope, Temp);
    return _result;
}

#pragma implementation_key(716)
inline long ETABSv1::cPropMaterial::GetSSCurve ( _bstr_t Name, long * NumberPoints, SAFEARRAY * * PointID, SAFEARRAY * * Strain, SAFEARRAY * * Stress, _bstr_t SectName, double RebarArea, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6005\x6005\x0008\x0005\x0005", (BSTR)Name, NumberPoints, PointID, Strain, Stress, (BSTR)SectName, RebarArea, Temp);
    return _result;
}

#pragma implementation_key(717)
inline long ETABSv1::cPropMaterial::GetTemp ( _bstr_t Name, long * NumberItems, SAFEARRAY * * Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6005", (BSTR)Name, NumberItems, Temp);
    return _result;
}

#pragma implementation_key(718)
inline long ETABSv1::cPropMaterial::GetTypeOAPI ( _bstr_t Name, enum eMatType * MatType, long * SymType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003", (BSTR)Name, MatType, SymType);
    return _result;
}

#pragma implementation_key(719)
inline long ETABSv1::cPropMaterial::GetWeightAndMass ( _bstr_t Name, double * W, double * M, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x0005", (BSTR)Name, W, M, Temp);
    return _result;
}

#pragma implementation_key(720)
inline long ETABSv1::cPropMaterial::SetDamping ( _bstr_t Name, double ModalRatio, double ViscousMassCoeff, double ViscousStiffCoeff, double HystereticMassCoeff, double HystereticStiffCoeff, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0005\x0005", (BSTR)Name, ModalRatio, ViscousMassCoeff, ViscousStiffCoeff, HystereticMassCoeff, HystereticStiffCoeff, Temp);
    return _result;
}

#pragma implementation_key(721)
inline long ETABSv1::cPropMaterial::SetMassSource ( long MyOption, long NumberLoads, SAFEARRAY * * LoadPat, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x6008\x6005", MyOption, NumberLoads, LoadPat, SF);
    return _result;
}

#pragma implementation_key(722)
inline long ETABSv1::cPropMaterial::SetMaterial ( _bstr_t Name, enum eMatType MatType, long color, _bstr_t notes, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0008\x0008", (BSTR)Name, MatType, color, (BSTR)notes, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(723)
inline long ETABSv1::cPropMaterial::SetMPAnisotropic ( _bstr_t Name, SAFEARRAY * * E, SAFEARRAY * * U, SAFEARRAY * * A, SAFEARRAY * * G, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x6005\x6005\x6005\x0005", (BSTR)Name, E, U, A, G, Temp);
    return _result;
}

#pragma implementation_key(724)
inline long ETABSv1::cPropMaterial::SetMPIsotropic ( _bstr_t Name, double E, double U, double A, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005", (BSTR)Name, E, U, A, Temp);
    return _result;
}

#pragma implementation_key(725)
inline long ETABSv1::cPropMaterial::SetMPOrthotropic ( _bstr_t Name, SAFEARRAY * * E, SAFEARRAY * * U, SAFEARRAY * * A, SAFEARRAY * * G, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x6005\x6005\x6005\x0005", (BSTR)Name, E, U, A, G, Temp);
    return _result;
}

#pragma implementation_key(726)
inline long ETABSv1::cPropMaterial::SetMPUniaxial ( _bstr_t Name, double E, double A, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005", (BSTR)Name, E, A, Temp);
    return _result;
}

#pragma implementation_key(727)
inline long ETABSv1::cPropMaterial::SetOConcrete ( _bstr_t Name, double Fc, VARIANT_BOOL IsLightweight, double FcsFactor, long SSType, long SSHysType, double StrainAtFc, double StrainUltimate, double FrictionAngle, double DilatationalAngle, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x000b\x0005\x0003\x0003\x0005\x0005\x0005\x0005\x0005", (BSTR)Name, Fc, IsLightweight, FcsFactor, SSType, SSHysType, StrainAtFc, StrainUltimate, FrictionAngle, DilatationalAngle, Temp);
    return _result;
}

#pragma implementation_key(728)
inline long ETABSv1::cPropMaterial::SetOConcrete_1 ( _bstr_t Name, double Fc, VARIANT_BOOL IsLightweight, double FcsFactor, long SSType, long SSHysType, double StrainAtFc, double StrainUltimate, double FinalSlope, double FrictionAngle, double DilatationalAngle, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x000b\x0005\x0003\x0003\x0005\x0005\x0005\x0005\x0005\x0005", (BSTR)Name, Fc, IsLightweight, FcsFactor, SSType, SSHysType, StrainAtFc, StrainUltimate, FinalSlope, FrictionAngle, DilatationalAngle, Temp);
    return _result;
}

#pragma implementation_key(729)
inline long ETABSv1::cPropMaterial::SetONoDesign ( _bstr_t Name, double FrictionAngle, double DilatationalAngle, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005", (BSTR)Name, FrictionAngle, DilatationalAngle, Temp);
    return _result;
}

#pragma implementation_key(730)
inline long ETABSv1::cPropMaterial::SetORebar ( _bstr_t Name, double FY, double Fu, double EFy, double EFu, long SSType, long SSHysType, double StrainAtHardening, double StrainUltimate, VARIANT_BOOL UseCaltransSSDefaults, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0005\x0005\x000b\x0005", (BSTR)Name, FY, Fu, EFy, EFu, SSType, SSHysType, StrainAtHardening, StrainUltimate, UseCaltransSSDefaults, Temp);
    return _result;
}

#pragma implementation_key(731)
inline long ETABSv1::cPropMaterial::SetORebar_1 ( _bstr_t Name, double FY, double Fu, double EFy, double EFu, long SSType, long SSHysType, double StrainAtHardening, double StrainUltimate, double FinalSlope, VARIANT_BOOL UseCaltransSSDefaults, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0005\x0005\x0005\x000b\x0005", (BSTR)Name, FY, Fu, EFy, EFu, SSType, SSHysType, StrainAtHardening, StrainUltimate, FinalSlope, UseCaltransSSDefaults, Temp);
    return _result;
}

#pragma implementation_key(732)
inline long ETABSv1::cPropMaterial::SetOSteel ( _bstr_t Name, double FY, double Fu, double EFy, double EFu, long SSType, long SSHysType, double StrainAtHardening, double StrainAtMaxStress, double StrainAtRupture, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0005\x0005\x0005\x0005", (BSTR)Name, FY, Fu, EFy, EFu, SSType, SSHysType, StrainAtHardening, StrainAtMaxStress, StrainAtRupture, Temp);
    return _result;
}

#pragma implementation_key(733)
inline long ETABSv1::cPropMaterial::SetOSteel_1 ( _bstr_t Name, double FY, double Fu, double EFy, double EFu, long SSType, long SSHysType, double StrainAtHardening, double StrainAtMaxStress, double StrainAtRupture, double FinalSlope, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0005\x0005\x0005\x0005\x0005", (BSTR)Name, FY, Fu, EFy, EFu, SSType, SSHysType, StrainAtHardening, StrainAtMaxStress, StrainAtRupture, FinalSlope, Temp);
    return _result;
}

#pragma implementation_key(734)
inline long ETABSv1::cPropMaterial::SetOTendon ( _bstr_t Name, double FY, double Fu, long SSType, long SSHysType, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0003\x0003\x0005", (BSTR)Name, FY, Fu, SSType, SSHysType, Temp);
    return _result;
}

#pragma implementation_key(735)
inline long ETABSv1::cPropMaterial::SetOTendon_1 ( _bstr_t Name, double FY, double Fu, long SSType, long SSHysType, double FinalSlope, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0003\x0003\x0005\x0005", (BSTR)Name, FY, Fu, SSType, SSHysType, FinalSlope, Temp);
    return _result;
}

#pragma implementation_key(736)
inline long ETABSv1::cPropMaterial::SetSSCurve ( _bstr_t Name, long NumberPoints, SAFEARRAY * * PointID, SAFEARRAY * * Strain, SAFEARRAY * * Stress, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6003\x6005\x6005\x0005", (BSTR)Name, NumberPoints, PointID, Strain, Stress, Temp);
    return _result;
}

#pragma implementation_key(737)
inline long ETABSv1::cPropMaterial::SetTemp ( _bstr_t Name, long NumberItems, SAFEARRAY * * Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6005", (BSTR)Name, NumberItems, Temp);
    return _result;
}

#pragma implementation_key(738)
inline long ETABSv1::cPropMaterial::SetWeightAndMass ( _bstr_t Name, long MyOption, double Value, double Temp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0005", (BSTR)Name, MyOption, Value, Temp);
    return _result;
}

#pragma implementation_key(739)
inline ETABSv1::cPropMaterialTDPtr ETABSv1::cPropMaterial::GetTimeDep ( ) {
    struct cPropMaterialTD * _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cPropMaterialTDPtr(_result, false);
}

#pragma implementation_key(740)
inline long ETABSv1::cPropMaterial::GetMassSource_1 ( VARIANT_BOOL * IncludeElements, VARIANT_BOOL * IncludeAddedMass, VARIANT_BOOL * IncludeLoads, long * NumberLoads, SAFEARRAY * * LoadPat, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400b\x400b\x400b\x4003\x6008\x6005", IncludeElements, IncludeAddedMass, IncludeLoads, NumberLoads, LoadPat, SF);
    return _result;
}

#pragma implementation_key(741)
inline long ETABSv1::cPropMaterial::SetMassSource_1 ( VARIANT_BOOL * IncludeElements, VARIANT_BOOL * IncludeAddedMass, VARIANT_BOOL * IncludeLoads, long NumberLoads, SAFEARRAY * * LoadPat, SAFEARRAY * * SF ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400b\x400b\x400b\x0003\x6008\x6005", IncludeElements, IncludeAddedMass, IncludeLoads, NumberLoads, LoadPat, SF);
    return _result;
}

//
// dispinterface cPropAreaSpring wrapper method implementations
//

#pragma implementation_key(742)
inline long ETABSv1::cPropAreaSpring::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(743)
inline long ETABSv1::cPropAreaSpring::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(744)
inline long ETABSv1::cPropAreaSpring::GetAreaSpringProp ( _bstr_t Name, double * U1, double * U2, double * U3, long * NonlinearOption3, long * SpringOption, BSTR * SoilProfile, double * EndLengthRatio, double * Period, long * color, BSTR * notes, BSTR * iGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4003\x4003\x4008\x4005\x4005\x4003\x4008\x4008", (BSTR)Name, U1, U2, U3, NonlinearOption3, SpringOption, SoilProfile, EndLengthRatio, Period, color, notes, iGUID);
    return _result;
}

#pragma implementation_key(745)
inline long ETABSv1::cPropAreaSpring::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(746)
inline long ETABSv1::cPropAreaSpring::SetAreaSpringProp ( _bstr_t Name, double U1, double U2, double U3, long NonlinearOption3, long SpringOption, _bstr_t SoilProfile, double EndLengthRatio, double Period, long color, _bstr_t notes, _bstr_t iGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0003\x0003\x0008\x0005\x0005\x0003\x0008\x0008", (BSTR)Name, U1, U2, U3, NonlinearOption3, SpringOption, (BSTR)SoilProfile, EndLengthRatio, Period, color, (BSTR)notes, (BSTR)iGUID);
    return _result;
}

//
// dispinterface cPropLineSpring wrapper method implementations
//

#pragma implementation_key(747)
inline long ETABSv1::cPropLineSpring::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(748)
inline long ETABSv1::cPropLineSpring::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(749)
inline long ETABSv1::cPropLineSpring::GetLineSpringProp ( _bstr_t Name, double * U1, double * U2, double * U3, double * R1, long * NonlinearOption2, long * NonlinearOption3, long * color, BSTR * notes, BSTR * iGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x4005\x4003\x4003\x4003\x4008\x4008", (BSTR)Name, U1, U2, U3, R1, NonlinearOption2, NonlinearOption3, color, notes, iGUID);
    return _result;
}

#pragma implementation_key(750)
inline long ETABSv1::cPropLineSpring::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(751)
inline long ETABSv1::cPropLineSpring::SetLineSpringProp ( _bstr_t Name, double U1, double U2, double U3, double R1, long NonlinearOption2, long NonlinearOption3, long color, _bstr_t notes, _bstr_t iGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x0008\x0008", (BSTR)Name, U1, U2, U3, R1, NonlinearOption2, NonlinearOption3, color, (BSTR)notes, (BSTR)iGUID);
    return _result;
}

//
// dispinterface cPropPointSpring wrapper method implementations
//

#pragma implementation_key(752)
inline long ETABSv1::cPropPointSpring::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(753)
inline long ETABSv1::cPropPointSpring::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(754)
inline long ETABSv1::cPropPointSpring::GetLinks ( _bstr_t Name, long * NumberLinks, SAFEARRAY * * LinkNames, SAFEARRAY * * LinkAxialDirs, SAFEARRAY * * LinkAngles ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6005", (BSTR)Name, NumberLinks, LinkNames, LinkAxialDirs, LinkAngles);
    return _result;
}

#pragma implementation_key(755)
inline long ETABSv1::cPropPointSpring::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(756)
inline long ETABSv1::cPropPointSpring::GetPointSpringProp ( _bstr_t Name, long * SpringOption, SAFEARRAY * * K, BSTR * CSys, BSTR * SoilProfile, BSTR * Footing, double * Period, long * color, BSTR * notes, BSTR * iGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6005\x4008\x4008\x4008\x4005\x4003\x4008\x4008", (BSTR)Name, SpringOption, K, CSys, SoilProfile, Footing, Period, color, notes, iGUID);
    return _result;
}

#pragma implementation_key(757)
inline long ETABSv1::cPropPointSpring::SetLinks ( _bstr_t Name, long NumberLinks, SAFEARRAY * * LinkNames, SAFEARRAY * * LinkAxialDirs, SAFEARRAY * * LinkAngles ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6008\x6003\x6005", (BSTR)Name, NumberLinks, LinkNames, LinkAxialDirs, LinkAngles);
    return _result;
}

#pragma implementation_key(758)
inline long ETABSv1::cPropPointSpring::SetPointSpringProp ( _bstr_t Name, long SpringOption, SAFEARRAY * * K, _bstr_t CSys, _bstr_t SoilProfile, _bstr_t Footing, double Period, long color, _bstr_t notes, _bstr_t iGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x6005\x0008\x0008\x0008\x0005\x0003\x0008\x0008", (BSTR)Name, SpringOption, K, (BSTR)CSys, (BSTR)SoilProfile, (BSTR)Footing, Period, color, (BSTR)notes, (BSTR)iGUID);
    return _result;
}

//
// dispinterface cDesignForces wrapper method implementations
//

#pragma implementation_key(759)
inline long ETABSv1::cDesignForces::BeamDesignForces ( _bstr_t Name, long * NumberResults, SAFEARRAY * * FrameName, SAFEARRAY * * ComboName, SAFEARRAY * * Station, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberResults, FrameName, ComboName, Station, P, V2, V3, T, M2, M3, ItemType);
    return _result;
}

#pragma implementation_key(760)
inline long ETABSv1::cDesignForces::BraceDesignForces ( _bstr_t Name, long * NumberResults, SAFEARRAY * * FrameName, SAFEARRAY * * ComboName, SAFEARRAY * * Station, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberResults, FrameName, ComboName, Station, P, V2, V3, T, M2, M3, ItemType);
    return _result;
}

#pragma implementation_key(761)
inline long ETABSv1::cDesignForces::ColumnDesignForces ( _bstr_t Name, long * NumberResults, SAFEARRAY * * FrameName, SAFEARRAY * * ComboName, SAFEARRAY * * Station, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberResults, FrameName, ComboName, Station, P, V2, V3, T, M2, M3, ItemType);
    return _result;
}

#pragma implementation_key(762)
inline long ETABSv1::cDesignForces::PierDesignForces ( _bstr_t InputPierLabel, _bstr_t InputStoryName, long * NumberResults, SAFEARRAY * * Story, SAFEARRAY * * PierLabel, SAFEARRAY * * ComboName, SAFEARRAY * * Location, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)InputPierLabel, (BSTR)InputStoryName, NumberResults, Story, PierLabel, ComboName, Location, P, V2, V3, T, M2, M3);
    return _result;
}

#pragma implementation_key(763)
inline long ETABSv1::cDesignForces::SpandrelDesignForces ( _bstr_t InputSpandrelLabel, _bstr_t InputStoryName, long * NumberResults, SAFEARRAY * * Story, SAFEARRAY * * SpandrelLabel, SAFEARRAY * * ComboName, SAFEARRAY * * Location, SAFEARRAY * * P, SAFEARRAY * * V2, SAFEARRAY * * V3, SAFEARRAY * * T, SAFEARRAY * * M2, SAFEARRAY * * M3 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005", (BSTR)InputSpandrelLabel, (BSTR)InputStoryName, NumberResults, Story, SpandrelLabel, ComboName, Location, P, V2, V3, T, M2, M3);
    return _result;
}

//
// dispinterface cDesignResults wrapper method implementations
//

#pragma implementation_key(764)
inline ETABSv1::cDesignForcesPtr ETABSv1::cDesignResults::GetDesignForces ( ) {
    struct cDesignForces * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDesignForcesPtr(_result, false);
}

//
// dispinterface cDesignCompositeBeam wrapper method implementations
//

#pragma implementation_key(765)
inline long ETABSv1::cDesignCompositeBeam::DeleteResults ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(766)
inline long ETABSv1::cDesignCompositeBeam::GetCode ( BSTR * CodeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008", CodeName);
    return _result;
}

#pragma implementation_key(767)
inline long ETABSv1::cDesignCompositeBeam::GetComboDeflection ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(768)
inline long ETABSv1::cDesignCompositeBeam::GetComboStrength ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(769)
inline long ETABSv1::cDesignCompositeBeam::GetDesignSection ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(770)
inline long ETABSv1::cDesignCompositeBeam::GetGroup ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(771)
inline VARIANT_BOOL ETABSv1::cDesignCompositeBeam::GetResultsAvailable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(772)
inline long ETABSv1::cDesignCompositeBeam::GetSummaryResults ( _bstr_t Name, long * NumberItems, SAFEARRAY * * DesignSect, SAFEARRAY * * BeamFy, SAFEARRAY * * StudDia, SAFEARRAY * * StudLayout, SAFEARRAY * * BeamShored, SAFEARRAY * * BeamCamber, SAFEARRAY * * PassFail, SAFEARRAY * * ReacLeft, SAFEARRAY * * ReacRt, SAFEARRAY * * MMaxNeg, SAFEARRAY * * MMaxPos, SAFEARRAY * * PCC, SAFEARRAY * * OverallRatio, SAFEARRAY * * StudRatio, SAFEARRAY * * StrPMRat, SAFEARRAY * * ConstPMRat, SAFEARRAY * * StrShrRat, SAFEARRAY * * ConShrRat, SAFEARRAY * * PCDLDfRat, SAFEARRAY * * SDLDfRat, SAFEARRAY * * LLDfRat, SAFEARRAY * * TotCamDfRat, SAFEARRAY * * FreqRat, SAFEARRAY * * MDampRat, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x6008\x600b\x6005\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, DesignSect, BeamFy, StudDia, StudLayout, BeamShored, BeamCamber, PassFail, ReacLeft, ReacRt, MMaxNeg, MMaxPos, PCC, OverallRatio, StudRatio, StrPMRat, ConstPMRat, StrShrRat, ConShrRat, PCDLDfRat, SDLDfRat, LLDfRat, TotCamDfRat, FreqRat, MDampRat, ItemType);
    return _result;
}

#pragma implementation_key(773)
inline long ETABSv1::cDesignCompositeBeam::GetTargetDispl ( long * NumberItems, SAFEARRAY * * LoadCase, SAFEARRAY * * Point, SAFEARRAY * * Displ, VARIANT_BOOL * Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6005\x400b", NumberItems, LoadCase, Point, Displ, Active);
    return _result;
}

#pragma implementation_key(774)
inline long ETABSv1::cDesignCompositeBeam::GetTargetPeriod ( long * NumberItems, BSTR * ModalCase, SAFEARRAY * * Mode, SAFEARRAY * * Period, VARIANT_BOOL * Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4008\x6003\x6005\x400b", NumberItems, ModalCase, Mode, Period, Active);
    return _result;
}

#pragma implementation_key(775)
inline long ETABSv1::cDesignCompositeBeam::ResetOverwrites ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(776)
inline long ETABSv1::cDesignCompositeBeam::SetAutoSelectNull ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(777)
inline long ETABSv1::cDesignCompositeBeam::SetCode ( _bstr_t CodeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)CodeName);
    return _result;
}

#pragma implementation_key(778)
inline long ETABSv1::cDesignCompositeBeam::SetComboDeflection ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(779)
inline long ETABSv1::cDesignCompositeBeam::SetComboStrength ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(780)
inline long ETABSv1::cDesignCompositeBeam::SetDesignSection ( _bstr_t Name, _bstr_t PropName, VARIANT_BOOL LastAnalysis, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x000b\x0003", (BSTR)Name, (BSTR)PropName, LastAnalysis, ItemType);
    return _result;
}

#pragma implementation_key(781)
inline long ETABSv1::cDesignCompositeBeam::SetGroup ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(782)
inline long ETABSv1::cDesignCompositeBeam::SetTargetDispl ( long NumberItems, SAFEARRAY * * LoadCase, SAFEARRAY * * Point, SAFEARRAY * * Displ, VARIANT_BOOL Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x6008\x6008\x6005\x000b", NumberItems, LoadCase, Point, Displ, Active);
    return _result;
}

#pragma implementation_key(783)
inline long ETABSv1::cDesignCompositeBeam::SetTargetPeriod ( long NumberItems, _bstr_t ModalCase, SAFEARRAY * * Mode, SAFEARRAY * * Period, VARIANT_BOOL Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x6003\x6005\x000b", NumberItems, (BSTR)ModalCase, Mode, Period, Active);
    return _result;
}

#pragma implementation_key(784)
inline long ETABSv1::cDesignCompositeBeam::StartDesign ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(785)
inline long ETABSv1::cDesignCompositeBeam::VerifyPassed ( long * NumberItems, long * N1, long * N2, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4003\x6008", NumberItems, N1, N2, MyName);
    return _result;
}

#pragma implementation_key(786)
inline long ETABSv1::cDesignCompositeBeam::VerifySections ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

//
// dispinterface cDConcSlabACI318_14 wrapper method implementations
//

#pragma implementation_key(787)
inline long ETABSv1::cDConcSlabACI318_14::GetPreference ( long Item, BSTR * textValue, double * numericValue ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008\x4005", Item, textValue, numericValue);
    return _result;
}

//
// dispinterface cDConcSlabACI318_19 wrapper method implementations
//

#pragma implementation_key(788)
inline long ETABSv1::cDConcSlabACI318_19::GetPreference ( long Item, BSTR * textValue, double * numericValue ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008\x4005", Item, textValue, numericValue);
    return _result;
}

//
// dispinterface cDesignConcreteSlab wrapper method implementations
//

#pragma implementation_key(789)
inline ETABSv1::cDConcSlabACI318_14Ptr ETABSv1::cDesignConcreteSlab::GetACI318_14 ( ) {
    struct cDConcSlabACI318_14 * _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDConcSlabACI318_14Ptr(_result, false);
}

#pragma implementation_key(790)
inline ETABSv1::cDesignStripPtr ETABSv1::cDesignConcreteSlab::GetDesignStrip ( ) {
    struct cDesignStrip * _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDesignStripPtr(_result, false);
}

#pragma implementation_key(791)
inline long ETABSv1::cDesignConcreteSlab::GetFlexureAndShear ( SAFEARRAY * * StoryName, SAFEARRAY * * DesignStripName, SAFEARRAY * * Station, SAFEARRAY * * ConcWidth, SAFEARRAY * * FTopCombo, SAFEARRAY * * FTopMoment, SAFEARRAY * * FTopArea, SAFEARRAY * * FTopAMin, SAFEARRAY * * FBotCombo, SAFEARRAY * * FBotMoment, SAFEARRAY * * FBotArea, SAFEARRAY * * FBotAMin, SAFEARRAY * * AxialForce, SAFEARRAY * * VCombo, SAFEARRAY * * VForce, SAFEARRAY * * VArea, SAFEARRAY * * Status, SAFEARRAY * * GlobalX, SAFEARRAY * * GlobalY, SAFEARRAY * * Layer ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x6008\x6008\x6005\x6005\x6008\x6005\x6005\x6005\x6008\x6005\x6005\x6005\x6005\x6008\x6005\x6005\x6008\x6005\x6005\x6008", StoryName, DesignStripName, Station, ConcWidth, FTopCombo, FTopMoment, FTopArea, FTopAMin, FBotCombo, FBotMoment, FBotArea, FBotAMin, AxialForce, VCombo, VForce, VArea, Status, GlobalX, GlobalY, Layer);
    return _result;
}

#pragma implementation_key(792)
inline long ETABSv1::cDesignConcreteSlab::GetSummaryResultsFlexureAndShear ( SAFEARRAY * * StoryName, SAFEARRAY * * DesignStripName, SAFEARRAY * * SpanID, SAFEARRAY * * Location, SAFEARRAY * * FTopCombo, SAFEARRAY * * FTopMoment, SAFEARRAY * * FTopArea, SAFEARRAY * * FBotCombo, SAFEARRAY * * FBotMoment, SAFEARRAY * * FBotArea, SAFEARRAY * * VCombo, SAFEARRAY * * VForce, SAFEARRAY * * VArea, SAFEARRAY * * Status, SAFEARRAY * * Layer ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6008\x6005\x6005\x6008\x6005\x6005\x6008\x6008", StoryName, DesignStripName, SpanID, Location, FTopCombo, FTopMoment, FTopArea, FBotCombo, FBotMoment, FBotArea, VCombo, VForce, VArea, Status, Layer);
    return _result;
}

#pragma implementation_key(793)
inline long ETABSv1::cDesignConcreteSlab::GetSummaryResultsSpanDefinition ( SAFEARRAY * * StoryName, SAFEARRAY * * DesignStripName, SAFEARRAY * * SpanID, SAFEARRAY * * SpanLength, SAFEARRAY * * StartDist, SAFEARRAY * * EndDist, SAFEARRAY * * GlobalX1, SAFEARRAY * * GlobalY1, SAFEARRAY * * GlobalX2, SAFEARRAY * * GlobalY2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005", StoryName, DesignStripName, SpanID, SpanLength, StartDist, EndDist, GlobalX1, GlobalY1, GlobalX2, GlobalY2);
    return _result;
}

#pragma implementation_key(794)
inline long ETABSv1::cDesignConcreteSlab::StartSlabDesign ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface cDesignStrip wrapper method implementations
//

#pragma implementation_key(795)
inline long ETABSv1::cDesignStrip::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(796)
inline long ETABSv1::cDesignStrip::Delete ( _bstr_t Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Name);
    return _result;
}

#pragma implementation_key(797)
inline long ETABSv1::cDesignStrip::GetDesignStrip ( _bstr_t Name, SAFEARRAY * * Point, SAFEARRAY * * GlobalX, SAFEARRAY * * GlobalY, SAFEARRAY * * GlobalZ, SAFEARRAY * * WBLeft, SAFEARRAY * * WBRight, SAFEARRAY * * WALeft, SAFEARRAY * * WARight, SAFEARRAY * * AutoWiden ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x600b", (BSTR)Name, Point, GlobalX, GlobalY, GlobalZ, WBLeft, WBRight, WALeft, WARight, AutoWiden);
    return _result;
}

#pragma implementation_key(798)
inline long ETABSv1::cDesignStrip::GetGUID ( _bstr_t Name, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, GUID);
    return _result;
}

#pragma implementation_key(799)
inline long ETABSv1::cDesignStrip::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(800)
inline long ETABSv1::cDesignStrip::GetDesignStrip_1 ( _bstr_t Name, long * DesignType, SAFEARRAY * * Point, SAFEARRAY * * GlobalX, SAFEARRAY * * GlobalY, SAFEARRAY * * GlobalZ, SAFEARRAY * * WBLeft, SAFEARRAY * * WBRight, SAFEARRAY * * WALeft, SAFEARRAY * * WARight, SAFEARRAY * * AutoWiden ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x600b", (BSTR)Name, DesignType, Point, GlobalX, GlobalY, GlobalZ, WBLeft, WBRight, WALeft, WARight, AutoWiden);
    return _result;
}

#pragma implementation_key(801)
inline long ETABSv1::cDesignStrip::SetGUID ( _bstr_t Name, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)GUID);
    return _result;
}

//
// dispinterface cDCoACI318_08_IBC2009 wrapper method implementations
//

#pragma implementation_key(802)
inline long ETABSv1::cDCoACI318_08_IBC2009::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(803)
inline long ETABSv1::cDCoACI318_08_IBC2009::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(804)
inline long ETABSv1::cDCoACI318_08_IBC2009::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(805)
inline long ETABSv1::cDCoACI318_08_IBC2009::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoACI318_11 wrapper method implementations
//

#pragma implementation_key(806)
inline long ETABSv1::cDCoACI318_11::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(807)
inline long ETABSv1::cDCoACI318_11::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(808)
inline long ETABSv1::cDCoACI318_11::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(809)
inline long ETABSv1::cDCoACI318_11::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoACI318_19 wrapper method implementations
//

#pragma implementation_key(810)
inline long ETABSv1::cDCoACI318_19::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(811)
inline long ETABSv1::cDCoACI318_19::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(812)
inline long ETABSv1::cDCoACI318_19::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(813)
inline long ETABSv1::cDCoACI318_19::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoACI318_14 wrapper method implementations
//

#pragma implementation_key(814)
inline long ETABSv1::cDCoACI318_14::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(815)
inline long ETABSv1::cDCoACI318_14::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(816)
inline long ETABSv1::cDCoACI318_14::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(817)
inline long ETABSv1::cDCoACI318_14::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoAS_3600_09 wrapper method implementations
//

#pragma implementation_key(818)
inline long ETABSv1::cDCoAS_3600_09::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(819)
inline long ETABSv1::cDCoAS_3600_09::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(820)
inline long ETABSv1::cDCoAS_3600_09::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(821)
inline long ETABSv1::cDCoAS_3600_09::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoAS_3600_2018 wrapper method implementations
//

#pragma implementation_key(822)
inline long ETABSv1::cDCoAS_3600_2018::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(823)
inline long ETABSv1::cDCoAS_3600_2018::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(824)
inline long ETABSv1::cDCoAS_3600_2018::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(825)
inline long ETABSv1::cDCoAS_3600_2018::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoBS8110_97 wrapper method implementations
//

#pragma implementation_key(826)
inline long ETABSv1::cDCoBS8110_97::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(827)
inline long ETABSv1::cDCoBS8110_97::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(828)
inline long ETABSv1::cDCoBS8110_97::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(829)
inline long ETABSv1::cDCoBS8110_97::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoChinese_2010 wrapper method implementations
//

#pragma implementation_key(830)
inline long ETABSv1::cDCoChinese_2010::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(831)
inline long ETABSv1::cDCoChinese_2010::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(832)
inline long ETABSv1::cDCoChinese_2010::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(833)
inline long ETABSv1::cDCoChinese_2010::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoEurocode_2_2004 wrapper method implementations
//

#pragma implementation_key(834)
inline long ETABSv1::cDCoEurocode_2_2004::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(835)
inline long ETABSv1::cDCoEurocode_2_2004::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(836)
inline long ETABSv1::cDCoEurocode_2_2004::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(837)
inline long ETABSv1::cDCoEurocode_2_2004::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoHong_Kong_CP_2013 wrapper method implementations
//

#pragma implementation_key(838)
inline long ETABSv1::cDCoHong_Kong_CP_2013::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(839)
inline long ETABSv1::cDCoHong_Kong_CP_2013::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(840)
inline long ETABSv1::cDCoHong_Kong_CP_2013::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(841)
inline long ETABSv1::cDCoHong_Kong_CP_2013::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoIndian_IS_456_2000 wrapper method implementations
//

#pragma implementation_key(842)
inline long ETABSv1::cDCoIndian_IS_456_2000::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(843)
inline long ETABSv1::cDCoIndian_IS_456_2000::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(844)
inline long ETABSv1::cDCoIndian_IS_456_2000::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(845)
inline long ETABSv1::cDCoIndian_IS_456_2000::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoItalianNTC2008C wrapper method implementations
//

#pragma implementation_key(846)
inline long ETABSv1::cDCoItalianNTC2008C::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(847)
inline long ETABSv1::cDCoItalianNTC2008C::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(848)
inline long ETABSv1::cDCoItalianNTC2008C::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(849)
inline long ETABSv1::cDCoItalianNTC2008C::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoMexican_RCDF_2004 wrapper method implementations
//

#pragma implementation_key(850)
inline long ETABSv1::cDCoMexican_RCDF_2004::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(851)
inline long ETABSv1::cDCoMexican_RCDF_2004::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(852)
inline long ETABSv1::cDCoMexican_RCDF_2004::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(853)
inline long ETABSv1::cDCoMexican_RCDF_2004::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoMexican_RCDF_2017 wrapper method implementations
//

#pragma implementation_key(854)
inline long ETABSv1::cDCoMexican_RCDF_2017::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(855)
inline long ETABSv1::cDCoMexican_RCDF_2017::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(856)
inline long ETABSv1::cDCoMexican_RCDF_2017::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(857)
inline long ETABSv1::cDCoMexican_RCDF_2017::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoNZS_3101_2006 wrapper method implementations
//

#pragma implementation_key(858)
inline long ETABSv1::cDCoNZS_3101_2006::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(859)
inline long ETABSv1::cDCoNZS_3101_2006::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(860)
inline long ETABSv1::cDCoNZS_3101_2006::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(861)
inline long ETABSv1::cDCoNZS_3101_2006::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoSP63133302011 wrapper method implementations
//

#pragma implementation_key(862)
inline long ETABSv1::cDCoSP63133302011::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(863)
inline long ETABSv1::cDCoSP63133302011::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(864)
inline long ETABSv1::cDCoSP63133302011::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(865)
inline long ETABSv1::cDCoSP63133302011::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoTS_500_2000 wrapper method implementations
//

#pragma implementation_key(866)
inline long ETABSv1::cDCoTS_500_2000::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(867)
inline long ETABSv1::cDCoTS_500_2000::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(868)
inline long ETABSv1::cDCoTS_500_2000::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(869)
inline long ETABSv1::cDCoTS_500_2000::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDCoTS_500_2000_R2018 wrapper method implementations
//

#pragma implementation_key(870)
inline long ETABSv1::cDCoTS_500_2000_R2018::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(871)
inline long ETABSv1::cDCoTS_500_2000_R2018::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(872)
inline long ETABSv1::cDCoTS_500_2000_R2018::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(873)
inline long ETABSv1::cDCoTS_500_2000_R2018::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDesignConcrete wrapper method implementations
//

#pragma implementation_key(874)
inline ETABSv1::cDCoACI318_08_IBC2009Ptr ETABSv1::cDesignConcrete::GetACI318_08_IBC2009 ( ) {
    struct cDCoACI318_08_IBC2009 * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoACI318_08_IBC2009Ptr(_result, false);
}

#pragma implementation_key(875)
inline ETABSv1::cDCoEurocode_2_2004Ptr ETABSv1::cDesignConcrete::GetEurocode_2_2004 ( ) {
    struct cDCoEurocode_2_2004 * _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoEurocode_2_2004Ptr(_result, false);
}

#pragma implementation_key(876)
inline long ETABSv1::cDesignConcrete::GetCode ( BSTR * CodeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008", CodeName);
    return _result;
}

#pragma implementation_key(877)
inline long ETABSv1::cDesignConcrete::GetDesignSection ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(878)
inline VARIANT_BOOL ETABSv1::cDesignConcrete::GetResultsAvailable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(879)
inline long ETABSv1::cDesignConcrete::GetSummaryResultsBeam ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * Location, SAFEARRAY * * TopCombo, SAFEARRAY * * TopArea, SAFEARRAY * * BotCombo, SAFEARRAY * * BotArea, SAFEARRAY * * VMajorCombo, SAFEARRAY * * VMajorArea, SAFEARRAY * * TLCombo, SAFEARRAY * * TLArea, SAFEARRAY * * TTCombo, SAFEARRAY * * TTArea, SAFEARRAY * * ErrorSummary, SAFEARRAY * * WarningSummary, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6008\x6005\x6008\x6005\x6008\x6005\x6008\x6005\x6008\x6005\x6008\x6008\x0003", (BSTR)Name, NumberItems, FrameName, Location, TopCombo, TopArea, BotCombo, BotArea, VMajorCombo, VMajorArea, TLCombo, TLArea, TTCombo, TTArea, ErrorSummary, WarningSummary, ItemType);
    return _result;
}

#pragma implementation_key(880)
inline long ETABSv1::cDesignConcrete::GetSummaryResultsColumn ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * MyOption, SAFEARRAY * * Location, SAFEARRAY * * PMMCombo, SAFEARRAY * * PMMArea, SAFEARRAY * * PMMRatio, SAFEARRAY * * VMajorCombo, SAFEARRAY * * AVMajor, SAFEARRAY * * VMinorCombo, SAFEARRAY * * AVMinor, SAFEARRAY * * ErrorSummary, SAFEARRAY * * WarningSummary, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6005\x6008\x6005\x6005\x6008\x6005\x6008\x6005\x6008\x6008\x0003", (BSTR)Name, NumberItems, FrameName, MyOption, Location, PMMCombo, PMMArea, PMMRatio, VMajorCombo, AVMajor, VMinorCombo, AVMinor, ErrorSummary, WarningSummary, ItemType);
    return _result;
}

#pragma implementation_key(881)
inline long ETABSv1::cDesignConcrete::GetSummaryResultsJoint ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * LCJSRatioMajor, SAFEARRAY * * JSRatioMajor, SAFEARRAY * * LCJSRatioMinor, SAFEARRAY * * JSRatioMinor, SAFEARRAY * * LCBCCRatioMajor, SAFEARRAY * * BCCRatioMajor, SAFEARRAY * * LCBCCRatioMinor, SAFEARRAY * * BCCRatioMinor, SAFEARRAY * * ErrorSummary, SAFEARRAY * * WarningSummary, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6005\x6008\x6005\x6008\x6005\x6008\x6005\x6008\x6008\x0003", (BSTR)Name, NumberItems, FrameName, LCJSRatioMajor, JSRatioMajor, LCJSRatioMinor, JSRatioMinor, LCBCCRatioMajor, BCCRatioMajor, LCBCCRatioMinor, BCCRatioMinor, ErrorSummary, WarningSummary, ItemType);
    return _result;
}

#pragma implementation_key(882)
inline long ETABSv1::cDesignConcrete::SetCode ( _bstr_t CodeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)CodeName);
    return _result;
}

#pragma implementation_key(883)
inline long ETABSv1::cDesignConcrete::SetDesignSection ( _bstr_t Name, _bstr_t PropName, VARIANT_BOOL LastAnalysis, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x000b\x0003", (BSTR)Name, (BSTR)PropName, LastAnalysis, ItemType);
    return _result;
}

#pragma implementation_key(884)
inline long ETABSv1::cDesignConcrete::StartDesign ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(885)
inline ETABSv1::cDCoSP63133302011Ptr ETABSv1::cDesignConcrete::GetSP63_13330_2012 ( ) {
    struct cDCoSP63133302011 * _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoSP63133302011Ptr(_result, false);
}

#pragma implementation_key(886)
inline ETABSv1::cDCoACI318_14Ptr ETABSv1::cDesignConcrete::GetACI318_14 ( ) {
    struct cDCoACI318_14 * _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoACI318_14Ptr(_result, false);
}

#pragma implementation_key(887)
inline ETABSv1::cDCoACI318_19Ptr ETABSv1::cDesignConcrete::GetACI318_19 ( ) {
    struct cDCoACI318_19 * _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoACI318_19Ptr(_result, false);
}

#pragma implementation_key(888)
inline ETABSv1::cDCoAS_3600_09Ptr ETABSv1::cDesignConcrete::GetAS_3600_09 ( ) {
    struct cDCoAS_3600_09 * _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoAS_3600_09Ptr(_result, false);
}

#pragma implementation_key(889)
inline ETABSv1::cDCoBS8110_97Ptr ETABSv1::cDesignConcrete::GetBS8110_97 ( ) {
    struct cDCoBS8110_97 * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoBS8110_97Ptr(_result, false);
}

#pragma implementation_key(890)
inline ETABSv1::cDCoChinese_2010Ptr ETABSv1::cDesignConcrete::GetChinese_2010 ( ) {
    struct cDCoChinese_2010 * _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoChinese_2010Ptr(_result, false);
}

#pragma implementation_key(891)
inline ETABSv1::cDCoIndian_IS_456_2000Ptr ETABSv1::cDesignConcrete::GetIndian_IS_456_2000 ( ) {
    struct cDCoIndian_IS_456_2000 * _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoIndian_IS_456_2000Ptr(_result, false);
}

#pragma implementation_key(892)
inline long ETABSv1::cDesignConcrete::GetRebarPrefsBeam ( long Item, BSTR * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", Item, Value);
    return _result;
}

#pragma implementation_key(893)
inline long ETABSv1::cDesignConcrete::GetRebarPrefsColumn ( long Item, BSTR * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", Item, Value);
    return _result;
}

#pragma implementation_key(894)
inline long ETABSv1::cDesignConcrete::GetSummaryResultsBeam_2 ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * Location, SAFEARRAY * * TopCombo, SAFEARRAY * * TopArea, SAFEARRAY * * TopAreaReq, SAFEARRAY * * TopAreaMin, SAFEARRAY * * TopAreaProvided, SAFEARRAY * * BotCombo, SAFEARRAY * * BotArea, SAFEARRAY * * BotAreaReq, SAFEARRAY * * BotAreaMin, SAFEARRAY * * BotAreaProvided, SAFEARRAY * * VMajorCombo, SAFEARRAY * * VMajorArea, SAFEARRAY * * VmajorAreaReq, SAFEARRAY * * VmajorAreaMin, SAFEARRAY * * VmajorAreaProvided, SAFEARRAY * * TLCombo, SAFEARRAY * * TLArea, SAFEARRAY * * TTCombo, SAFEARRAY * * TTArea, SAFEARRAY * * ErrorSummary, SAFEARRAY * * WarningSummary, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6008\x6005\x6005\x6005\x6005\x6008\x6005\x6005\x6005\x6005\x6008\x6005\x6005\x6005\x6005\x6008\x6005\x6008\x6005\x6008\x6008\x0003", (BSTR)Name, NumberItems, FrameName, Location, TopCombo, TopArea, TopAreaReq, TopAreaMin, TopAreaProvided, BotCombo, BotArea, BotAreaReq, BotAreaMin, BotAreaProvided, VMajorCombo, VMajorArea, VmajorAreaReq, VmajorAreaMin, VmajorAreaProvided, TLCombo, TLArea, TTCombo, TTArea, ErrorSummary, WarningSummary, ItemType);
    return _result;
}

#pragma implementation_key(895)
inline ETABSv1::cDCoAS_3600_2018Ptr ETABSv1::cDesignConcrete::GetAS_3600_2018 ( ) {
    struct cDCoAS_3600_2018 * _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoAS_3600_2018Ptr(_result, false);
}

#pragma implementation_key(896)
inline ETABSv1::cDCoMexican_RCDF_2017Ptr ETABSv1::cDesignConcrete::GetMexican_RCDF_2017 ( ) {
    struct cDCoMexican_RCDF_2017 * _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoMexican_RCDF_2017Ptr(_result, false);
}

#pragma implementation_key(897)
inline ETABSv1::cDCoTS_500_2000_R2018Ptr ETABSv1::cDesignConcrete::GetTS_500_2000_R2018 ( ) {
    struct cDCoTS_500_2000_R2018 * _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDCoTS_500_2000_R2018Ptr(_result, false);
}

#pragma implementation_key(898)
inline long ETABSv1::cDesignConcrete::GetSeismicFramingType ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * FramingType, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x0003", (BSTR)Name, NumberItems, FrameName, FramingType, ItemType);
    return _result;
}

//
// dispinterface cDesignShearWall wrapper method implementations
//

#pragma implementation_key(899)
inline long ETABSv1::cDesignShearWall::GetPierSummaryResults ( SAFEARRAY * * Story, SAFEARRAY * * PierLabel, SAFEARRAY * * Station, SAFEARRAY * * DesignType, SAFEARRAY * * PierSecType, SAFEARRAY * * EdgeBar, SAFEARRAY * * EndBar, SAFEARRAY * * BarSpacing, SAFEARRAY * * ReinfPercent, SAFEARRAY * * CurrPercent, SAFEARRAY * * DCRatio, SAFEARRAY * * PierLeg, SAFEARRAY * * LegX1, SAFEARRAY * * LegY1, SAFEARRAY * * LegX2, SAFEARRAY * * LegY2, SAFEARRAY * * EdgeLeft, SAFEARRAY * * EdgeRight, SAFEARRAY * * AsLeft, SAFEARRAY * * AsRight, SAFEARRAY * * ShearAv, SAFEARRAY * * StressCompLeft, SAFEARRAY * * StressCompRight, SAFEARRAY * * StressLimitLeft, SAFEARRAY * * StressLimitRight, SAFEARRAY * * CDepthLeft, SAFEARRAY * * CLimitLeft, SAFEARRAY * * CDepthRight, SAFEARRAY * * CLimitRight, SAFEARRAY * * InelasticRotDemand, SAFEARRAY * * InelasticRotCapacity, SAFEARRAY * * NormCompStress, SAFEARRAY * * NormCompStressLimit, SAFEARRAY * * CDepth, SAFEARRAY * * BZoneL, SAFEARRAY * * BZoneR, SAFEARRAY * * BZoneLength, SAFEARRAY * * WarnMsg, SAFEARRAY * * ErrMsg ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x6008\x6008\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6008\x6008", Story, PierLabel, Station, DesignType, PierSecType, EdgeBar, EndBar, BarSpacing, ReinfPercent, CurrPercent, DCRatio, PierLeg, LegX1, LegY1, LegX2, LegY2, EdgeLeft, EdgeRight, AsLeft, AsRight, ShearAv, StressCompLeft, StressCompRight, StressLimitLeft, StressLimitRight, CDepthLeft, CLimitLeft, CDepthRight, CLimitRight, InelasticRotDemand, InelasticRotCapacity, NormCompStress, NormCompStressLimit, CDepth, BZoneL, BZoneR, BZoneLength, WarnMsg, ErrMsg);
    return _result;
}

#pragma implementation_key(900)
inline long ETABSv1::cDesignShearWall::GetRebar ( SAFEARRAY * * AreaObjName, SAFEARRAY * * StoryName, SAFEARRAY * * PierLabel, SAFEARRAY * * StationLocation, SAFEARRAY * * LegID, SAFEARRAY * * LeftX1, SAFEARRAY * * LeftY1, SAFEARRAY * * RightX2, SAFEARRAY * * RightY2, SAFEARRAY * * Length, SAFEARRAY * * Thickness, SAFEARRAY * * Fc, SAFEARRAY * * FY, SAFEARRAY * * fys, SAFEARRAY * * Flexural, SAFEARRAY * * ShearAndConfinement ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6008\x6008", AreaObjName, StoryName, PierLabel, StationLocation, LegID, LeftX1, LeftY1, RightX2, RightY2, Length, Thickness, Fc, FY, fys, Flexural, ShearAndConfinement);
    return _result;
}

#pragma implementation_key(901)
inline long ETABSv1::cDesignShearWall::GetSpandrelSummaryResults ( SAFEARRAY * * Story, SAFEARRAY * * Spandrel, SAFEARRAY * * Station, SAFEARRAY * * TopRebar, SAFEARRAY * * TopRebarRatio, SAFEARRAY * * TopRebarCombo, SAFEARRAY * * MuTop, SAFEARRAY * * BotRebar, SAFEARRAY * * BotRebarRatio, SAFEARRAY * * BotRebarCombo, SAFEARRAY * * MuBot, SAFEARRAY * * AVert, SAFEARRAY * * AHorz, SAFEARRAY * * ShearCombo, SAFEARRAY * * Vu, SAFEARRAY * * ADiag, SAFEARRAY * * ShearDiagCombo, SAFEARRAY * * VuDiag, SAFEARRAY * * WarnMsg, SAFEARRAY * * ErrMsg ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x6008\x6008\x6008\x6005\x6005\x6008\x6005\x6005\x6005\x6008\x6005\x6005\x6005\x6008\x6005\x6005\x6008\x6005\x6008\x6008", Story, Spandrel, Station, TopRebar, TopRebarRatio, TopRebarCombo, MuTop, BotRebar, BotRebarRatio, BotRebarCombo, MuBot, AVert, AHorz, ShearCombo, Vu, ADiag, ShearDiagCombo, VuDiag, WarnMsg, ErrMsg);
    return _result;
}

#pragma implementation_key(902)
inline long ETABSv1::cDesignShearWall::GetRebarPrefsPier ( long Item, BSTR * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", Item, Value);
    return _result;
}

#pragma implementation_key(903)
inline long ETABSv1::cDesignShearWall::GetRebarPrefsSpandrel ( long Item, BSTR * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", Item, Value);
    return _result;
}

//
// dispinterface cDesignSteel wrapper method implementations
//

#pragma implementation_key(904)
inline ETABSv1::cDStAISC360_05_IBC2006Ptr ETABSv1::cDesignSteel::GetAISC360_05_IBC2006 ( ) {
    struct cDStAISC360_05_IBC2006 * _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStAISC360_05_IBC2006Ptr(_result, false);
}

#pragma implementation_key(905)
inline ETABSv1::cDStCanadian_S16_09Ptr ETABSv1::cDesignSteel::GetCanadian_S16_09 ( ) {
    struct cDStCanadian_S16_09 * _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStCanadian_S16_09Ptr(_result, false);
}

#pragma implementation_key(906)
inline long ETABSv1::cDesignSteel::DeleteResults ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(907)
inline ETABSv1::cDStEurocode_3_2005Ptr ETABSv1::cDesignSteel::GetEurocode_3_2005 ( ) {
    struct cDStEurocode_3_2005 * _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStEurocode_3_2005Ptr(_result, false);
}

#pragma implementation_key(908)
inline long ETABSv1::cDesignSteel::GetCode ( BSTR * CodeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008", CodeName);
    return _result;
}

#pragma implementation_key(909)
inline long ETABSv1::cDesignSteel::GetComboDeflection ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(910)
inline long ETABSv1::cDesignSteel::GetComboStrength ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(911)
inline long ETABSv1::cDesignSteel::GetDesignSection ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(912)
inline long ETABSv1::cDesignSteel::GetGroup ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(913)
inline VARIANT_BOOL ETABSv1::cDesignSteel::GetResultsAvailable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x41, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(914)
inline long ETABSv1::cDesignSteel::GetSummaryResults ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * Ratio, SAFEARRAY * * RatioType, SAFEARRAY * * Location, SAFEARRAY * * ComboName, SAFEARRAY * * ErrorSummary, SAFEARRAY * * WarningSummary, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6003\x6005\x6008\x6008\x6008\x0003", (BSTR)Name, NumberItems, FrameName, Ratio, RatioType, Location, ComboName, ErrorSummary, WarningSummary, ItemType);
    return _result;
}

#pragma implementation_key(915)
inline long ETABSv1::cDesignSteel::GetTargetDispl ( long * NumberItems, SAFEARRAY * * LoadCase, SAFEARRAY * * Point, SAFEARRAY * * Displ, VARIANT_BOOL * Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6005\x400b", NumberItems, LoadCase, Point, Displ, Active);
    return _result;
}

#pragma implementation_key(916)
inline long ETABSv1::cDesignSteel::GetTargetPeriod ( long * NumberItems, BSTR * ModalCase, SAFEARRAY * * Mode, SAFEARRAY * * Period, VARIANT_BOOL * Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4008\x6003\x6005\x400b", NumberItems, ModalCase, Mode, Period, Active);
    return _result;
}

#pragma implementation_key(917)
inline long ETABSv1::cDesignSteel::ResetOverwrites ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(918)
inline long ETABSv1::cDesignSteel::SetAutoSelectNull ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(919)
inline long ETABSv1::cDesignSteel::SetCode ( _bstr_t CodeName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)CodeName);
    return _result;
}

#pragma implementation_key(920)
inline long ETABSv1::cDesignSteel::SetComboDeflection ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(921)
inline long ETABSv1::cDesignSteel::SetComboStrength ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(922)
inline long ETABSv1::cDesignSteel::SetDesignSection ( _bstr_t Name, _bstr_t PropName, VARIANT_BOOL LastAnalysis, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x000b\x0003", (BSTR)Name, (BSTR)PropName, LastAnalysis, ItemType);
    return _result;
}

#pragma implementation_key(923)
inline long ETABSv1::cDesignSteel::SetGroup ( _bstr_t Name, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(924)
inline long ETABSv1::cDesignSteel::SetTargetDispl ( long NumberItems, SAFEARRAY * * LoadCase, SAFEARRAY * * Point, SAFEARRAY * * Displ, VARIANT_BOOL Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x6008\x6008\x6005\x000b", NumberItems, LoadCase, Point, Displ, Active);
    return _result;
}

#pragma implementation_key(925)
inline long ETABSv1::cDesignSteel::SetTargetPeriod ( long NumberItems, _bstr_t ModalCase, SAFEARRAY * * Mode, SAFEARRAY * * Period, VARIANT_BOOL Active ) {
    long _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x6003\x6005\x000b", NumberItems, (BSTR)ModalCase, Mode, Period, Active);
    return _result;
}

#pragma implementation_key(926)
inline long ETABSv1::cDesignSteel::StartDesign ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(927)
inline long ETABSv1::cDesignSteel::VerifyPassed ( long * NumberItems, long * N1, long * N2, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4003\x6008", NumberItems, N1, N2, MyName);
    return _result;
}

#pragma implementation_key(928)
inline long ETABSv1::cDesignSteel::VerifySections ( long * NumberItems, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, MyName);
    return _result;
}

#pragma implementation_key(929)
inline ETABSv1::cDStSP16_13330_2011Ptr ETABSv1::cDesignSteel::GetSP16_13330_2011 ( ) {
    struct cDStSP16_13330_2011 * _result = 0;
    _com_dispatch_method(this, 0x44, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStSP16_13330_2011Ptr(_result, false);
}

#pragma implementation_key(930)
inline ETABSv1::cDStCanadian_S16_14Ptr ETABSv1::cDesignSteel::GetCanadian_S16_14 ( ) {
    struct cDStCanadian_S16_14 * _result = 0;
    _com_dispatch_method(this, 0x48, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStCanadian_S16_14Ptr(_result, false);
}

#pragma implementation_key(931)
inline ETABSv1::cDStCanadian_S16_19Ptr ETABSv1::cDesignSteel::GetCanadian_S16_19 ( ) {
    struct cDStCanadian_S16_19 * _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStCanadian_S16_19Ptr(_result, false);
}

#pragma implementation_key(932)
inline ETABSv1::cDStAISC_LRFD93Ptr ETABSv1::cDesignSteel::GetAISC_LRFD93 ( ) {
    struct cDStAISC_LRFD93 * _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStAISC_LRFD93Ptr(_result, false);
}

#pragma implementation_key(933)
inline ETABSv1::cDStAustralian_AS4100_98Ptr ETABSv1::cDesignSteel::GetAustralian_AS4100_98 ( ) {
    struct cDStAustralian_AS4100_98 * _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStAustralian_AS4100_98Ptr(_result, false);
}

#pragma implementation_key(934)
inline ETABSv1::cDStAustralian_AS4100_2020Ptr ETABSv1::cDesignSteel::GetAustralian_AS4100_2020 ( ) {
    struct cDStAustralian_AS4100_2020 * _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStAustralian_AS4100_2020Ptr(_result, false);
}

#pragma implementation_key(935)
inline ETABSv1::cDStBS5950_2000Ptr ETABSv1::cDesignSteel::GetBS5950_2000 ( ) {
    struct cDStBS5950_2000 * _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStBS5950_2000Ptr(_result, false);
}

#pragma implementation_key(936)
inline ETABSv1::cDStChinese_2010Ptr ETABSv1::cDesignSteel::GetChinese_2010 ( ) {
    struct cDStChinese_2010 * _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStChinese_2010Ptr(_result, false);
}

#pragma implementation_key(937)
inline ETABSv1::cDStChinese_2018Ptr ETABSv1::cDesignSteel::GetChinese_2018 ( ) {
    struct cDStChinese_2018 * _result = 0;
    _com_dispatch_method(this, 0x46, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStChinese_2018Ptr(_result, false);
}

#pragma implementation_key(938)
inline ETABSv1::cDStIndian_IS_800_2007Ptr ETABSv1::cDesignSteel::GetIndian_IS_800_2007 ( ) {
    struct cDStIndian_IS_800_2007 * _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStIndian_IS_800_2007Ptr(_result, false);
}

#pragma implementation_key(939)
inline ETABSv1::cDStNewZealand_NZS3404_97Ptr ETABSv1::cDesignSteel::GetNewZealand_NZS3404_97 ( ) {
    struct cDStNewZealand_NZS3404_97 * _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStNewZealand_NZS3404_97Ptr(_result, false);
}

#pragma implementation_key(940)
inline ETABSv1::cDStItalianNTC2008SPtr ETABSv1::cDesignSteel::GetItalian_NTC_2008 ( ) {
    struct cDStItalianNTC2008S * _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStItalianNTC2008SPtr(_result, false);
}

#pragma implementation_key(941)
inline ETABSv1::cDStItalianNTC2018SPtr ETABSv1::cDesignSteel::GetItalian_NTC_2018 ( ) {
    struct cDStItalianNTC2018S * _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&_result, NULL);
    return cDStItalianNTC2018SPtr(_result, false);
}

#pragma implementation_key(942)
inline long ETABSv1::cDesignSteel::GetSummaryResults_2 ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameType, SAFEARRAY * * DesignSect, SAFEARRAY * * Status, SAFEARRAY * * PMMCombo, SAFEARRAY * * PMMRatio, SAFEARRAY * * PRatio, SAFEARRAY * * MMajRatio, SAFEARRAY * * MMinRatio, SAFEARRAY * * VMajCombo, SAFEARRAY * * VMajRatio, SAFEARRAY * * VMinCombo, SAFEARRAY * * VMinRatio, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6008\x6005\x6008\x6005\x0003", (BSTR)Name, NumberItems, FrameType, DesignSect, Status, PMMCombo, PMMRatio, PRatio, MMajRatio, MMinRatio, VMajCombo, VMajRatio, VMinCombo, VMinRatio, ItemType);
    return _result;
}

#pragma implementation_key(943)
inline long ETABSv1::cDesignSteel::GetSummaryResults_3 ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * FrameType, SAFEARRAY * * DesignSect, SAFEARRAY * * Status, SAFEARRAY * * PMMCombo, SAFEARRAY * * PMMRatio, SAFEARRAY * * PRatio, SAFEARRAY * * MMajRatio, SAFEARRAY * * MMinRatio, SAFEARRAY * * VMajCombo, SAFEARRAY * * VMajRatio, SAFEARRAY * * VMinCombo, SAFEARRAY * * VMinRatio, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x47, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6008\x6005\x6008\x6005\x0003", (BSTR)Name, NumberItems, FrameName, FrameType, DesignSect, Status, PMMCombo, PMMRatio, PRatio, MMajRatio, MMinRatio, VMajCombo, VMajRatio, VMinCombo, VMinRatio, ItemType);
    return _result;
}

//
// dispinterface cDStAISC360_05_IBC2006 wrapper method implementations
//

#pragma implementation_key(944)
inline long ETABSv1::cDStAISC360_05_IBC2006::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(945)
inline long ETABSv1::cDStAISC360_05_IBC2006::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(946)
inline long ETABSv1::cDStAISC360_05_IBC2006::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(947)
inline long ETABSv1::cDStAISC360_05_IBC2006::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStAISC360_10 wrapper method implementations
//

#pragma implementation_key(948)
inline long ETABSv1::cDStAISC360_10::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(949)
inline long ETABSv1::cDStAISC360_10::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(950)
inline long ETABSv1::cDStAISC360_10::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(951)
inline long ETABSv1::cDStAISC360_10::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStAISC_ASD89 wrapper method implementations
//

#pragma implementation_key(952)
inline long ETABSv1::cDStAISC_ASD89::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(953)
inline long ETABSv1::cDStAISC_ASD89::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(954)
inline long ETABSv1::cDStAISC_ASD89::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(955)
inline long ETABSv1::cDStAISC_ASD89::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStAISC_LRFD93 wrapper method implementations
//

#pragma implementation_key(956)
inline long ETABSv1::cDStAISC_LRFD93::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(957)
inline long ETABSv1::cDStAISC_LRFD93::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(958)
inline long ETABSv1::cDStAISC_LRFD93::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(959)
inline long ETABSv1::cDStAISC_LRFD93::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStAustralian_AS4100_98 wrapper method implementations
//

#pragma implementation_key(960)
inline long ETABSv1::cDStAustralian_AS4100_98::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(961)
inline long ETABSv1::cDStAustralian_AS4100_98::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(962)
inline long ETABSv1::cDStAustralian_AS4100_98::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(963)
inline long ETABSv1::cDStAustralian_AS4100_98::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStBS5950_2000 wrapper method implementations
//

#pragma implementation_key(964)
inline long ETABSv1::cDStBS5950_2000::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(965)
inline long ETABSv1::cDStBS5950_2000::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(966)
inline long ETABSv1::cDStBS5950_2000::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(967)
inline long ETABSv1::cDStBS5950_2000::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStCanadian_S16_09 wrapper method implementations
//

#pragma implementation_key(968)
inline long ETABSv1::cDStCanadian_S16_09::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(969)
inline long ETABSv1::cDStCanadian_S16_09::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(970)
inline long ETABSv1::cDStCanadian_S16_09::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(971)
inline long ETABSv1::cDStCanadian_S16_09::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStCanadian_S16_19 wrapper method implementations
//

#pragma implementation_key(972)
inline long ETABSv1::cDStCanadian_S16_19::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(973)
inline long ETABSv1::cDStCanadian_S16_19::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(974)
inline long ETABSv1::cDStCanadian_S16_19::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(975)
inline long ETABSv1::cDStCanadian_S16_19::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStChinese_2010 wrapper method implementations
//

#pragma implementation_key(976)
inline long ETABSv1::cDStChinese_2010::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(977)
inline long ETABSv1::cDStChinese_2010::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(978)
inline long ETABSv1::cDStChinese_2010::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(979)
inline long ETABSv1::cDStChinese_2010::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStChinese_2018 wrapper method implementations
//

#pragma implementation_key(980)
inline long ETABSv1::cDStChinese_2018::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(981)
inline long ETABSv1::cDStChinese_2018::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(982)
inline long ETABSv1::cDStChinese_2018::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(983)
inline long ETABSv1::cDStChinese_2018::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStEurocode_3_2005 wrapper method implementations
//

#pragma implementation_key(984)
inline long ETABSv1::cDStEurocode_3_2005::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(985)
inline long ETABSv1::cDStEurocode_3_2005::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(986)
inline long ETABSv1::cDStEurocode_3_2005::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(987)
inline long ETABSv1::cDStEurocode_3_2005::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStIndian_IS_800_2007 wrapper method implementations
//

#pragma implementation_key(988)
inline long ETABSv1::cDStIndian_IS_800_2007::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(989)
inline long ETABSv1::cDStIndian_IS_800_2007::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(990)
inline long ETABSv1::cDStIndian_IS_800_2007::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(991)
inline long ETABSv1::cDStIndian_IS_800_2007::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStItalianNTC2008S wrapper method implementations
//

#pragma implementation_key(992)
inline long ETABSv1::cDStItalianNTC2008S::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(993)
inline long ETABSv1::cDStItalianNTC2008S::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(994)
inline long ETABSv1::cDStItalianNTC2008S::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(995)
inline long ETABSv1::cDStItalianNTC2008S::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStNewZealand_NZS3404_97 wrapper method implementations
//

#pragma implementation_key(996)
inline long ETABSv1::cDStNewZealand_NZS3404_97::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(997)
inline long ETABSv1::cDStNewZealand_NZS3404_97::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(998)
inline long ETABSv1::cDStNewZealand_NZS3404_97::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(999)
inline long ETABSv1::cDStNewZealand_NZS3404_97::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStSP16_13330_2011 wrapper method implementations
//

#pragma implementation_key(1000)
inline long ETABSv1::cDStSP16_13330_2011::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(1001)
inline long ETABSv1::cDStSP16_13330_2011::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(1002)
inline long ETABSv1::cDStSP16_13330_2011::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(1003)
inline long ETABSv1::cDStSP16_13330_2011::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStCanadian_S16_14 wrapper method implementations
//

#pragma implementation_key(1004)
inline long ETABSv1::cDStCanadian_S16_14::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(1005)
inline long ETABSv1::cDStCanadian_S16_14::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(1006)
inline long ETABSv1::cDStCanadian_S16_14::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(1007)
inline long ETABSv1::cDStCanadian_S16_14::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDStItalianNTC2018S wrapper method implementations
//

#pragma implementation_key(1008)
inline long ETABSv1::cDStItalianNTC2018S::GetOverwrite ( _bstr_t Name, long Item, BSTR * textValue, double * numericValue, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4008\x4005\x400b", (BSTR)Name, Item, textValue, numericValue, ProgDet);
    return _result;
}

#pragma implementation_key(1009)
inline long ETABSv1::cDStItalianNTC2018S::GetPreference ( long Item, BSTR * textValue, double * numericValue ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008\x4005", Item, textValue, numericValue);
    return _result;
}

#pragma implementation_key(1010)
inline long ETABSv1::cDStItalianNTC2018S::SetOverwrite ( _bstr_t Name, long Item, _bstr_t textValue, double numericValue, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0008\x0005\x0003", (BSTR)Name, Item, (BSTR)textValue, numericValue, ItemType);
    return _result;
}

#pragma implementation_key(1011)
inline long ETABSv1::cDStItalianNTC2018S::SetPreference ( long Item, _bstr_t textValue, double numericValue ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x0005", Item, (BSTR)textValue, numericValue);
    return _result;
}

//
// dispinterface cDStSP16_13330_2017 wrapper method implementations
//

#pragma implementation_key(1012)
inline long ETABSv1::cDStSP16_13330_2017::GetOverwrite ( _bstr_t Name, long Item, double * Value, VARIANT_BOOL * ProgDet ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4005\x400b", (BSTR)Name, Item, Value, ProgDet);
    return _result;
}

#pragma implementation_key(1013)
inline long ETABSv1::cDStSP16_13330_2017::GetPreference ( long Item, double * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", Item, Value);
    return _result;
}

#pragma implementation_key(1014)
inline long ETABSv1::cDStSP16_13330_2017::SetOverwrite ( _bstr_t Name, long Item, double Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, Item, Value, ItemType);
    return _result;
}

#pragma implementation_key(1015)
inline long ETABSv1::cDStSP16_13330_2017::SetPreference ( long Item, double Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", Item, Value);
    return _result;
}

//
// dispinterface cDetailing wrapper method implementations
//

#pragma implementation_key(1016)
inline long ETABSv1::cDetailing::ClearDetailing ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1017)
inline long ETABSv1::cDetailing::GetDetailedBeamLines ( long * NumberItems, SAFEARRAY * * BeamLineIDs ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, BeamLineIDs);
    return _result;
}

#pragma implementation_key(1018)
inline long ETABSv1::cDetailing::GetDetailedBeamLineData ( _bstr_t BeamLineID, SAFEARRAY * * ObjectUniqueNames, long * NumberSpans, SAFEARRAY * * SpanLength, SAFEARRAY * * NumLongBars, SAFEARRAY * * LongBarDiameter, SAFEARRAY * * LongBarNotation, SAFEARRAY * * LongBarStartDist, SAFEARRAY * * LongBarStartBend, SAFEARRAY * * LongBarEndBend, SAFEARRAY * * LongBarLength, SAFEARRAY * * LongBarNumLayers, SAFEARRAY * * NumTieBars, SAFEARRAY * * NumTieVertLegs, SAFEARRAY * * TieBarDiameter, SAFEARRAY * * TieBarNotation, SAFEARRAY * * TieBarStartDist, SAFEARRAY * * TieBarSpacing, SAFEARRAY * * TieBarType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x4003\x6005\x6003\x6005\x6008\x6005\x6003\x6003\x6005\x6003\x6003\x6003\x6005\x6008\x6005\x6005\x6003", (BSTR)BeamLineID, ObjectUniqueNames, NumberSpans, SpanLength, NumLongBars, LongBarDiameter, LongBarNotation, LongBarStartDist, LongBarStartBend, LongBarEndBend, LongBarLength, LongBarNumLayers, NumTieBars, NumTieVertLegs, TieBarDiameter, TieBarNotation, TieBarStartDist, TieBarSpacing, TieBarType);
    return _result;
}

#pragma implementation_key(1019)
inline long ETABSv1::cDetailing::GetDetailedBeamLineData_1 ( _bstr_t BeamLineID, SAFEARRAY * * ObjectUniqueNames, long * NumberSpans, SAFEARRAY * * SpanLength, SAFEARRAY * * NumLongBars, SAFEARRAY * * LongBarGUID, SAFEARRAY * * LongBarDiameter, SAFEARRAY * * LongBarNotation, SAFEARRAY * * LongBarStartDist, SAFEARRAY * * LongBarStartBend, SAFEARRAY * * LongBarEndBend, SAFEARRAY * * LongBarLength, SAFEARRAY * * LongBarNumLayers, SAFEARRAY * * NumTieBars, SAFEARRAY * * NumTieVertLegs, SAFEARRAY * * TieBarGUID, SAFEARRAY * * TieBarDiameter, SAFEARRAY * * TieBarNotation, SAFEARRAY * * TieBarStartDist, SAFEARRAY * * TieBarSpacing, SAFEARRAY * * TieBarType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x4003\x6005\x6003\x6008\x6005\x6008\x6005\x6003\x6003\x6005\x6003\x6003\x6003\x6008\x6005\x6008\x6005\x6005\x6003", (BSTR)BeamLineID, ObjectUniqueNames, NumberSpans, SpanLength, NumLongBars, LongBarGUID, LongBarDiameter, LongBarNotation, LongBarStartDist, LongBarStartBend, LongBarEndBend, LongBarLength, LongBarNumLayers, NumTieBars, NumTieVertLegs, TieBarGUID, TieBarDiameter, TieBarNotation, TieBarStartDist, TieBarSpacing, TieBarType);
    return _result;
}

#pragma implementation_key(1020)
inline long ETABSv1::cDetailing::GetDetailedColumnStacks ( long * NumberItems, SAFEARRAY * * ColumnStackIDs ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberItems, ColumnStackIDs);
    return _result;
}

#pragma implementation_key(1021)
inline long ETABSv1::cDetailing::GetDetailedColumnStackData ( _bstr_t ColumnStackID, SAFEARRAY * * ObjectUniqueNames, long * NumLongBarSets, SAFEARRAY * * NumLongBars, SAFEARRAY * * LongBarDiameter, SAFEARRAY * * LongBarNotation, SAFEARRAY * * LongBarStartDist, SAFEARRAY * * LongBarStartBend, SAFEARRAY * * LongBarEndBend, SAFEARRAY * * LongBarLength, SAFEARRAY * * LongBarNumLayers, long * NumTieZones, SAFEARRAY * * TieBarZones, SAFEARRAY * * NumTieBars, SAFEARRAY * * NumTieVertLegs, SAFEARRAY * * TieBarDiameter, SAFEARRAY * * TieBarNotation, SAFEARRAY * * TieBarStartDist, SAFEARRAY * * TieBarSpacing, SAFEARRAY * * TieBarType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x4003\x6003\x6005\x6008\x6005\x6003\x6003\x6005\x6003\x4003\x6008\x6003\x6003\x6005\x6008\x6005\x6005\x6003", (BSTR)ColumnStackID, ObjectUniqueNames, NumLongBarSets, NumLongBars, LongBarDiameter, LongBarNotation, LongBarStartDist, LongBarStartBend, LongBarEndBend, LongBarLength, LongBarNumLayers, NumTieZones, TieBarZones, NumTieBars, NumTieVertLegs, TieBarDiameter, TieBarNotation, TieBarStartDist, TieBarSpacing, TieBarType);
    return _result;
}

#pragma implementation_key(1022)
inline long ETABSv1::cDetailing::GetDetailedColumnStackData_1 ( _bstr_t ColumnStackID, SAFEARRAY * * ObjectUniqueNames, long * NumLongBarSets, SAFEARRAY * * NumLongBars, SAFEARRAY * * LongBarGUID, SAFEARRAY * * LongBarDiameter, SAFEARRAY * * LongBarNotation, SAFEARRAY * * LongBarStartDist, SAFEARRAY * * LongBarStartBend, SAFEARRAY * * LongBarEndBend, SAFEARRAY * * LongBarLength, SAFEARRAY * * LongBarNumLayers, long * NumTieZones, SAFEARRAY * * TieBarZones, SAFEARRAY * * NumTieBars, SAFEARRAY * * NumTieHorLegs, SAFEARRAY * * NumTieVertLegs, SAFEARRAY * * TieBarGUID, SAFEARRAY * * TieBarDiameter, SAFEARRAY * * TieBarNotation, SAFEARRAY * * TieBarStartDist, SAFEARRAY * * TieBarSpacing, SAFEARRAY * * TieBarType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x4003\x6003\x6008\x6005\x6008\x6005\x6003\x6003\x6005\x6003\x4003\x6008\x6003\x6003\x6003\x6008\x6005\x6008\x6005\x6005\x6003", (BSTR)ColumnStackID, ObjectUniqueNames, NumLongBarSets, NumLongBars, LongBarGUID, LongBarDiameter, LongBarNotation, LongBarStartDist, LongBarStartBend, LongBarEndBend, LongBarLength, LongBarNumLayers, NumTieZones, TieBarZones, NumTieBars, NumTieHorLegs, NumTieVertLegs, TieBarGUID, TieBarDiameter, TieBarNotation, TieBarStartDist, TieBarSpacing, TieBarType);
    return _result;
}

#pragma implementation_key(1023)
inline long ETABSv1::cDetailing::GetDetailedSlabs ( long * NumberItems, SAFEARRAY * * Names, SAFEARRAY * * SlabElevations, SAFEARRAY * * GUIDs ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6005\x6008", NumberItems, Names, SlabElevations, GUIDs);
    return _result;
}

#pragma implementation_key(1024)
inline long ETABSv1::cDetailing::GetDetailedSlabBotBarData ( _bstr_t SlabName, long * NumData, SAFEARRAY * * Names, SAFEARRAY * * NumBars, SAFEARRAY * * BarDiameter, SAFEARRAY * * BarNotation, SAFEARRAY * * BarMaterial, SAFEARRAY * * StartX, SAFEARRAY * * StartY, SAFEARRAY * * StartZ, SAFEARRAY * * EndX, SAFEARRAY * * EndY, SAFEARRAY * * EndZ, SAFEARRAY * * WidthLeft, SAFEARRAY * * WidthRight, SAFEARRAY * * OffsetFromTop, SAFEARRAY * * OffsetFromBot, SAFEARRAY * * StartBarBend, SAFEARRAY * * EndBarBend, SAFEARRAY * * GUIDs ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6005\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6003\x6003\x6008", (BSTR)SlabName, NumData, Names, NumBars, BarDiameter, BarNotation, BarMaterial, StartX, StartY, StartZ, EndX, EndY, EndZ, WidthLeft, WidthRight, OffsetFromTop, OffsetFromBot, StartBarBend, EndBarBend, GUIDs);
    return _result;
}

#pragma implementation_key(1025)
inline long ETABSv1::cDetailing::GetDetailedSlabBotBarData_1 ( _bstr_t SlabName, long * NumData, SAFEARRAY * * Names, SAFEARRAY * * NumBars, SAFEARRAY * * BarDiameter, SAFEARRAY * * BarNotation, SAFEARRAY * * BarMaterial, SAFEARRAY * * StartX, SAFEARRAY * * StartY, SAFEARRAY * * StartZ, SAFEARRAY * * EndX, SAFEARRAY * * EndY, SAFEARRAY * * EndZ, SAFEARRAY * * WidthLeft, SAFEARRAY * * WidthRight, SAFEARRAY * * OffsetFromTop, SAFEARRAY * * OffsetFromBot, SAFEARRAY * * StartBarBend, SAFEARRAY * * EndBarBend, SAFEARRAY * * GUIDs, SAFEARRAY * * StripNames, SAFEARRAY * * SpanNos ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6005\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6003\x6003\x6008\x6008\x6003", (BSTR)SlabName, NumData, Names, NumBars, BarDiameter, BarNotation, BarMaterial, StartX, StartY, StartZ, EndX, EndY, EndZ, WidthLeft, WidthRight, OffsetFromTop, OffsetFromBot, StartBarBend, EndBarBend, GUIDs, StripNames, SpanNos);
    return _result;
}

#pragma implementation_key(1026)
inline long ETABSv1::cDetailing::GetDetailedSlabTopBarData ( _bstr_t SlabName, long * NumData, SAFEARRAY * * Names, SAFEARRAY * * NumBars, SAFEARRAY * * BarDiameter, SAFEARRAY * * BarNotation, SAFEARRAY * * BarMaterial, SAFEARRAY * * StartX, SAFEARRAY * * StartY, SAFEARRAY * * StartZ, SAFEARRAY * * EndX, SAFEARRAY * * EndY, SAFEARRAY * * EndZ, SAFEARRAY * * WidthLeft, SAFEARRAY * * WidthRight, SAFEARRAY * * OffsetFromTop, SAFEARRAY * * OffsetFromBot, SAFEARRAY * * StartBarBend, SAFEARRAY * * EndBarBend, SAFEARRAY * * GUIDs ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6005\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6003\x6003\x6008", (BSTR)SlabName, NumData, Names, NumBars, BarDiameter, BarNotation, BarMaterial, StartX, StartY, StartZ, EndX, EndY, EndZ, WidthLeft, WidthRight, OffsetFromTop, OffsetFromBot, StartBarBend, EndBarBend, GUIDs);
    return _result;
}

#pragma implementation_key(1027)
inline long ETABSv1::cDetailing::GetDetailedSlabTopBarData_1 ( _bstr_t SlabName, long * NumData, SAFEARRAY * * Names, SAFEARRAY * * NumBars, SAFEARRAY * * BarDiameter, SAFEARRAY * * BarNotation, SAFEARRAY * * BarMaterial, SAFEARRAY * * StartX, SAFEARRAY * * StartY, SAFEARRAY * * StartZ, SAFEARRAY * * EndX, SAFEARRAY * * EndY, SAFEARRAY * * EndZ, SAFEARRAY * * WidthLeft, SAFEARRAY * * WidthRight, SAFEARRAY * * OffsetFromTop, SAFEARRAY * * OffsetFromBot, SAFEARRAY * * StartBarBend, SAFEARRAY * * EndBarBend, SAFEARRAY * * GUIDs, SAFEARRAY * * StripNames, SAFEARRAY * * SpanNos ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6005\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6003\x6003\x6008\x6008\x6003", (BSTR)SlabName, NumData, Names, NumBars, BarDiameter, BarNotation, BarMaterial, StartX, StartY, StartZ, EndX, EndY, EndZ, WidthLeft, WidthRight, OffsetFromTop, OffsetFromBot, StartBarBend, EndBarBend, GUIDs, StripNames, SpanNos);
    return _result;
}

#pragma implementation_key(1028)
inline VARIANT_BOOL ETABSv1::cDetailing::GetDetailingAvailable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_BOOL, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1029)
inline long ETABSv1::cDetailing::GetSimilarBeamLines ( _bstr_t BeamLineID, long * NumberSimilarBeams, SAFEARRAY * * NumberUniqueObjects, SAFEARRAY * * ObjectUniqueNames ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6008", (BSTR)BeamLineID, NumberSimilarBeams, NumberUniqueObjects, ObjectUniqueNames);
    return _result;
}

#pragma implementation_key(1030)
inline long ETABSv1::cDetailing::GetSimilarColumnStacks ( _bstr_t ColumnStackID, long * NumberSimilarColumns, SAFEARRAY * * NumberUniqueObjects, SAFEARRAY * * ObjectUniqueNames ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6008", (BSTR)ColumnStackID, NumberSimilarColumns, NumberUniqueObjects, ObjectUniqueNames);
    return _result;
}

#pragma implementation_key(1031)
inline long ETABSv1::cDetailing::GetSimilarSlabs ( _bstr_t SlabName, long * NumberSimilarSlabs, SAFEARRAY * * Names ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)SlabName, NumberSimilarSlabs, Names);
    return _result;
}

#pragma implementation_key(1032)
inline long ETABSv1::cDetailing::StartDetailing ( VARIANT_BOOL OverwriteExisting ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", OverwriteExisting);
    return _result;
}

#pragma implementation_key(1033)
inline long ETABSv1::cDetailing::GetBeamLongRebarData ( _bstr_t Name, long * NumberRebarSets, SAFEARRAY * * BarSizeName, SAFEARRAY * * BarArea, SAFEARRAY * * NumberBars, SAFEARRAY * * Location, SAFEARRAY * * ClearCover, SAFEARRAY * * StartCoord1, SAFEARRAY * * BarLength, SAFEARRAY * * BendingAngleStart, SAFEARRAY * * BendingAngleEnd, SAFEARRAY * * RebarSetGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6003\x6008\x6005\x6005\x6005\x6005\x6005\x6008", (BSTR)Name, NumberRebarSets, BarSizeName, BarArea, NumberBars, Location, ClearCover, StartCoord1, BarLength, BendingAngleStart, BendingAngleEnd, RebarSetGUID);
    return _result;
}

#pragma implementation_key(1034)
inline long ETABSv1::cDetailing::GetBeamTieRebarData ( _bstr_t Name, long * NumberRebarSets, SAFEARRAY * * BarSizeName, SAFEARRAY * * BarArea, SAFEARRAY * * NumberLegs, SAFEARRAY * * Location, SAFEARRAY * * ClearCover, SAFEARRAY * * StartCoord1, SAFEARRAY * * Spacing, SAFEARRAY * * Lengths, SAFEARRAY * * RebarSetGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x6008\x6005\x6005\x6005\x6005\x6008", (BSTR)Name, NumberRebarSets, BarSizeName, BarArea, NumberLegs, Location, ClearCover, StartCoord1, Spacing, Lengths, RebarSetGUID);
    return _result;
}

#pragma implementation_key(1035)
inline long ETABSv1::cDetailing::GetColumnLongRebarData ( _bstr_t Name, long * NumberRebarSets, SAFEARRAY * * BarSizeName, SAFEARRAY * * BarArea, SAFEARRAY * * NumberCBars, SAFEARRAY * * NumberR3Bars, SAFEARRAY * * NumberR2Bars, SAFEARRAY * * Location, SAFEARRAY * * ClearCover, SAFEARRAY * * RebarSetGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6003\x6003\x6003\x6008\x6005\x6008", (BSTR)Name, NumberRebarSets, BarSizeName, BarArea, NumberCBars, NumberR3Bars, NumberR2Bars, Location, ClearCover, RebarSetGUID);
    return _result;
}

#pragma implementation_key(1036)
inline long ETABSv1::cDetailing::GetColumnTieRebarData ( _bstr_t Name, long * NumberRebarSets, SAFEARRAY * * BarSizeName, SAFEARRAY * * BarArea, SAFEARRAY * * Pattern, SAFEARRAY * * ConfineType, SAFEARRAY * * NumberLegs2Dir, SAFEARRAY * * NumberLegs3Dir, SAFEARRAY * * Location, SAFEARRAY * * ClearCover, SAFEARRAY * * StartCoord1, SAFEARRAY * * Spacing, SAFEARRAY * * Heights, SAFEARRAY * * RebarSetGUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6003\x6003\x6003\x6003\x6008\x6005\x6005\x6005\x6005\x6008", (BSTR)Name, NumberRebarSets, BarSizeName, BarArea, Pattern, ConfineType, NumberLegs2Dir, NumberLegs3Dir, Location, ClearCover, StartCoord1, Spacing, Heights, RebarSetGUID);
    return _result;
}

#pragma implementation_key(1037)
inline long ETABSv1::cDetailing::GetDetailedBeamLineGuidData ( _bstr_t BeamLineID, _bstr_t SimilarFirstBeamUniqueID, SAFEARRAY * * LongitudinalABars, SAFEARRAY * * LongitudinalBBars, SAFEARRAY * * LongitudinalCBars, SAFEARRAY * * LongitudinalDBars, SAFEARRAY * * LongitudinalEBars, SAFEARRAY * * LongitudinalFBars, SAFEARRAY * * LongitudinalGBars, SAFEARRAY * * LongitudinalHBars, SAFEARRAY * * ZoneATies, SAFEARRAY * * ZoneBTies, SAFEARRAY * * ZoneCTies ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x6008\x6008\x6008\x6008\x6008\x6008\x6008\x6008\x6008\x6008\x6008", (BSTR)BeamLineID, (BSTR)SimilarFirstBeamUniqueID, LongitudinalABars, LongitudinalBBars, LongitudinalCBars, LongitudinalDBars, LongitudinalEBars, LongitudinalFBars, LongitudinalGBars, LongitudinalHBars, ZoneATies, ZoneBTies, ZoneCTies);
    return _result;
}

#pragma implementation_key(1038)
inline long ETABSv1::cDetailing::GetDetailedColumnStackGuidData ( _bstr_t ColumnStackID, _bstr_t SimilarFirstColumnUniqueID, SAFEARRAY * * LongitudinalBars, SAFEARRAY * * TiesA, SAFEARRAY * * TiesB, SAFEARRAY * * TiesC ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x6008\x6008\x6008\x6008", (BSTR)ColumnStackID, (BSTR)SimilarFirstColumnUniqueID, LongitudinalBars, TiesA, TiesB, TiesC);
    return _result;
}

#pragma implementation_key(1039)
inline long ETABSv1::cDetailing::GetDetailedColumnStackData_2 ( _bstr_t ColumnStackID, SAFEARRAY * * ObjectUniqueNames, long * NumLongBarSets, SAFEARRAY * * NumLongBars, SAFEARRAY * * NumLongR2Bars, SAFEARRAY * * NumLongR3Bars, SAFEARRAY * * LongBarGUID, SAFEARRAY * * LongBarDiameter, SAFEARRAY * * LongBarNotation, SAFEARRAY * * LongBarStartDist, SAFEARRAY * * LongBarStartBend, SAFEARRAY * * LongBarEndBend, SAFEARRAY * * LongBarLength, SAFEARRAY * * LongBarNumLayers, long * NumTieZones, SAFEARRAY * * TieBarZone, SAFEARRAY * * NumTieBars, SAFEARRAY * * NumTieR2Legs, SAFEARRAY * * NumTieR3Legs, SAFEARRAY * * TieBarGUID, SAFEARRAY * * TieBarDiameter, SAFEARRAY * * TieBarNotation, SAFEARRAY * * TieBarStartDist, SAFEARRAY * * TieBarSpacing, SAFEARRAY * * TieBarType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x4003\x6003\x6003\x6003\x6008\x6005\x6008\x6005\x6003\x6003\x6005\x6003\x4003\x6008\x6003\x6003\x6003\x6008\x6005\x6008\x6005\x6005\x6003", (BSTR)ColumnStackID, ObjectUniqueNames, NumLongBarSets, NumLongBars, NumLongR2Bars, NumLongR3Bars, LongBarGUID, LongBarDiameter, LongBarNotation, LongBarStartDist, LongBarStartBend, LongBarEndBend, LongBarLength, LongBarNumLayers, NumTieZones, TieBarZone, NumTieBars, NumTieR2Legs, NumTieR3Legs, TieBarGUID, TieBarDiameter, TieBarNotation, TieBarStartDist, TieBarSpacing, TieBarType);
    return _result;
}

#pragma implementation_key(1040)
inline long ETABSv1::cDetailing::GetNumberDetailedSlabs ( long * NumberDetailingOutput ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", NumberDetailingOutput);
    return _result;
}

#pragma implementation_key(1041)
inline long ETABSv1::cDetailing::GetDetailedSlab_OneDetailingOutputInfo ( long DetailingOutputIndex, BSTR * Guid_ETABS, BSTR * Floor, BSTR * StoryNameETABS, double * LevelZ, long * NumberStrips ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008\x4008\x4008\x4005\x4003", DetailingOutputIndex, Guid_ETABS, Floor, StoryNameETABS, LevelZ, NumberStrips);
    return _result;
}

#pragma implementation_key(1042)
inline long ETABSv1::cDetailing::GetOneDetailedSlab_OneDetailingOutput_StripInfo ( long DetailingOutputIndex, long StripIndex, BSTR * Name, BSTR * LayerName, BSTR * StripType, long * NumberRegions ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4008\x4008\x4008\x4003", DetailingOutputIndex, StripIndex, Name, LayerName, StripType, NumberRegions);
    return _result;
}

#pragma implementation_key(1043)
inline long ETABSv1::cDetailing::GetOneDetailedSlab_OneDetailingOutput_StripGUID ( long DetailingOutputIndex, long StripIndex, BSTR * Guid_ETABS ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4008", DetailingOutputIndex, StripIndex, Guid_ETABS);
    return _result;
}

#pragma implementation_key(1044)
inline long ETABSv1::cDetailing::GetOneDetailedSlab_OneDetailingOutput_OneStrip_OneDetailingRegionInfo ( long DetailingOutputIndex, long StripIndex, long DetailingRegionIndex, double * X1, double * Y1, double * X2, double * Y2, long * NumberTopBars, long * NumberBottomBars ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x4005\x4005\x4005\x4005\x4003\x4003", DetailingOutputIndex, StripIndex, DetailingRegionIndex, X1, Y1, X2, Y2, NumberTopBars, NumberBottomBars);
    return _result;
}

#pragma implementation_key(1045)
inline long ETABSv1::cDetailing::GetOneDetailedSlab_OneDetailingOutput_OneStrip_OneDetailingRegion_OneTopRebarInfo ( long DetailingOutputIndex, long StripIndex, long DetailingRegionIndex, long TopRebarIndex, double * X1, double * Y1, double * X2, double * Y2, double * WidthRight, double * WidthLeft, double * Z, double * ReqAst, double * ProvAst ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", DetailingOutputIndex, StripIndex, DetailingRegionIndex, TopRebarIndex, X1, Y1, X2, Y2, WidthRight, WidthLeft, Z, ReqAst, ProvAst);
    return _result;
}

#pragma implementation_key(1046)
inline long ETABSv1::cDetailing::GetOneDetailedSlab_OneDetailingOutput_OneStrip_OneDetailingRegion_OneBottomRebarInfo ( long DetailingOutputIndex, long StripIndex, long DetailingRegionIndex, long BottomRebarIndex, double * X1, double * Y1, double * X2, double * Y2, double * WidthRight, double * WidthLeft, double * Z, double * ReqAst, double * ProvAst ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", DetailingOutputIndex, StripIndex, DetailingRegionIndex, BottomRebarIndex, X1, Y1, X2, Y2, WidthRight, WidthLeft, Z, ReqAst, ProvAst);
    return _result;
}

#pragma implementation_key(1047)
inline long ETABSv1::cDetailing::GetOneDetailedSlab_OneDetailingOutput_OneStrip_OneDetailingRegion_OneTopRebar_Bar1Info ( long DetailingOutputIndex, long StripIndex, long DetailingRegionIndex, long TopRebarIndex, BSTR * GUID, BSTR * PlaceCode, double * Dia, BSTR * Size, long * Number, double * StartDist, double * EndDist, long * StartBend, long * EndBend, BSTR * Material ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x4008\x4008\x4005\x4008\x4003\x4005\x4005\x4003\x4003\x4008", DetailingOutputIndex, StripIndex, DetailingRegionIndex, TopRebarIndex, GUID, PlaceCode, Dia, Size, Number, StartDist, EndDist, StartBend, EndBend, Material);
    return _result;
}

#pragma implementation_key(1048)
inline long ETABSv1::cDetailing::GetOneDetailedSlab_OneDetailingOutput_OneStrip_OneDetailingRegion_OneTopRebar_Bar2Info ( long DetailingOutputIndex, long StripIndex, long DetailingRegionIndex, long TopRebarIndex, BSTR * GUID, BSTR * PlaceCode, double * Dia, BSTR * Size, long * Number, double * StartDist, double * EndDist, long * StartBend, long * EndBend, BSTR * Material ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x4008\x4008\x4005\x4008\x4003\x4005\x4005\x4003\x4003\x4008", DetailingOutputIndex, StripIndex, DetailingRegionIndex, TopRebarIndex, GUID, PlaceCode, Dia, Size, Number, StartDist, EndDist, StartBend, EndBend, Material);
    return _result;
}

#pragma implementation_key(1049)
inline long ETABSv1::cDetailing::GetOneDetailedSlab_OneDetailingOutput_OneStrip_OneDetailingRegion_OneBottomRebar_Bar1Info ( long DetailingOutputIndex, long StripIndex, long DetailingRegionIndex, long BottomRebarIndex, BSTR * GUID, BSTR * PlaceCode, double * Dia, BSTR * Size, long * Number, double * StartDist, double * EndDist, long * StartBend, long * EndBend, BSTR * Material ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x4008\x4008\x4005\x4008\x4003\x4005\x4005\x4003\x4003\x4008", DetailingOutputIndex, StripIndex, DetailingRegionIndex, BottomRebarIndex, GUID, PlaceCode, Dia, Size, Number, StartDist, EndDist, StartBend, EndBend, Material);
    return _result;
}

#pragma implementation_key(1050)
inline long ETABSv1::cDetailing::GetOneDetailedSlab_OneDetailingOutput_OneStrip_OneDetailingRegion_OneBottomRebar_Bar2Info ( long DetailingOutputIndex, long StripIndex, long DetailingRegionIndex, long BottomRebarIndex, BSTR * GUID, BSTR * PlaceCode, double * Dia, BSTR * Size, long * Number, double * StartDist, double * EndDist, long * StartBend, long * EndBend, BSTR * Material ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x4008\x4008\x4005\x4008\x4003\x4005\x4005\x4003\x4003\x4008", DetailingOutputIndex, StripIndex, DetailingRegionIndex, BottomRebarIndex, GUID, PlaceCode, Dia, Size, Number, StartDist, EndDist, StartBend, EndBend, Material);
    return _result;
}

#pragma implementation_key(1051)
inline long ETABSv1::cDetailing::GetNumberDetailedWallStacks ( long * NumberWallStacks ) {
    long _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", NumberWallStacks);
    return _result;
}

#pragma implementation_key(1052)
inline long ETABSv1::cDetailing::GetDetailed_OneWallStack ( long WallStackIndex, BSTR * GUID, long * TowerID, long * NumberPiers, long * NUmberSpandrels ) {
    long _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008\x4003\x4003\x4003", WallStackIndex, GUID, TowerID, NumberPiers, NUmberSpandrels);
    return _result;
}

#pragma implementation_key(1053)
inline long ETABSv1::cDetailing::GetDetailedWall_OneWallStack_OnePierOutputInfo ( long WallStackIndex, long PierIndex, long * StoryID, BSTR * ETABSStoryName, long * NumberDesignLegs ) {
    long _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x4008\x4003", WallStackIndex, PierIndex, StoryID, ETABSStoryName, NumberDesignLegs);
    return _result;
}

#pragma implementation_key(1054)
inline long ETABSv1::cDetailing::GetDetailedWall_OneWallStack_OnePier_OneDesignLegOutputInfo ( long WallStackIndex, long PierIndex, long DesignLegIndex, BSTR * GUID, BSTR * PierLabel, double * X1, double * Y1, double * z1, double * X2, double * Y2, double * z2, double * ZLevel, long * NumberVerticalBars, long * NumberHorizontalBars, long * TotalAreaObjects, SAFEARRAY * * AreaObjectNames ) {
    long _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4003\x4003\x4003\x6008", WallStackIndex, PierIndex, DesignLegIndex, GUID, PierLabel, X1, Y1, z1, X2, Y2, z2, ZLevel, NumberVerticalBars, NumberHorizontalBars, TotalAreaObjects, AreaObjectNames);
    return _result;
}

#pragma implementation_key(1055)
inline long ETABSv1::cDetailing::GetDetailedWall_OneWallStack_OnePier_OneDesignLeg_OneVerticalBarInfo ( long WallStackIndex, long PierIndex, long DesignLegIndex, long VerticalBarIndex, BSTR * GUID, double * BarSizeFirst_Dia, double * BarSizeFirst_Area, double * BarSizeFirst_Fy, BSTR * BarSizeFirst_Notation, double * BarSizeLast_Dia, double * BarSizeLast_Area, double * BarSizeLast_Fy, BSTR * BarSizeLast_Notation, double * BarSizeOthers_Dia, double * BarSizeOthers_Area, double * BarSizeOthers_Fy, BSTR * BarSizeOthers_Notation, long * Number, double * StartX, double * StartY, double * EndX, double * EndY, long * StartBarBend, long * EndBarBend, double * OffsetZ, double * BarLength, long * LocationCode ) {
    long _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x4008\x4005\x4005\x4005\x4008\x4005\x4005\x4005\x4008\x4005\x4005\x4005\x4008\x4003\x4005\x4005\x4005\x4005\x4003\x4003\x4005\x4005\x4003", WallStackIndex, PierIndex, DesignLegIndex, VerticalBarIndex, GUID, BarSizeFirst_Dia, BarSizeFirst_Area, BarSizeFirst_Fy, BarSizeFirst_Notation, BarSizeLast_Dia, BarSizeLast_Area, BarSizeLast_Fy, BarSizeLast_Notation, BarSizeOthers_Dia, BarSizeOthers_Area, BarSizeOthers_Fy, BarSizeOthers_Notation, Number, StartX, StartY, EndX, EndY, StartBarBend, EndBarBend, OffsetZ, BarLength, LocationCode);
    return _result;
}

#pragma implementation_key(1056)
inline long ETABSv1::cDetailing::GetDetailedWall_OneWallStack_OnePier_OneDesignLeg_OneTieBarInfo ( long WallStackIndex, long PierIndex, long DesignLegIndex, long TieBarIndex, BSTR * GUID, double * BarSize_Dia, double * BarSize_Area, double * BarSize_Fy, BSTR * BarSize_Notation, double * Spacing, double * StartZ, double * EndZ, long * TieShape, long * NumberOfTiePlines ) {
    long _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x4008\x4005\x4005\x4005\x4008\x4005\x4005\x4005\x4003\x4003", WallStackIndex, PierIndex, DesignLegIndex, TieBarIndex, GUID, BarSize_Dia, BarSize_Area, BarSize_Fy, BarSize_Notation, Spacing, StartZ, EndZ, TieShape, NumberOfTiePlines);
    return _result;
}

#pragma implementation_key(1057)
inline long ETABSv1::cDetailing::GetDetailedWall_OneWallStack_OnePier_OneDesignLeg_OneTieBar_OneTiePlineInfo ( long WallStackIndex, long PierIndex, long DesignLegIndex, long TieBarIndex, long TiePLineIndex, double * Dia, long * NumberPoints, double * ZoneLength, long * LocationCode ) {
    long _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x4005\x4003\x4005\x4003", WallStackIndex, PierIndex, DesignLegIndex, TieBarIndex, TiePLineIndex, Dia, NumberPoints, ZoneLength, LocationCode);
    return _result;
}

#pragma implementation_key(1058)
inline long ETABSv1::cDetailing::GetDetailedWall_OnePier_OneDesignLeg_OneTieBar_OneTiePline_OnePoint ( long WallStackIndex, long PierIndex, long DesignLegIndex, long TieBarIndex, long TiePLineIndex, long TPLinePointIndex, double * X, double * Y, double * Z ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x4005\x4005\x4005", WallStackIndex, PierIndex, DesignLegIndex, TieBarIndex, TiePLineIndex, TPLinePointIndex, X, Y, Z);
    return _result;
}

#pragma implementation_key(1059)
inline long ETABSv1::cDetailing::GetDetailedWall_OneWallStack_OneSpandrelOutputInfo ( long WallStackIndex, long SpandrelIndex, BSTR * GUID, BSTR * Name, double * Height, double * Width, double * Thickness, double * CoverLongBar, double * CoverStirrups, double * X1, double * Y1, double * z1, double * X2, double * Y2, double * z2, long * NumberLongBars, long * NumberStirrups, long * TotalAreaObjects, SAFEARRAY * * AreaObjectNames ) {
    long _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4008\x4008\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4003\x4003\x4003\x6008", WallStackIndex, SpandrelIndex, GUID, Name, Height, Width, Thickness, CoverLongBar, CoverStirrups, X1, Y1, z1, X2, Y2, z2, NumberLongBars, NumberStirrups, TotalAreaObjects, AreaObjectNames);
    return _result;
}

#pragma implementation_key(1060)
inline long ETABSv1::cDetailing::GetDetailedWall_OneWallStack_OneSpandrel_OneLongBarInfo ( long WallStackIndex, long SpandrelIndex, long LongBarIndex, double * BarSize_Dia, double * BarSize_Area, double * BarSize_Fy, BSTR * BarSize_Notation, long * NumberPoints, SAFEARRAY * * X, SAFEARRAY * * Y, SAFEARRAY * * Z, long * StartType, long * EndType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x4005\x4005\x4005\x4008\x4003\x6005\x6005\x6005\x4003\x4003", WallStackIndex, SpandrelIndex, LongBarIndex, BarSize_Dia, BarSize_Area, BarSize_Fy, BarSize_Notation, NumberPoints, X, Y, Z, StartType, EndType);
    return _result;
}

#pragma implementation_key(1061)
inline long ETABSv1::cDetailing::GetDetailedWall_OneWallStack_OneSpandrel_OneStirrupsInfo ( long WallStackIndex, long SpandrelIndex, long StirrupsIndex, double * BarSize_Dia, double * BarSize_Area, double * BarSize_Fy, BSTR * BarSize_Notation, double * X1, double * X2, double * Spacing, long * NumberLegs ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x4005\x4005\x4005\x4008\x4005\x4005\x4005\x4003", WallStackIndex, SpandrelIndex, StirrupsIndex, BarSize_Dia, BarSize_Area, BarSize_Fy, BarSize_Notation, X1, X2, Spacing, NumberLegs);
    return _result;
}

#pragma implementation_key(1062)
inline long ETABSv1::cDetailing::GetDetailedBeamLines_1 ( long * NumberItems, SAFEARRAY * * TowerNames, SAFEARRAY * * StoryNames, SAFEARRAY * * BeamLineIDs ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008", NumberItems, TowerNames, StoryNames, BeamLineIDs);
    return _result;
}

#pragma implementation_key(1063)
inline long ETABSv1::cDetailing::GetDetailedBeamLineData_2 ( _bstr_t TowerName, _bstr_t StoryName, _bstr_t BeamLineID, long * NumberOfObjects, SAFEARRAY * * ObjectUniqueNames, long * NumberSpans, SAFEARRAY * * SpanLength, SAFEARRAY * * NumLongBars, SAFEARRAY * * LongBarGUID, SAFEARRAY * * LongBarDiameter, SAFEARRAY * * LongBarNotation, SAFEARRAY * * LongBarStartDist, SAFEARRAY * * LongBarStartBend, SAFEARRAY * * LongBarEndBend, SAFEARRAY * * LongBarLength, SAFEARRAY * * LongBarNumLayers, SAFEARRAY * * NumTieBars, SAFEARRAY * * NumTieVertLegs, SAFEARRAY * * TieBarGUID, SAFEARRAY * * TieBarDiameter, SAFEARRAY * * TieBarNotation, SAFEARRAY * * TieBarStartDist, SAFEARRAY * * TieBarSpacing, SAFEARRAY * * TieBarType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0008\x4003\x6008\x4003\x6005\x6003\x6008\x6005\x6008\x6005\x6003\x6003\x6005\x6003\x6003\x6003\x6008\x6005\x6008\x6005\x6005\x6003", (BSTR)TowerName, (BSTR)StoryName, (BSTR)BeamLineID, NumberOfObjects, ObjectUniqueNames, NumberSpans, SpanLength, NumLongBars, LongBarGUID, LongBarDiameter, LongBarNotation, LongBarStartDist, LongBarStartBend, LongBarEndBend, LongBarLength, LongBarNumLayers, NumTieBars, NumTieVertLegs, TieBarGUID, TieBarDiameter, TieBarNotation, TieBarStartDist, TieBarSpacing, TieBarType);
    return _result;
}

#pragma implementation_key(1064)
inline long ETABSv1::cDetailing::GetSimilarBeamLines_1 ( _bstr_t TowerName, _bstr_t StoryName, _bstr_t BeamLineID, long * NumberSimilarBeams, SAFEARRAY * * NumberUniqueObjects, SAFEARRAY * * ObjectUniqueNames ) {
    long _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0008\x4003\x6003\x6008", (BSTR)TowerName, (BSTR)StoryName, (BSTR)BeamLineID, NumberSimilarBeams, NumberUniqueObjects, ObjectUniqueNames);
    return _result;
}

//
// dispinterface cEditFrame wrapper method implementations
//

#pragma implementation_key(1065)
inline long ETABSv1::cEditFrame::ChangeConnectivity ( _bstr_t Name, _bstr_t Point1, _bstr_t Point2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0008", (BSTR)Name, (BSTR)Point1, (BSTR)Point2);
    return _result;
}

//
// dispinterface cEditGeneral wrapper method implementations
//

#pragma implementation_key(1066)
inline long ETABSv1::cEditGeneral::Move ( double DX, double DY, double DZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005", DX, DY, DZ);
    return _result;
}

//
// dispinterface cFile wrapper method implementations
//

#pragma implementation_key(1067)
inline long ETABSv1::cFile::NewBlank ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1068)
inline long ETABSv1::cFile::OpenFile ( _bstr_t FileName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)FileName);
    return _result;
}

#pragma implementation_key(1069)
inline long ETABSv1::cFile::Save ( _bstr_t FileName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)FileName);
    return _result;
}

#pragma implementation_key(1070)
inline long ETABSv1::cFile::GetFilePath ( BSTR * FilePath ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008", FilePath);
    return _result;
}

#pragma implementation_key(1071)
inline long ETABSv1::cFile::NewSteelDeck ( long NumberStorys, double TypicalStoryHeight, double BottomStoryHeight, long NumberLinesX, long NumberLinesY, double SpacingX, double SpacingY ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0003\x0003\x0005\x0005", NumberStorys, TypicalStoryHeight, BottomStoryHeight, NumberLinesX, NumberLinesY, SpacingX, SpacingY);
    return _result;
}

#pragma implementation_key(1072)
inline long ETABSv1::cFile::NewGridOnly ( long NumberStorys, double TypicalStoryHeight, double BottomStoryHeight, long NumberLinesX, long NumberLinesY, double SpacingX, double SpacingY ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0003\x0003\x0005\x0005", NumberStorys, TypicalStoryHeight, BottomStoryHeight, NumberLinesX, NumberLinesY, SpacingX, SpacingY);
    return _result;
}

//
// dispinterface cDatabaseTables wrapper method implementations
//

#pragma implementation_key(1073)
inline long ETABSv1::cDatabaseTables::ApplyEditedTables ( VARIANT_BOOL FillImportLog, long * NumFatalErrors, long * NumErrorMsgs, long * NumWarnMsgs, long * NumInfoMsgs, BSTR * ImportLog ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x4003\x4003\x4003\x4003\x4008", FillImportLog, NumFatalErrors, NumErrorMsgs, NumWarnMsgs, NumInfoMsgs, ImportLog);
    return _result;
}

#pragma implementation_key(1074)
inline long ETABSv1::cDatabaseTables::CancelTableEditing ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1075)
inline long ETABSv1::cDatabaseTables::GetAllFieldsInTable ( _bstr_t TableKey, long * TableVersion, long * NumberFields, SAFEARRAY * * FieldKey, SAFEARRAY * * FieldName, SAFEARRAY * * Description, SAFEARRAY * * UnitsString, SAFEARRAY * * IsImportable ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4003\x6008\x6008\x6008\x6008\x600b", (BSTR)TableKey, TableVersion, NumberFields, FieldKey, FieldName, Description, UnitsString, IsImportable);
    return _result;
}

#pragma implementation_key(1076)
inline long ETABSv1::cDatabaseTables::GetAllTables ( long * NumberTables, SAFEARRAY * * TableKey, SAFEARRAY * * TableName, SAFEARRAY * * ImportType, SAFEARRAY * * IsEmpty ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6003\x600b", NumberTables, TableKey, TableName, ImportType, IsEmpty);
    return _result;
}

#pragma implementation_key(1077)
inline long ETABSv1::cDatabaseTables::GetAvailableTables ( long * NumberTables, SAFEARRAY * * TableKey, SAFEARRAY * * TableName, SAFEARRAY * * ImportType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6003", NumberTables, TableKey, TableName, ImportType);
    return _result;
}

#pragma implementation_key(1078)
inline long ETABSv1::cDatabaseTables::GetLoadCasesSelectedForDisplay ( long * NumberSelectedLoadCases, SAFEARRAY * * LoadCaseList ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberSelectedLoadCases, LoadCaseList);
    return _result;
}

#pragma implementation_key(1079)
inline long ETABSv1::cDatabaseTables::GetLoadCombinationsSelectedForDisplay ( long * NumberSelectedLoadCombinations, SAFEARRAY * * LoadCombinationList ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberSelectedLoadCombinations, LoadCombinationList);
    return _result;
}

#pragma implementation_key(1080)
inline long ETABSv1::cDatabaseTables::GetLoadPatternsSelectedForDisplay ( long * NumberSelectedLoadPatterns, SAFEARRAY * * LoadPatternList ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberSelectedLoadPatterns, LoadPatternList);
    return _result;
}

#pragma implementation_key(1081)
inline long ETABSv1::cDatabaseTables::GetTableForDisplayArray ( _bstr_t TableKey, SAFEARRAY * * FieldKeyList, _bstr_t GroupName, long * TableVersion, SAFEARRAY * * FieldsKeysIncluded, long * NumberRecords, SAFEARRAY * * TableData ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x0008\x4003\x6008\x4003\x6008", (BSTR)TableKey, FieldKeyList, (BSTR)GroupName, TableVersion, FieldsKeysIncluded, NumberRecords, TableData);
    return _result;
}

#pragma implementation_key(1082)
inline long ETABSv1::cDatabaseTables::GetTableForDisplayCSVFile ( _bstr_t TableKey, SAFEARRAY * * FieldKeyList, _bstr_t GroupName, long * TableVersion, _bstr_t csvFilePath, _bstr_t sepChar ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x0008\x4003\x0008\x0008", (BSTR)TableKey, FieldKeyList, (BSTR)GroupName, TableVersion, (BSTR)csvFilePath, (BSTR)sepChar);
    return _result;
}

#pragma implementation_key(1083)
inline long ETABSv1::cDatabaseTables::GetTableForDisplayCSVString ( _bstr_t TableKey, SAFEARRAY * * FieldKeyList, _bstr_t GroupName, long * TableVersion, BSTR * csvString, _bstr_t sepChar ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x0008\x4003\x4008\x0008", (BSTR)TableKey, FieldKeyList, (BSTR)GroupName, TableVersion, csvString, (BSTR)sepChar);
    return _result;
}

#pragma implementation_key(1084)
inline long ETABSv1::cDatabaseTables::GetTableForDisplayXMLString ( _bstr_t TableKey, SAFEARRAY * * FieldKeyList, _bstr_t GroupName, VARIANT_BOOL IncludeSchema, long * TableVersion, BSTR * XMLTableData ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6008\x0008\x000b\x4003\x4008", (BSTR)TableKey, FieldKeyList, (BSTR)GroupName, IncludeSchema, TableVersion, XMLTableData);
    return _result;
}

#pragma implementation_key(1085)
inline long ETABSv1::cDatabaseTables::GetTableForEditingArray ( _bstr_t TableKey, _bstr_t GroupName, long * TableVersion, SAFEARRAY * * FieldsKeysIncluded, long * NumberRecords, SAFEARRAY * * TableData ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4003\x6008\x4003\x6008", (BSTR)TableKey, (BSTR)GroupName, TableVersion, FieldsKeysIncluded, NumberRecords, TableData);
    return _result;
}

#pragma implementation_key(1086)
inline long ETABSv1::cDatabaseTables::GetTableForEditingCSVFile ( _bstr_t TableKey, _bstr_t GroupName, long * TableVersion, _bstr_t csvFilePath, _bstr_t sepChar ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4003\x0008\x0008", (BSTR)TableKey, (BSTR)GroupName, TableVersion, (BSTR)csvFilePath, (BSTR)sepChar);
    return _result;
}

#pragma implementation_key(1087)
inline long ETABSv1::cDatabaseTables::GetTableForEditingCSVString ( _bstr_t TableKey, _bstr_t GroupName, long * TableVersion, BSTR * csvString, _bstr_t sepChar ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4003\x4008\x0008", (BSTR)TableKey, (BSTR)GroupName, TableVersion, csvString, (BSTR)sepChar);
    return _result;
}

#pragma implementation_key(1088)
inline long ETABSv1::cDatabaseTables::SetLoadCasesSelectedForDisplay ( SAFEARRAY * * LoadCaseList ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x6008", LoadCaseList);
    return _result;
}

#pragma implementation_key(1089)
inline long ETABSv1::cDatabaseTables::SetLoadCombinationsSelectedForDisplay ( SAFEARRAY * * LoadCombinationList ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x6008", LoadCombinationList);
    return _result;
}

#pragma implementation_key(1090)
inline long ETABSv1::cDatabaseTables::SetLoadPatternsSelectedForDisplay ( SAFEARRAY * * LoadPatternList ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x6008", LoadPatternList);
    return _result;
}

#pragma implementation_key(1091)
inline long ETABSv1::cDatabaseTables::SetTableForEditingArray ( _bstr_t TableKey, long * TableVersion, SAFEARRAY * * FieldsKeysIncluded, long NumberRecords, SAFEARRAY * * TableData ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x0003\x6008", (BSTR)TableKey, TableVersion, FieldsKeysIncluded, NumberRecords, TableData);
    return _result;
}

#pragma implementation_key(1092)
inline long ETABSv1::cDatabaseTables::SetTableForEditingCSVFile ( _bstr_t TableKey, long * TableVersion, _bstr_t csvFilePath, _bstr_t sepChar ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x0008\x0008", (BSTR)TableKey, TableVersion, (BSTR)csvFilePath, (BSTR)sepChar);
    return _result;
}

#pragma implementation_key(1093)
inline long ETABSv1::cDatabaseTables::SetTableForEditingCSVString ( _bstr_t TableKey, long * TableVersion, BSTR * csvString, _bstr_t sepChar ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4008\x0008", (BSTR)TableKey, TableVersion, csvString, (BSTR)sepChar);
    return _result;
}

#pragma implementation_key(1094)
inline long ETABSv1::cDatabaseTables::ShowTablesInExcel ( SAFEARRAY * * TableKeyList, long WindowHandle ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x6008\x0003", TableKeyList, WindowHandle);
    return _result;
}

#pragma implementation_key(1095)
inline long ETABSv1::cDatabaseTables::GetObsoleteTableKeyList ( long * NumberTableKeys, SAFEARRAY * * TableKeyList, SAFEARRAY * * NotesList ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008", NumberTableKeys, TableKeyList, NotesList);
    return _result;
}

#pragma implementation_key(1096)
inline long ETABSv1::cDatabaseTables::GetOutputOptionsForDisplay ( VARIANT_BOOL * IsUserBaseReactionLocation, double * UserBaseReactionX, double * UserBaseReactionY, double * UserBaseReactionZ, VARIANT_BOOL * IsAllModes, long * StartMode, long * EndMode, VARIANT_BOOL * IsAllBucklingModes, long * StartBucklingMode, long * EndBucklingMode, long * MultistepStatic, long * NonlinearStatic, long * ModalHistory, long * DirectHistory, long * Combo ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400b\x4005\x4005\x4005\x400b\x4003\x4003\x400b\x4003\x4003\x4003\x4003\x4003\x4003\x4003", IsUserBaseReactionLocation, UserBaseReactionX, UserBaseReactionY, UserBaseReactionZ, IsAllModes, StartMode, EndMode, IsAllBucklingModes, StartBucklingMode, EndBucklingMode, MultistepStatic, NonlinearStatic, ModalHistory, DirectHistory, Combo);
    return _result;
}

#pragma implementation_key(1097)
inline long ETABSv1::cDatabaseTables::SetOutputOptionsForDisplay ( VARIANT_BOOL IsUserBaseReactionLocation, double UserBaseReactionX, double UserBaseReactionY, double UserBaseReactionZ, VARIANT_BOOL IsAllModes, long StartMode, long EndMode, VARIANT_BOOL IsAllBucklingModes, long StartBucklingMode, long EndBucklingMode, long MultistepStatic, long NonlinearStatic, long ModalHistory, long DirectHistory, long Combo ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0005\x0005\x0005\x000b\x0003\x0003\x000b\x0003\x0003\x0003\x0003\x0003\x0003\x0003", IsUserBaseReactionLocation, UserBaseReactionX, UserBaseReactionY, UserBaseReactionZ, IsAllModes, StartMode, EndMode, IsAllBucklingModes, StartBucklingMode, EndBucklingMode, MultistepStatic, NonlinearStatic, ModalHistory, DirectHistory, Combo);
    return _result;
}

//
// dispinterface cAreaObj wrapper method implementations
//

#pragma implementation_key(1098)
inline long ETABSv1::cAreaObj::AddByCoord ( long NumberPoints, SAFEARRAY * * X, SAFEARRAY * * Y, SAFEARRAY * * Z, BSTR * Name, _bstr_t PropName, _bstr_t UserName, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x6005\x6005\x6005\x4008\x0008\x0008\x0008", NumberPoints, X, Y, Z, Name, (BSTR)PropName, (BSTR)UserName, (BSTR)CSys);
    return _result;
}

#pragma implementation_key(1099)
inline long ETABSv1::cAreaObj::AddByPoint ( long NumberPoints, SAFEARRAY * * Point, BSTR * Name, _bstr_t PropName, _bstr_t UserName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x6008\x4008\x0008\x0008", NumberPoints, Point, Name, (BSTR)PropName, (BSTR)UserName);
    return _result;
}

#pragma implementation_key(1100)
inline long ETABSv1::cAreaObj::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(1101)
inline long ETABSv1::cAreaObj::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1102)
inline long ETABSv1::cAreaObj::Delete ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1103)
inline long ETABSv1::cAreaObj::DeleteLoadTemperature ( _bstr_t Name, _bstr_t LoadPat, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, ItemType);
    return _result;
}

#pragma implementation_key(1104)
inline long ETABSv1::cAreaObj::DeleteLoadUniform ( _bstr_t Name, _bstr_t LoadPat, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, ItemType);
    return _result;
}

#pragma implementation_key(1105)
inline long ETABSv1::cAreaObj::DeleteLoadUniformToFrame ( _bstr_t Name, _bstr_t LoadPat, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, ItemType);
    return _result;
}

#pragma implementation_key(1106)
inline long ETABSv1::cAreaObj::DeleteLoadWindPressure ( _bstr_t Name, _bstr_t LoadPat, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, ItemType);
    return _result;
}

#pragma implementation_key(1107)
inline long ETABSv1::cAreaObj::DeleteMass ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1108)
inline long ETABSv1::cAreaObj::DeleteModifiers ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1109)
inline long ETABSv1::cAreaObj::DeleteSpring ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1110)
inline long ETABSv1::cAreaObj::GetEdgeConstraint ( _bstr_t Name, VARIANT_BOOL * ConstraintExists ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, ConstraintExists);
    return _result;
}

#pragma implementation_key(1111)
inline long ETABSv1::cAreaObj::GetElm ( _bstr_t Name, long * NElm, SAFEARRAY * * Elm ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)Name, NElm, Elm);
    return _result;
}

#pragma implementation_key(1112)
inline long ETABSv1::cAreaObj::GetGUID ( _bstr_t Name, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, GUID);
    return _result;
}

#pragma implementation_key(1113)
inline long ETABSv1::cAreaObj::GetLoadTemperature ( _bstr_t Name, long * NumberItems, SAFEARRAY * * AreaName, SAFEARRAY * * LoadPat, SAFEARRAY * * MyType, SAFEARRAY * * Value, SAFEARRAY * * PatternName, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6005\x6008\x0003", (BSTR)Name, NumberItems, AreaName, LoadPat, MyType, Value, PatternName, ItemType);
    return _result;
}

#pragma implementation_key(1114)
inline long ETABSv1::cAreaObj::GetLoadUniform ( _bstr_t Name, long * NumberItems, SAFEARRAY * * AreaName, SAFEARRAY * * LoadPat, SAFEARRAY * * CSys, SAFEARRAY * * Dir, SAFEARRAY * * Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6008\x6003\x6005\x0003", (BSTR)Name, NumberItems, AreaName, LoadPat, CSys, Dir, Value, ItemType);
    return _result;
}

#pragma implementation_key(1115)
inline long ETABSv1::cAreaObj::GetLoadUniformToFrame ( _bstr_t Name, long * NumberItems, SAFEARRAY * * AreaName, SAFEARRAY * * LoadPat, SAFEARRAY * * CSys, SAFEARRAY * * Dir, SAFEARRAY * * Value, SAFEARRAY * * DistType, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6008\x6003\x6005\x6003\x0003", (BSTR)Name, NumberItems, AreaName, LoadPat, CSys, Dir, Value, DistType, ItemType);
    return _result;
}

#pragma implementation_key(1116)
inline long ETABSv1::cAreaObj::GetLoadWindPressure ( _bstr_t Name, long * NumberItems, SAFEARRAY * * AreaName, SAFEARRAY * * LoadPat, SAFEARRAY * * MyType, SAFEARRAY * * Cp, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6005\x0003", (BSTR)Name, NumberItems, AreaName, LoadPat, MyType, Cp, ItemType);
    return _result;
}

#pragma implementation_key(1117)
inline long ETABSv1::cAreaObj::GetLocalAxes ( _bstr_t Name, double * Ang, VARIANT_BOOL * Advanced ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x400b", (BSTR)Name, Ang, Advanced);
    return _result;
}

#pragma implementation_key(1118)
inline long ETABSv1::cAreaObj::GetMass ( _bstr_t Name, double * MassOverL2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)Name, MassOverL2);
    return _result;
}

#pragma implementation_key(1119)
inline long ETABSv1::cAreaObj::GetMaterialOverwrite ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(1120)
inline long ETABSv1::cAreaObj::GetModifiers ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(1121)
inline long ETABSv1::cAreaObj::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(1122)
inline long ETABSv1::cAreaObj::GetOpening ( _bstr_t Name, VARIANT_BOOL * IsOpening ) {
    long _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, IsOpening);
    return _result;
}

#pragma implementation_key(1123)
inline long ETABSv1::cAreaObj::GetPoints ( _bstr_t Name, long * NumberPoints, SAFEARRAY * * Point ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)Name, NumberPoints, Point);
    return _result;
}

#pragma implementation_key(1124)
inline long ETABSv1::cAreaObj::GetProperty ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(1125)
inline long ETABSv1::cAreaObj::GetSelected ( _bstr_t Name, VARIANT_BOOL * Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(1126)
inline long ETABSv1::cAreaObj::GetSelectedEdge ( _bstr_t Name, long * NumberEdges, SAFEARRAY * * Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x600b", (BSTR)Name, NumberEdges, Selected);
    return _result;
}

#pragma implementation_key(1127)
inline long ETABSv1::cAreaObj::GetTransformationMatrix ( _bstr_t Name, SAFEARRAY * * Value, VARIANT_BOOL IsGlobal ) {
    long _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x000b", (BSTR)Name, Value, IsGlobal);
    return _result;
}

#pragma implementation_key(1128)
inline long ETABSv1::cAreaObj::SetEdgeConstraint ( _bstr_t Name, VARIANT_BOOL ConstraintExists, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0003", (BSTR)Name, ConstraintExists, ItemType);
    return _result;
}

#pragma implementation_key(1129)
inline long ETABSv1::cAreaObj::SetGroupAssign ( _bstr_t Name, _bstr_t GroupName, VARIANT_BOOL Remove, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x000b\x0003", (BSTR)Name, (BSTR)GroupName, Remove, ItemType);
    return _result;
}

#pragma implementation_key(1130)
inline long ETABSv1::cAreaObj::SetGUID ( _bstr_t Name, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(1131)
inline long ETABSv1::cAreaObj::SetLoadTemperature ( _bstr_t Name, _bstr_t LoadPat, long MyType, double Value, _bstr_t PatternName, VARIANT_BOOL Replace, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003\x0005\x0008\x000b\x0003", (BSTR)Name, (BSTR)LoadPat, MyType, Value, (BSTR)PatternName, Replace, ItemType);
    return _result;
}

#pragma implementation_key(1132)
inline long ETABSv1::cAreaObj::SetLoadUniform ( _bstr_t Name, _bstr_t LoadPat, double Value, long Dir, VARIANT_BOOL Replace, _bstr_t CSys, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0003\x000b\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, Value, Dir, Replace, (BSTR)CSys, ItemType);
    return _result;
}

#pragma implementation_key(1133)
inline long ETABSv1::cAreaObj::SetLoadUniformToFrame ( _bstr_t Name, _bstr_t LoadPat, double Value, long Dir, long DistType, VARIANT_BOOL Replace, _bstr_t CSys, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0005\x0003\x0003\x000b\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, Value, Dir, DistType, Replace, (BSTR)CSys, ItemType);
    return _result;
}

#pragma implementation_key(1134)
inline long ETABSv1::cAreaObj::SetLoadWindPressure ( _bstr_t Name, _bstr_t LoadPat, long MyType, double Cp, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003\x0005\x0003", (BSTR)Name, (BSTR)LoadPat, MyType, Cp, ItemType);
    return _result;
}

#pragma implementation_key(1135)
inline long ETABSv1::cAreaObj::SetLocalAxes ( _bstr_t Name, double Ang, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0003", (BSTR)Name, Ang, ItemType);
    return _result;
}

#pragma implementation_key(1136)
inline long ETABSv1::cAreaObj::SetMass ( _bstr_t Name, double MassOverL2, VARIANT_BOOL Replace, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x000b\x0003", (BSTR)Name, MassOverL2, Replace, ItemType);
    return _result;
}

#pragma implementation_key(1137)
inline long ETABSv1::cAreaObj::SetMaterialOverwrite ( _bstr_t Name, _bstr_t PropName, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)PropName, ItemType);
    return _result;
}

#pragma implementation_key(1138)
inline long ETABSv1::cAreaObj::SetModifiers ( _bstr_t Name, SAFEARRAY * * Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x0003", (BSTR)Name, Value, ItemType);
    return _result;
}

#pragma implementation_key(1139)
inline long ETABSv1::cAreaObj::SetOpening ( _bstr_t Name, VARIANT_BOOL IsOpening, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0003", (BSTR)Name, IsOpening, ItemType);
    return _result;
}

#pragma implementation_key(1140)
inline long ETABSv1::cAreaObj::SetProperty ( _bstr_t Name, _bstr_t PropName, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)PropName, ItemType);
    return _result;
}

#pragma implementation_key(1141)
inline long ETABSv1::cAreaObj::SetSelected ( _bstr_t Name, VARIANT_BOOL Selected, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0003", (BSTR)Name, Selected, ItemType);
    return _result;
}

#pragma implementation_key(1142)
inline long ETABSv1::cAreaObj::SetSelectedEdge ( _bstr_t Name, long EdgeNum, VARIANT_BOOL Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000b", (BSTR)Name, EdgeNum, Selected);
    return _result;
}

#pragma implementation_key(1143)
inline long ETABSv1::cAreaObj::GetGroupAssign ( _bstr_t Name, long * NumberGroups, SAFEARRAY * * Groups ) {
    long _result = 0;
    _com_dispatch_method(this, 0x59, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)Name, NumberGroups, Groups);
    return _result;
}

#pragma implementation_key(1144)
inline long ETABSv1::cAreaObj::GetDesignOrientation ( _bstr_t Name, enum eAreaDesignOrientation * DesignOrientation ) {
    long _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, DesignOrientation);
    return _result;
}

#pragma implementation_key(1145)
inline long ETABSv1::cAreaObj::GetNameListOnStory ( _bstr_t StoryName, long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)StoryName, NumberNames, MyName);
    return _result;
}

#pragma implementation_key(1146)
inline long ETABSv1::cAreaObj::GetDiaphragm ( _bstr_t Name, BSTR * DiaphragmName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, DiaphragmName);
    return _result;
}

#pragma implementation_key(1147)
inline long ETABSv1::cAreaObj::SetDiaphragm ( _bstr_t Name, _bstr_t DiaphragmName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)DiaphragmName);
    return _result;
}

#pragma implementation_key(1148)
inline long ETABSv1::cAreaObj::GetLabelNameList ( long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * MyLabel, SAFEARRAY * * MyStory ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008", NumberNames, MyName, MyLabel, MyStory);
    return _result;
}

#pragma implementation_key(1149)
inline long ETABSv1::cAreaObj::GetLabelFromName ( _bstr_t Name, BSTR * Label, BSTR * Story ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008", (BSTR)Name, Label, Story);
    return _result;
}

#pragma implementation_key(1150)
inline long ETABSv1::cAreaObj::GetNameFromLabel ( _bstr_t Label, _bstr_t Story, BSTR * Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008", (BSTR)Label, (BSTR)Story, Name);
    return _result;
}

#pragma implementation_key(1151)
inline long ETABSv1::cAreaObj::GetRebarDataPier ( _bstr_t Name, long * NumberRebarLayers, SAFEARRAY * * LayerID, SAFEARRAY * * LayerType, SAFEARRAY * * ClearCover, SAFEARRAY * * BarSizeName, SAFEARRAY * * BarArea, SAFEARRAY * * BarSpacing, SAFEARRAY * * NumberBars, SAFEARRAY * * Confined, SAFEARRAY * * EndZoneLength, SAFEARRAY * * EndZoneThickness, SAFEARRAY * * EndZoneOffset ) {
    long _result = 0;
    _com_dispatch_method(this, 0x50, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6005\x6008\x6005\x6005\x6003\x600b\x6005\x6005\x6005", (BSTR)Name, NumberRebarLayers, LayerID, LayerType, ClearCover, BarSizeName, BarArea, BarSpacing, NumberBars, Confined, EndZoneLength, EndZoneThickness, EndZoneOffset);
    return _result;
}

#pragma implementation_key(1152)
inline long ETABSv1::cAreaObj::GetRebarDataSpandrel ( _bstr_t Name, long * NumberRebarLayers, SAFEARRAY * * LayerID, SAFEARRAY * * LayerType, SAFEARRAY * * ClearCover, SAFEARRAY * * BarSizeIndex, SAFEARRAY * * BarArea, SAFEARRAY * * BarSpacing, SAFEARRAY * * NumberBars, SAFEARRAY * * Confined ) {
    long _result = 0;
    _com_dispatch_method(this, 0x51, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6005\x6003\x6005\x6005\x6003\x600b", (BSTR)Name, NumberRebarLayers, LayerID, LayerType, ClearCover, BarSizeIndex, BarArea, BarSpacing, NumberBars, Confined);
    return _result;
}

#pragma implementation_key(1153)
inline long ETABSv1::cAreaObj::GetAllAreas ( long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * DesignOrientation, long * NumberBoundaryPts, SAFEARRAY * * PointDelimiter, SAFEARRAY * * PointNames, SAFEARRAY * * PointX, SAFEARRAY * * PointY, SAFEARRAY * * PointZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x52, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6003\x4003\x6003\x6008\x6005\x6005\x6005", NumberNames, MyName, DesignOrientation, NumberBoundaryPts, PointDelimiter, PointNames, PointX, PointY, PointZ);
    return _result;
}

#pragma implementation_key(1154)
inline long ETABSv1::cAreaObj::GetPier ( _bstr_t Name, BSTR * PierName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x53, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PierName);
    return _result;
}

#pragma implementation_key(1155)
inline long ETABSv1::cAreaObj::SetPier ( _bstr_t Name, _bstr_t PierName, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x54, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)PierName, ItemType);
    return _result;
}

#pragma implementation_key(1156)
inline long ETABSv1::cAreaObj::GetSpandrel ( _bstr_t Name, BSTR * SpandrelName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x55, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, SpandrelName);
    return _result;
}

#pragma implementation_key(1157)
inline long ETABSv1::cAreaObj::SetSpandrel ( _bstr_t Name, _bstr_t SpandrelName, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x56, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)SpandrelName, ItemType);
    return _result;
}

#pragma implementation_key(1158)
inline long ETABSv1::cAreaObj::GetSpringAssignment ( _bstr_t Name, BSTR * SpringProp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x57, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, SpringProp);
    return _result;
}

#pragma implementation_key(1159)
inline long ETABSv1::cAreaObj::SetSpringAssignment ( _bstr_t Name, _bstr_t SpringProp, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x58, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)SpringProp, ItemType);
    return _result;
}

#pragma implementation_key(1160)
inline long ETABSv1::cAreaObj::GetOffsets3 ( _bstr_t Name, long * NumberPoints, SAFEARRAY * * Offsets ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6005", (BSTR)Name, NumberPoints, Offsets);
    return _result;
}

#pragma implementation_key(1161)
inline long ETABSv1::cAreaObj::GetCurvedEdges ( _bstr_t Name, long * NumEdges, SAFEARRAY * * CurveType, SAFEARRAY * * Tension, SAFEARRAY * * NumPoints, SAFEARRAY * * GX, SAFEARRAY * * GY, SAFEARRAY * * GZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6005\x6003\x6005\x6005\x6005", (BSTR)Name, NumEdges, CurveType, Tension, NumPoints, GX, GY, GZ);
    return _result;
}

//
// dispinterface cFrameObj wrapper method implementations
//

#pragma implementation_key(1162)
inline long ETABSv1::cFrameObj::AddByCoord ( double XI, double YI, double ZI, double XJ, double YJ, double ZJ, BSTR * Name, _bstr_t PropName, _bstr_t UserName, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x4008\x0008\x0008\x0008", XI, YI, ZI, XJ, YJ, ZJ, Name, (BSTR)PropName, (BSTR)UserName, (BSTR)CSys);
    return _result;
}

#pragma implementation_key(1163)
inline long ETABSv1::cFrameObj::AddByPoint ( _bstr_t Point1, _bstr_t Point2, BSTR * Name, _bstr_t PropName, _bstr_t UserName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008\x0008\x0008", (BSTR)Point1, (BSTR)Point2, Name, (BSTR)PropName, (BSTR)UserName);
    return _result;
}

#pragma implementation_key(1164)
inline long ETABSv1::cFrameObj::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(1165)
inline long ETABSv1::cFrameObj::Count ( _bstr_t MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)MyType);
    return _result;
}

#pragma implementation_key(1166)
inline long ETABSv1::cFrameObj::Delete ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1167)
inline long ETABSv1::cFrameObj::DeleteLateralBracing ( _bstr_t Name, long MyType, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003", (BSTR)Name, MyType, ItemType);
    return _result;
}

#pragma implementation_key(1168)
inline long ETABSv1::cFrameObj::DeleteLoadDistributed ( _bstr_t Name, _bstr_t LoadPat, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, ItemType);
    return _result;
}

#pragma implementation_key(1169)
inline long ETABSv1::cFrameObj::DeleteLoadPoint ( _bstr_t Name, _bstr_t LoadPat, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, ItemType);
    return _result;
}

#pragma implementation_key(1170)
inline long ETABSv1::cFrameObj::DeleteLoadTemperature ( _bstr_t Name, _bstr_t LoadPat, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, ItemType);
    return _result;
}

#pragma implementation_key(1171)
inline long ETABSv1::cFrameObj::DeleteMass ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1172)
inline long ETABSv1::cFrameObj::DeleteModifiers ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1173)
inline long ETABSv1::cFrameObj::DeleteSpring ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1174)
inline long ETABSv1::cFrameObj::GetDesignProcedure ( _bstr_t Name, long * MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, MyType);
    return _result;
}

#pragma implementation_key(1175)
inline long ETABSv1::cFrameObj::GetElm ( _bstr_t Name, long * NElm, SAFEARRAY * * Elm, SAFEARRAY * * RDI, SAFEARRAY * * RDJ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005", (BSTR)Name, NElm, Elm, RDI, RDJ);
    return _result;
}

#pragma implementation_key(1176)
inline long ETABSv1::cFrameObj::GetEndLengthOffset ( _bstr_t Name, VARIANT_BOOL * AutoOffset, double * Length1, double * Length2, double * RZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b\x4005\x4005\x4005", (BSTR)Name, AutoOffset, Length1, Length2, RZ);
    return _result;
}

#pragma implementation_key(1177)
inline long ETABSv1::cFrameObj::GetGUID ( _bstr_t Name, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, GUID);
    return _result;
}

#pragma implementation_key(1178)
inline long ETABSv1::cFrameObj::GetHingeAssigns ( _bstr_t Name, long * NumberHinges, SAFEARRAY * * HingeNum, SAFEARRAY * * Prop, SAFEARRAY * * MyType, SAFEARRAY * * Behavior, SAFEARRAY * * Source, SAFEARRAY * * RD ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6008\x6003\x6003\x6008\x6005", (BSTR)Name, NumberHinges, HingeNum, Prop, MyType, Behavior, Source, RD);
    return _result;
}

#pragma implementation_key(1179)
inline long ETABSv1::cFrameObj::GetHingeAssigns_1 ( _bstr_t Name, long * NumberHinges, SAFEARRAY * * HingeNum, SAFEARRAY * * Prop, SAFEARRAY * * MyType, SAFEARRAY * * Behavior, SAFEARRAY * * Source, SAFEARRAY * * LocType, SAFEARRAY * * RD, SAFEARRAY * * AD ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6008\x6003\x6003\x6008\x6003\x6005\x6005", (BSTR)Name, NumberHinges, HingeNum, Prop, MyType, Behavior, Source, LocType, RD, AD);
    return _result;
}

#pragma implementation_key(1180)
inline long ETABSv1::cFrameObj::GetInsertionPoint ( _bstr_t Name, long * CardinalPoint, VARIANT_BOOL * Mirror2, VARIANT_BOOL * StiffTransform, SAFEARRAY * * Offset1, SAFEARRAY * * Offset2, BSTR * CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x400b\x400b\x6005\x6005\x4008", (BSTR)Name, CardinalPoint, Mirror2, StiffTransform, Offset1, Offset2, CSys);
    return _result;
}

#pragma implementation_key(1181)
inline long ETABSv1::cFrameObj::GetInsertionPoint_1 ( _bstr_t Name, long * CardinalPoint, VARIANT_BOOL * Mirror2, VARIANT_BOOL * Mirror3, VARIANT_BOOL * StiffTransform, SAFEARRAY * * Offset1, SAFEARRAY * * Offset2, BSTR * CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x400b\x400b\x400b\x6005\x6005\x4008", (BSTR)Name, CardinalPoint, Mirror2, Mirror3, StiffTransform, Offset1, Offset2, CSys);
    return _result;
}

#pragma implementation_key(1182)
inline long ETABSv1::cFrameObj::GetLateralBracing ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * MyType, SAFEARRAY * * Loc, SAFEARRAY * * RD1, SAFEARRAY * * RD2, SAFEARRAY * * Dist1, SAFEARRAY * * Dist2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x6003\x6005\x6005\x6005\x6005", (BSTR)Name, NumberItems, FrameName, MyType, Loc, RD1, RD2, Dist1, Dist2);
    return _result;
}

#pragma implementation_key(1183)
inline long ETABSv1::cFrameObj::GetLoadDistributed ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * LoadPat, SAFEARRAY * * MyType, SAFEARRAY * * CSys, SAFEARRAY * * Dir, SAFEARRAY * * RD1, SAFEARRAY * * RD2, SAFEARRAY * * Dist1, SAFEARRAY * * Dist2, SAFEARRAY * * Val1, SAFEARRAY * * Val2, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6008\x6003\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, FrameName, LoadPat, MyType, CSys, Dir, RD1, RD2, Dist1, Dist2, Val1, Val2, ItemType);
    return _result;
}

#pragma implementation_key(1184)
inline long ETABSv1::cFrameObj::GetLoadPoint ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * LoadPat, SAFEARRAY * * MyType, SAFEARRAY * * CSys, SAFEARRAY * * Dir, SAFEARRAY * * RelDist, SAFEARRAY * * Dist, SAFEARRAY * * Val, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6008\x6003\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, FrameName, LoadPat, MyType, CSys, Dir, RelDist, Dist, Val, ItemType);
    return _result;
}

#pragma implementation_key(1185)
inline long ETABSv1::cFrameObj::GetLoadTemperature ( _bstr_t Name, long * NumberItems, SAFEARRAY * * FrameName, SAFEARRAY * * LoadPat, SAFEARRAY * * MyType, SAFEARRAY * * Val, SAFEARRAY * * PatternName, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6005\x6008\x0003", (BSTR)Name, NumberItems, FrameName, LoadPat, MyType, Val, PatternName, ItemType);
    return _result;
}

#pragma implementation_key(1186)
inline long ETABSv1::cFrameObj::GetLocalAxes ( _bstr_t Name, double * Ang, VARIANT_BOOL * Advanced ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x400b", (BSTR)Name, Ang, Advanced);
    return _result;
}

#pragma implementation_key(1187)
inline long ETABSv1::cFrameObj::GetMass ( _bstr_t Name, double * MassOverL ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)Name, MassOverL);
    return _result;
}

#pragma implementation_key(1188)
inline long ETABSv1::cFrameObj::GetMaterialOverwrite ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(1189)
inline long ETABSv1::cFrameObj::GetModifiers ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(1190)
inline long ETABSv1::cFrameObj::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(1191)
inline long ETABSv1::cFrameObj::GetOutputStations ( _bstr_t Name, long * MyType, double * MaxSegSize, long * MinSections, VARIANT_BOOL * NoOutPutAndDesignAtElementEnds, VARIANT_BOOL * NoOutPutAndDesignAtPointLoads ) {
    long _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005\x4003\x400b\x400b", (BSTR)Name, MyType, MaxSegSize, MinSections, NoOutPutAndDesignAtElementEnds, NoOutPutAndDesignAtPointLoads);
    return _result;
}

#pragma implementation_key(1192)
inline long ETABSv1::cFrameObj::GetPoints ( _bstr_t Name, BSTR * Point1, BSTR * Point2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008", (BSTR)Name, Point1, Point2);
    return _result;
}

#pragma implementation_key(1193)
inline long ETABSv1::cFrameObj::GetReleases ( _bstr_t Name, SAFEARRAY * * II, SAFEARRAY * * JJ, SAFEARRAY * * StartValue, SAFEARRAY * * EndValue ) {
    long _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x6005\x6005", (BSTR)Name, II, JJ, StartValue, EndValue);
    return _result;
}

#pragma implementation_key(1194)
inline long ETABSv1::cFrameObj::GetSection ( _bstr_t Name, BSTR * PropName, BSTR * SAuto ) {
    long _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008", (BSTR)Name, PropName, SAuto);
    return _result;
}

#pragma implementation_key(1195)
inline long ETABSv1::cFrameObj::GetSectionNonPrismatic ( _bstr_t Name, BSTR * PropName, double * SVarTotalLength, double * SVarRelStartLoc ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4005\x4005", (BSTR)Name, PropName, SVarTotalLength, SVarRelStartLoc);
    return _result;
}

#pragma implementation_key(1196)
inline long ETABSv1::cFrameObj::GetSelected ( _bstr_t Name, VARIANT_BOOL * Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(1197)
inline long ETABSv1::cFrameObj::GetTCLimits ( _bstr_t Name, VARIANT_BOOL * LimitCompressionExists, double * LimitCompression, VARIANT_BOOL * LimitTensionExists, double * LimitTension ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b\x4005\x400b\x4005", (BSTR)Name, LimitCompressionExists, LimitCompression, LimitTensionExists, LimitTension);
    return _result;
}

#pragma implementation_key(1198)
inline long ETABSv1::cFrameObj::GetTransformationMatrix ( _bstr_t Name, SAFEARRAY * * Value, VARIANT_BOOL IsGlobal ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x000b", (BSTR)Name, Value, IsGlobal);
    return _result;
}

#pragma implementation_key(1199)
inline long ETABSv1::cFrameObj::GetTypeOAPI ( _bstr_t Name, BSTR * MyType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x47, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, MyType);
    return _result;
}

#pragma implementation_key(1200)
inline long ETABSv1::cFrameObj::SetDesignProcedure ( _bstr_t Name, long MyType, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003", (BSTR)Name, MyType, ItemType);
    return _result;
}

#pragma implementation_key(1201)
inline long ETABSv1::cFrameObj::SetEndLengthOffset ( _bstr_t Name, VARIANT_BOOL AutoOffset, double Length1, double Length2, double RZ, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0005\x0005\x0005\x0003", (BSTR)Name, AutoOffset, Length1, Length2, RZ, ItemType);
    return _result;
}

#pragma implementation_key(1202)
inline long ETABSv1::cFrameObj::SetGroupAssign ( _bstr_t Name, _bstr_t GroupName, VARIANT_BOOL Remove, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x000b\x0003", (BSTR)Name, (BSTR)GroupName, Remove, ItemType);
    return _result;
}

#pragma implementation_key(1203)
inline long ETABSv1::cFrameObj::SetGUID ( _bstr_t Name, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(1204)
inline long ETABSv1::cFrameObj::SetInsertionPoint ( _bstr_t Name, long CardinalPoint, VARIANT_BOOL Mirror2, VARIANT_BOOL StiffTransform, SAFEARRAY * * Offset1, SAFEARRAY * * Offset2, _bstr_t CSys, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000b\x000b\x6005\x6005\x0008\x0003", (BSTR)Name, CardinalPoint, Mirror2, StiffTransform, Offset1, Offset2, (BSTR)CSys, ItemType);
    return _result;
}

#pragma implementation_key(1205)
inline long ETABSv1::cFrameObj::SetInsertionPoint_1 ( _bstr_t Name, long CardinalPoint, VARIANT_BOOL Mirror2, VARIANT_BOOL Mirror3, VARIANT_BOOL StiffTransform, SAFEARRAY * * Offset1, SAFEARRAY * * Offset2, _bstr_t CSys, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x57, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000b\x000b\x000b\x6005\x6005\x0008\x0003", (BSTR)Name, CardinalPoint, Mirror2, Mirror3, StiffTransform, Offset1, Offset2, (BSTR)CSys, ItemType);
    return _result;
}

#pragma implementation_key(1206)
inline long ETABSv1::cFrameObj::SetLateralBracing ( _bstr_t Name, long MyType, long Loc, double MyDist1, double MyDist2, VARIANT_BOOL RelDist, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0005\x0005\x000b\x0003", (BSTR)Name, MyType, Loc, MyDist1, MyDist2, RelDist, ItemType);
    return _result;
}

#pragma implementation_key(1207)
inline long ETABSv1::cFrameObj::SetLoadDistributed ( _bstr_t Name, _bstr_t LoadPat, long MyType, long Dir, double Dist1, double Dist2, double Val1, double Val2, _bstr_t CSys, VARIANT_BOOL RelDist, VARIANT_BOOL Replace, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003\x0003\x0005\x0005\x0005\x0005\x0008\x000b\x000b\x0003", (BSTR)Name, (BSTR)LoadPat, MyType, Dir, Dist1, Dist2, Val1, Val2, (BSTR)CSys, RelDist, Replace, ItemType);
    return _result;
}

#pragma implementation_key(1208)
inline long ETABSv1::cFrameObj::SetLoadPoint ( _bstr_t Name, _bstr_t LoadPat, long MyType, long Dir, double Dist, double Val, _bstr_t CSys, VARIANT_BOOL RelDist, VARIANT_BOOL Replace, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003\x0003\x0005\x0005\x0008\x000b\x000b\x0003", (BSTR)Name, (BSTR)LoadPat, MyType, Dir, Dist, Val, (BSTR)CSys, RelDist, Replace, ItemType);
    return _result;
}

#pragma implementation_key(1209)
inline long ETABSv1::cFrameObj::SetLoadTemperature ( _bstr_t Name, _bstr_t LoadPat, long MyType, double Val, _bstr_t PatternName, VARIANT_BOOL Replace, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003\x0005\x0008\x000b\x0003", (BSTR)Name, (BSTR)LoadPat, MyType, Val, (BSTR)PatternName, Replace, ItemType);
    return _result;
}

#pragma implementation_key(1210)
inline long ETABSv1::cFrameObj::SetLocalAxes ( _bstr_t Name, double Ang, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0003", (BSTR)Name, Ang, ItemType);
    return _result;
}

#pragma implementation_key(1211)
inline long ETABSv1::cFrameObj::SetMass ( _bstr_t Name, double MassOverL, VARIANT_BOOL Replace, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x000b\x0003", (BSTR)Name, MassOverL, Replace, ItemType);
    return _result;
}

#pragma implementation_key(1212)
inline long ETABSv1::cFrameObj::SetMaterialOverwrite ( _bstr_t Name, _bstr_t PropName, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)PropName, ItemType);
    return _result;
}

#pragma implementation_key(1213)
inline long ETABSv1::cFrameObj::SetModifiers ( _bstr_t Name, SAFEARRAY * * Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x0003", (BSTR)Name, Value, ItemType);
    return _result;
}

#pragma implementation_key(1214)
inline long ETABSv1::cFrameObj::SetOutputStations ( _bstr_t Name, long MyType, double MaxSegSize, long MinSections, VARIANT_BOOL NoOutPutAndDesignAtElementEnds, VARIANT_BOOL NoOutPutAndDesignAtPointLoads, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003\x000b\x000b\x0003", (BSTR)Name, MyType, MaxSegSize, MinSections, NoOutPutAndDesignAtElementEnds, NoOutPutAndDesignAtPointLoads, ItemType);
    return _result;
}

#pragma implementation_key(1215)
inline long ETABSv1::cFrameObj::SetReleases ( _bstr_t Name, SAFEARRAY * * II, SAFEARRAY * * JJ, SAFEARRAY * * StartValue, SAFEARRAY * * EndValue, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x600b\x6005\x6005\x0003", (BSTR)Name, II, JJ, StartValue, EndValue, ItemType);
    return _result;
}

#pragma implementation_key(1216)
inline long ETABSv1::cFrameObj::SetSection ( _bstr_t Name, _bstr_t PropName, enum eItemType ItemType, double SVarRelStartLoc, double SVarTotalLength ) {
    long _result = 0;
    _com_dispatch_method(this, 0x41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003\x0005\x0005", (BSTR)Name, (BSTR)PropName, ItemType, SVarRelStartLoc, SVarTotalLength);
    return _result;
}

#pragma implementation_key(1217)
inline long ETABSv1::cFrameObj::SetSelected ( _bstr_t Name, VARIANT_BOOL Selected, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0003", (BSTR)Name, Selected, ItemType);
    return _result;
}

#pragma implementation_key(1218)
inline long ETABSv1::cFrameObj::SetTCLimits ( _bstr_t Name, VARIANT_BOOL LimitCompressionExists, double LimitCompression, VARIANT_BOOL LimitTensionExists, double LimitTension, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0005\x000b\x0005\x0003", (BSTR)Name, LimitCompressionExists, LimitCompression, LimitTensionExists, LimitTension, ItemType);
    return _result;
}

#pragma implementation_key(1219)
inline long ETABSv1::cFrameObj::GetGroupAssign ( _bstr_t Name, long * NumberGroups, SAFEARRAY * * Groups ) {
    long _result = 0;
    _com_dispatch_method(this, 0x74, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)Name, NumberGroups, Groups);
    return _result;
}

#pragma implementation_key(1220)
inline long ETABSv1::cFrameObj::GetColumnSpliceOverwrite ( _bstr_t Name, long * SpliceOption, double * Height ) {
    long _result = 0;
    _com_dispatch_method(this, 0x70, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005", (BSTR)Name, SpliceOption, Height);
    return _result;
}

#pragma implementation_key(1221)
inline long ETABSv1::cFrameObj::GetNameListOnStory ( _bstr_t StoryName, long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x46, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)StoryName, NumberNames, MyName);
    return _result;
}

#pragma implementation_key(1222)
inline long ETABSv1::cFrameObj::GetLabelNameList ( long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * MyLabel, SAFEARRAY * * MyStory ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008", NumberNames, MyName, MyLabel, MyStory);
    return _result;
}

#pragma implementation_key(1223)
inline long ETABSv1::cFrameObj::GetLabelFromName ( _bstr_t Name, BSTR * Label, BSTR * Story ) {
    long _result = 0;
    _com_dispatch_method(this, 0x60, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008", (BSTR)Name, Label, Story);
    return _result;
}

#pragma implementation_key(1224)
inline long ETABSv1::cFrameObj::GetNameFromLabel ( _bstr_t Label, _bstr_t Story, BSTR * Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x61, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008", (BSTR)Label, (BSTR)Story, Name);
    return _result;
}

#pragma implementation_key(1225)
inline long ETABSv1::cFrameObj::GetSupports ( _bstr_t Name, BSTR * SupportName1, enum eObjType * SupportType1, BSTR * SupportName2, enum eObjType * SupportType2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0x69, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4003\x4008\x4003", (BSTR)Name, SupportName1, SupportType1, SupportName2, SupportType2);
    return _result;
}

#pragma implementation_key(1226)
inline long ETABSv1::cFrameObj::GetAllFrames ( long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * PropName, SAFEARRAY * * StoryName, SAFEARRAY * * PointName1, SAFEARRAY * * PointName2, SAFEARRAY * * Point1X, SAFEARRAY * * Point1Y, SAFEARRAY * * Point1Z, SAFEARRAY * * Point2X, SAFEARRAY * * Point2Y, SAFEARRAY * * Point2Z, SAFEARRAY * * Angle, SAFEARRAY * * Offset1X, SAFEARRAY * * Offset2X, SAFEARRAY * * Offset1Y, SAFEARRAY * * Offset2Y, SAFEARRAY * * Offset1Z, SAFEARRAY * * Offset2Z, SAFEARRAY * * CardinalPoint, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008\x6008\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x6003\x0008", NumberNames, MyName, PropName, StoryName, PointName1, PointName2, Point1X, Point1Y, Point1Z, Point2X, Point2Y, Point2Z, Angle, Offset1X, Offset2X, Offset1Y, Offset2Y, Offset1Z, Offset2Z, CardinalPoint, (BSTR)CSys);
    return _result;
}

#pragma implementation_key(1227)
inline long ETABSv1::cFrameObj::GetDesignOrientation ( _bstr_t Name, enum eFrameDesignOrientation * DesignOrientation ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, DesignOrientation);
    return _result;
}

#pragma implementation_key(1228)
inline long ETABSv1::cFrameObj::GetPier ( _bstr_t Name, BSTR * PierName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PierName);
    return _result;
}

#pragma implementation_key(1229)
inline long ETABSv1::cFrameObj::SetPier ( _bstr_t Name, _bstr_t PierName, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)PierName, ItemType);
    return _result;
}

#pragma implementation_key(1230)
inline long ETABSv1::cFrameObj::GetSpandrel ( _bstr_t Name, BSTR * SpandrelName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, SpandrelName);
    return _result;
}

#pragma implementation_key(1231)
inline long ETABSv1::cFrameObj::SetColumnSpliceOverwrite ( _bstr_t Name, long SpliceOption, double Height, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x71, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0003", (BSTR)Name, SpliceOption, Height, ItemType);
    return _result;
}

#pragma implementation_key(1232)
inline long ETABSv1::cFrameObj::SetSpandrel ( _bstr_t Name, _bstr_t SpandrelName, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)SpandrelName, ItemType);
    return _result;
}

#pragma implementation_key(1233)
inline long ETABSv1::cFrameObj::GetSpringAssignment ( _bstr_t Name, BSTR * SpringProp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x72, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, SpringProp);
    return _result;
}

#pragma implementation_key(1234)
inline long ETABSv1::cFrameObj::SetSpringAssignment ( _bstr_t Name, _bstr_t SpringProp, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x73, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)SpringProp, ItemType);
    return _result;
}

#pragma implementation_key(1235)
inline long ETABSv1::cFrameObj::GetCurved_2 ( _bstr_t Name, long * CurveType, double * Tension, long * NumPnts, SAFEARRAY * * GX, SAFEARRAY * * GY, SAFEARRAY * * GZ ) {
    long _result = 0;
    _com_dispatch_method(this, 0x75, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005\x4003\x6005\x6005\x6005", (BSTR)Name, CurveType, Tension, NumPnts, GX, GY, GZ);
    return _result;
}

//
// dispinterface cLinkObj wrapper method implementations
//

#pragma implementation_key(1236)
inline long ETABSv1::cLinkObj::AddByCoord ( double XI, double YI, double ZI, double XJ, double YJ, double ZJ, BSTR * Name, VARIANT_BOOL IsSingleJoint, _bstr_t PropName, _bstr_t UserName, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x4008\x000b\x0008\x0008\x0008", XI, YI, ZI, XJ, YJ, ZJ, Name, IsSingleJoint, (BSTR)PropName, (BSTR)UserName, (BSTR)CSys);
    return _result;
}

#pragma implementation_key(1237)
inline long ETABSv1::cLinkObj::AddByPoint ( _bstr_t Point1, _bstr_t Point2, BSTR * Name, VARIANT_BOOL IsSingleJoint, _bstr_t PropName, _bstr_t UserName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008\x000b\x0008\x0008", (BSTR)Point1, (BSTR)Point2, Name, IsSingleJoint, (BSTR)PropName, (BSTR)UserName);
    return _result;
}

#pragma implementation_key(1238)
inline long ETABSv1::cLinkObj::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(1239)
inline long ETABSv1::cLinkObj::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1240)
inline long ETABSv1::cLinkObj::Delete ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1241)
inline long ETABSv1::cLinkObj::GetElm ( _bstr_t Name, BSTR * Elm ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, Elm);
    return _result;
}

#pragma implementation_key(1242)
inline long ETABSv1::cLinkObj::GetGUID ( _bstr_t Name, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, GUID);
    return _result;
}

#pragma implementation_key(1243)
inline long ETABSv1::cLinkObj::GetLocalAxes ( _bstr_t Name, double * Ang, VARIANT_BOOL * Advanced ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x400b", (BSTR)Name, Ang, Advanced);
    return _result;
}

#pragma implementation_key(1244)
inline long ETABSv1::cLinkObj::GetLocalAxesAdvanced ( _bstr_t Name, VARIANT_BOOL * Active, long * AxVectOpt, BSTR * AxCSys, SAFEARRAY * * AxDir, SAFEARRAY * * AxPt, SAFEARRAY * * AxVect, long * Plane2, long * PlVectOpt, BSTR * PlCSys, SAFEARRAY * * PlDir, SAFEARRAY * * PlPt, SAFEARRAY * * PlVect ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b\x4003\x4008\x6003\x6008\x6005\x4003\x4003\x4008\x6003\x6008\x6005", (BSTR)Name, Active, AxVectOpt, AxCSys, AxDir, AxPt, AxVect, Plane2, PlVectOpt, PlCSys, PlDir, PlPt, PlVect);
    return _result;
}

#pragma implementation_key(1245)
inline long ETABSv1::cLinkObj::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(1246)
inline long ETABSv1::cLinkObj::GetPoints ( _bstr_t Name, BSTR * Point1, BSTR * Point2 ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008", (BSTR)Name, Point1, Point2);
    return _result;
}

#pragma implementation_key(1247)
inline long ETABSv1::cLinkObj::GetProperty ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(1248)
inline long ETABSv1::cLinkObj::GetSelected ( _bstr_t Name, VARIANT_BOOL * Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(1249)
inline long ETABSv1::cLinkObj::GetTransformationMatrix ( _bstr_t Name, SAFEARRAY * * Value, VARIANT_BOOL IsGlobal ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x000b", (BSTR)Name, Value, IsGlobal);
    return _result;
}

#pragma implementation_key(1250)
inline long ETABSv1::cLinkObj::SetGroupAssign ( _bstr_t Name, _bstr_t GroupName, VARIANT_BOOL Remove, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x000b\x0003", (BSTR)Name, (BSTR)GroupName, Remove, ItemType);
    return _result;
}

#pragma implementation_key(1251)
inline long ETABSv1::cLinkObj::SetGUID ( _bstr_t Name, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(1252)
inline long ETABSv1::cLinkObj::SetLocalAxes ( _bstr_t Name, double Ang, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0003", (BSTR)Name, Ang, ItemType);
    return _result;
}

#pragma implementation_key(1253)
inline long ETABSv1::cLinkObj::SetLocalAxesAdvanced ( _bstr_t Name, VARIANT_BOOL Active, long AxVectOpt, _bstr_t AxCSys, SAFEARRAY * * AxDir, SAFEARRAY * * AxPt, SAFEARRAY * * AxVect, long Plane2, long PlVectOpt, _bstr_t PlCSys, SAFEARRAY * * PlDir, SAFEARRAY * * PlPt, SAFEARRAY * * PlVect, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0003\x0008\x6003\x6008\x6005\x0003\x0003\x0008\x6003\x6008\x6005\x0003", (BSTR)Name, Active, AxVectOpt, (BSTR)AxCSys, AxDir, AxPt, AxVect, Plane2, PlVectOpt, (BSTR)PlCSys, PlDir, PlPt, PlVect, ItemType);
    return _result;
}

#pragma implementation_key(1254)
inline long ETABSv1::cLinkObj::SetProperty ( _bstr_t Name, _bstr_t PropName, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)PropName, ItemType);
    return _result;
}

#pragma implementation_key(1255)
inline long ETABSv1::cLinkObj::SetSelected ( _bstr_t Name, VARIANT_BOOL Selected, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0003", (BSTR)Name, Selected, ItemType);
    return _result;
}

#pragma implementation_key(1256)
inline long ETABSv1::cLinkObj::GetGroupAssign ( _bstr_t Name, long * NumberGroups, SAFEARRAY * * Groups ) {
    long _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)Name, NumberGroups, Groups);
    return _result;
}

#pragma implementation_key(1257)
inline long ETABSv1::cLinkObj::GetNameListOnStory ( _bstr_t StoryName, long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)StoryName, NumberNames, MyName);
    return _result;
}

//
// dispinterface cPointObj wrapper method implementations
//

#pragma implementation_key(1258)
inline long ETABSv1::cPointObj::AddCartesian ( double X, double Y, double Z, BSTR * Name, _bstr_t UserName, _bstr_t CSys, VARIANT_BOOL MergeOff, long MergeNumber ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x4008\x0008\x0008\x000b\x0003", X, Y, Z, Name, (BSTR)UserName, (BSTR)CSys, MergeOff, MergeNumber);
    return _result;
}

#pragma implementation_key(1259)
inline long ETABSv1::cPointObj::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(1260)
inline long ETABSv1::cPointObj::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1261)
inline long ETABSv1::cPointObj::CountLoadDispl ( long * Count, _bstr_t Name, _bstr_t LoadPat ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x0008\x0008", Count, (BSTR)Name, (BSTR)LoadPat);
    return _result;
}

#pragma implementation_key(1262)
inline long ETABSv1::cPointObj::CountLoadForce ( long * Count, _bstr_t Name, _bstr_t LoadPat ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x0008\x0008", Count, (BSTR)Name, (BSTR)LoadPat);
    return _result;
}

#pragma implementation_key(1263)
inline long ETABSv1::cPointObj::CountPanelZone ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1264)
inline long ETABSv1::cPointObj::CountRestraint ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x8, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1265)
inline long ETABSv1::cPointObj::CountSpring ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1266)
inline long ETABSv1::cPointObj::DeleteLoadDispl ( _bstr_t Name, _bstr_t LoadPat, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, ItemType);
    return _result;
}

#pragma implementation_key(1267)
inline long ETABSv1::cPointObj::DeleteLoadForce ( _bstr_t Name, _bstr_t LoadPat, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, ItemType);
    return _result;
}

#pragma implementation_key(1268)
inline long ETABSv1::cPointObj::DeleteMass ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1269)
inline long ETABSv1::cPointObj::DeletePanelZone ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0xe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1270)
inline long ETABSv1::cPointObj::DeleteRestraint ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1271)
inline long ETABSv1::cPointObj::DeleteSpecialPoint ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1272)
inline long ETABSv1::cPointObj::DeleteSpring ( _bstr_t Name, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)Name, ItemType);
    return _result;
}

#pragma implementation_key(1273)
inline long ETABSv1::cPointObj::GetCommonTo ( _bstr_t Name, long * CommonTo ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)Name, CommonTo);
    return _result;
}

#pragma implementation_key(1274)
inline long ETABSv1::cPointObj::GetConnectivity ( _bstr_t Name, long * NumberItems, SAFEARRAY * * ObjectType, SAFEARRAY * * ObjectName, SAFEARRAY * * PointNumber ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6003\x6008\x6003", (BSTR)Name, NumberItems, ObjectType, ObjectName, PointNumber);
    return _result;
}

#pragma implementation_key(1275)
inline long ETABSv1::cPointObj::GetCoordCartesian ( _bstr_t Name, double * X, double * Y, double * Z, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x0008", (BSTR)Name, X, Y, Z, (BSTR)CSys);
    return _result;
}

#pragma implementation_key(1276)
inline long ETABSv1::cPointObj::GetCoordCylindrical ( _bstr_t Name, double * R, double * Theta, double * Z, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x0008", (BSTR)Name, R, Theta, Z, (BSTR)CSys);
    return _result;
}

#pragma implementation_key(1277)
inline long ETABSv1::cPointObj::GetCoordSpherical ( _bstr_t Name, double * R, double * A, double * B, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x0008", (BSTR)Name, R, A, B, (BSTR)CSys);
    return _result;
}

#pragma implementation_key(1278)
inline long ETABSv1::cPointObj::GetElm ( _bstr_t Name, BSTR * Elm ) {
    long _result = 0;
    _com_dispatch_method(this, 0x19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, Elm);
    return _result;
}

#pragma implementation_key(1279)
inline long ETABSv1::cPointObj::GetGUID ( _bstr_t Name, BSTR * GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, GUID);
    return _result;
}

#pragma implementation_key(1280)
inline long ETABSv1::cPointObj::GetLoadDispl ( _bstr_t Name, long * NumberItems, SAFEARRAY * * PointName, SAFEARRAY * * LoadPat, SAFEARRAY * * LcStep, SAFEARRAY * * CSys, SAFEARRAY * * U1, SAFEARRAY * * U2, SAFEARRAY * * U3, SAFEARRAY * * R1, SAFEARRAY * * R2, SAFEARRAY * * R3, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, PointName, LoadPat, LcStep, CSys, U1, U2, U3, R1, R2, R3, ItemType);
    return _result;
}

#pragma implementation_key(1281)
inline long ETABSv1::cPointObj::GetLoadForce ( _bstr_t Name, long * NumberItems, SAFEARRAY * * PointName, SAFEARRAY * * LoadPat, SAFEARRAY * * LcStep, SAFEARRAY * * CSys, SAFEARRAY * * F1, SAFEARRAY * * F2, SAFEARRAY * * F3, SAFEARRAY * * M1, SAFEARRAY * * M2, SAFEARRAY * * M3, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6003\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, PointName, LoadPat, LcStep, CSys, F1, F2, F3, M1, M2, M3, ItemType);
    return _result;
}

#pragma implementation_key(1282)
inline long ETABSv1::cPointObj::GetLocalAxes ( _bstr_t Name, double * A, double * B, double * C, VARIANT_BOOL * Advanced ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4005\x4005\x400b", (BSTR)Name, A, B, C, Advanced);
    return _result;
}

#pragma implementation_key(1283)
inline long ETABSv1::cPointObj::GetMass ( _bstr_t Name, SAFEARRAY * * M ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, M);
    return _result;
}

#pragma implementation_key(1284)
inline long ETABSv1::cPointObj::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(1285)
inline long ETABSv1::cPointObj::GetPanelZone ( _bstr_t Name, long * PropType, double * Thickness, double * K1, double * K2, BSTR * LinkProp, long * Connectivity, long * LocalAxisFrom, double * LocalAxisAngle ) {
    long _result = 0;
    _com_dispatch_method(this, 0x21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4005\x4005\x4005\x4008\x4003\x4003\x4005", (BSTR)Name, PropType, Thickness, K1, K2, LinkProp, Connectivity, LocalAxisFrom, LocalAxisAngle);
    return _result;
}

#pragma implementation_key(1286)
inline long ETABSv1::cPointObj::GetRestraint ( _bstr_t Name, SAFEARRAY * * Value ) {
    long _result = 0;
    _com_dispatch_method(this, 0x23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b", (BSTR)Name, Value);
    return _result;
}

#pragma implementation_key(1287)
inline long ETABSv1::cPointObj::GetSelected ( _bstr_t Name, VARIANT_BOOL * Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(1288)
inline long ETABSv1::cPointObj::GetSpecialPoint ( _bstr_t Name, VARIANT_BOOL * SpecialPoint ) {
    long _result = 0;
    _com_dispatch_method(this, 0x25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, SpecialPoint);
    return _result;
}

#pragma implementation_key(1289)
inline long ETABSv1::cPointObj::GetSpring ( _bstr_t Name, SAFEARRAY * * K ) {
    long _result = 0;
    _com_dispatch_method(this, 0x26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, K);
    return _result;
}

#pragma implementation_key(1290)
inline long ETABSv1::cPointObj::GetSpringCoupled ( _bstr_t Name, SAFEARRAY * * K ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005", (BSTR)Name, K);
    return _result;
}

#pragma implementation_key(1291)
inline long ETABSv1::cPointObj::GetTransformationMatrix ( _bstr_t Name, SAFEARRAY * * Value, VARIANT_BOOL IsGlobal ) {
    long _result = 0;
    _com_dispatch_method(this, 0x28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x000b", (BSTR)Name, Value, IsGlobal);
    return _result;
}

#pragma implementation_key(1292)
inline long ETABSv1::cPointObj::IsSpringCoupled ( _bstr_t Name, VARIANT_BOOL * IsCoupled ) {
    long _result = 0;
    _com_dispatch_method(this, 0x29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, IsCoupled);
    return _result;
}

#pragma implementation_key(1293)
inline long ETABSv1::cPointObj::SetGroupAssign ( _bstr_t Name, _bstr_t GroupName, VARIANT_BOOL Remove, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x000b\x0003", (BSTR)Name, (BSTR)GroupName, Remove, ItemType);
    return _result;
}

#pragma implementation_key(1294)
inline long ETABSv1::cPointObj::SetGUID ( _bstr_t Name, _bstr_t GUID ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)GUID);
    return _result;
}

#pragma implementation_key(1295)
inline long ETABSv1::cPointObj::SetLoadDispl ( _bstr_t Name, _bstr_t LoadPat, SAFEARRAY * * Value, VARIANT_BOOL Replace, _bstr_t CSys, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x6005\x000b\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, Value, Replace, (BSTR)CSys, ItemType);
    return _result;
}

#pragma implementation_key(1296)
inline long ETABSv1::cPointObj::SetLoadForce ( _bstr_t Name, _bstr_t LoadPat, SAFEARRAY * * Value, VARIANT_BOOL Replace, _bstr_t CSys, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x6005\x000b\x0008\x0003", (BSTR)Name, (BSTR)LoadPat, Value, Replace, (BSTR)CSys, ItemType);
    return _result;
}

#pragma implementation_key(1297)
inline long ETABSv1::cPointObj::SetMass ( _bstr_t Name, SAFEARRAY * * M, enum eItemType ItemType, VARIANT_BOOL IsLocalCSys, VARIANT_BOOL Replace ) {
    long _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x0003\x000b\x000b", (BSTR)Name, M, ItemType, IsLocalCSys, Replace);
    return _result;
}

#pragma implementation_key(1298)
inline long ETABSv1::cPointObj::SetMassByVolume ( _bstr_t Name, _bstr_t MatProp, SAFEARRAY * * M, enum eItemType ItemType, VARIANT_BOOL IsLocalCSys, VARIANT_BOOL Replace ) {
    long _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x6005\x0003\x000b\x000b", (BSTR)Name, (BSTR)MatProp, M, ItemType, IsLocalCSys, Replace);
    return _result;
}

#pragma implementation_key(1299)
inline long ETABSv1::cPointObj::SetMassByWeight ( _bstr_t Name, SAFEARRAY * * M, enum eItemType ItemType, VARIANT_BOOL IsLocalCSys, VARIANT_BOOL Replace ) {
    long _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x0003\x000b\x000b", (BSTR)Name, M, ItemType, IsLocalCSys, Replace);
    return _result;
}

#pragma implementation_key(1300)
inline long ETABSv1::cPointObj::SetPanelZone ( _bstr_t Name, long PropType, double Thickness, double K1, double K2, _bstr_t LinkProp, long Connectivity, long LocalAxisFrom, double LocalAxisAngle, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0005\x0005\x0008\x0003\x0003\x0005\x0003", (BSTR)Name, PropType, Thickness, K1, K2, (BSTR)LinkProp, Connectivity, LocalAxisFrom, LocalAxisAngle, ItemType);
    return _result;
}

#pragma implementation_key(1301)
inline long ETABSv1::cPointObj::SetRestraint ( _bstr_t Name, SAFEARRAY * * Value, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x600b\x0003", (BSTR)Name, Value, ItemType);
    return _result;
}

#pragma implementation_key(1302)
inline long ETABSv1::cPointObj::SetSelected ( _bstr_t Name, VARIANT_BOOL Selected, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0003", (BSTR)Name, Selected, ItemType);
    return _result;
}

#pragma implementation_key(1303)
inline long ETABSv1::cPointObj::SetSpecialPoint ( _bstr_t Name, VARIANT_BOOL SpecialPoint, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0003", (BSTR)Name, SpecialPoint, ItemType);
    return _result;
}

#pragma implementation_key(1304)
inline long ETABSv1::cPointObj::SetSpring ( _bstr_t Name, SAFEARRAY * * K, enum eItemType ItemType, VARIANT_BOOL IsLocalCSys, VARIANT_BOOL Replace ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x0003\x000b\x000b", (BSTR)Name, K, ItemType, IsLocalCSys, Replace);
    return _result;
}

#pragma implementation_key(1305)
inline long ETABSv1::cPointObj::SetSpringCoupled ( _bstr_t Name, SAFEARRAY * * K, enum eItemType ItemType, VARIANT_BOOL IsLocalCSys, VARIANT_BOOL Replace ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x6005\x0003\x000b\x000b", (BSTR)Name, K, ItemType, IsLocalCSys, Replace);
    return _result;
}

#pragma implementation_key(1306)
inline long ETABSv1::cPointObj::GetGroupAssign ( _bstr_t Name, long * NumberGroups, SAFEARRAY * * Groups ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)Name, NumberGroups, Groups);
    return _result;
}

#pragma implementation_key(1307)
inline long ETABSv1::cPointObj::GetNameListOnStory ( _bstr_t StoryName, long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)StoryName, NumberNames, MyName);
    return _result;
}

#pragma implementation_key(1308)
inline long ETABSv1::cPointObj::GetDiaphragm ( _bstr_t Name, enum eDiaphragmOption * DiaphragmOption, BSTR * DiaphragmName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x4008", (BSTR)Name, DiaphragmOption, DiaphragmName);
    return _result;
}

#pragma implementation_key(1309)
inline long ETABSv1::cPointObj::SetDiaphragm ( _bstr_t Name, enum eDiaphragmOption DiaphragmOption, _bstr_t DiaphragmName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0008", (BSTR)Name, DiaphragmOption, (BSTR)DiaphragmName);
    return _result;
}

#pragma implementation_key(1310)
inline long ETABSv1::cPointObj::GetLabelNameList ( long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * MyLabel, SAFEARRAY * * MyStory ) {
    long _result = 0;
    _com_dispatch_method(this, 0x43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6008\x6008", NumberNames, MyName, MyLabel, MyStory);
    return _result;
}

#pragma implementation_key(1311)
inline long ETABSv1::cPointObj::GetLabelFromName ( _bstr_t Name, BSTR * Label, BSTR * Story ) {
    long _result = 0;
    _com_dispatch_method(this, 0x44, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008\x4008", (BSTR)Name, Label, Story);
    return _result;
}

#pragma implementation_key(1312)
inline long ETABSv1::cPointObj::GetNameFromLabel ( _bstr_t Label, _bstr_t Story, BSTR * Name ) {
    long _result = 0;
    _com_dispatch_method(this, 0x45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4008", (BSTR)Label, (BSTR)Story, Name);
    return _result;
}

#pragma implementation_key(1313)
inline long ETABSv1::cPointObj::GetAllPoints ( long * NumberNames, SAFEARRAY * * MyName, SAFEARRAY * * X, SAFEARRAY * * Y, SAFEARRAY * * Z, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x49, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008\x6005\x6005\x6005\x0008", NumberNames, MyName, X, Y, Z, (BSTR)CSys);
    return _result;
}

#pragma implementation_key(1314)
inline long ETABSv1::cPointObj::GetSpringAssignment ( _bstr_t Name, BSTR * SpringProp ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, SpringProp);
    return _result;
}

#pragma implementation_key(1315)
inline long ETABSv1::cPointObj::SetSpringAssignment ( _bstr_t Name, _bstr_t SpringProp, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0003", (BSTR)Name, (BSTR)SpringProp, ItemType);
    return _result;
}

//
// dispinterface cTendonObj wrapper method implementations
//

#pragma implementation_key(1316)
inline long ETABSv1::cTendonObj::ChangeName ( _bstr_t Name, _bstr_t NewName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)Name, (BSTR)NewName);
    return _result;
}

#pragma implementation_key(1317)
inline long ETABSv1::cTendonObj::Count ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1318)
inline long ETABSv1::cTendonObj::GetNameList ( long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6008", NumberNames, MyName);
    return _result;
}

#pragma implementation_key(1319)
inline long ETABSv1::cTendonObj::GetProperty ( _bstr_t Name, BSTR * PropName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4008", (BSTR)Name, PropName);
    return _result;
}

#pragma implementation_key(1320)
inline long ETABSv1::cTendonObj::GetSelected ( _bstr_t Name, VARIANT_BOOL * Selected ) {
    long _result = 0;
    _com_dispatch_method(this, 0x14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400b", (BSTR)Name, Selected);
    return _result;
}

#pragma implementation_key(1321)
inline long ETABSv1::cTendonObj::GetTendonGeometry ( _bstr_t Name, long * NumberPoints, SAFEARRAY * * X, SAFEARRAY * * Y, SAFEARRAY * * Z, _bstr_t CSys ) {
    long _result = 0;
    _com_dispatch_method(this, 0x17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6005\x6005\x6005\x0008", (BSTR)Name, NumberPoints, X, Y, Z, (BSTR)CSys);
    return _result;
}

#pragma implementation_key(1322)
inline long ETABSv1::cTendonObj::SetSelected ( _bstr_t Name, VARIANT_BOOL Selected, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x0003", (BSTR)Name, Selected, ItemType);
    return _result;
}

#pragma implementation_key(1323)
inline long ETABSv1::cTendonObj::GetGroupAssign ( _bstr_t Name, long * NumberGroups, SAFEARRAY * * Groups ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)Name, NumberGroups, Groups);
    return _result;
}

#pragma implementation_key(1324)
inline long ETABSv1::cTendonObj::SetGroupAssign ( _bstr_t Name, _bstr_t GroupName, VARIANT_BOOL Remove, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x000b\x0003", (BSTR)Name, (BSTR)GroupName, Remove, ItemType);
    return _result;
}

#pragma implementation_key(1325)
inline long ETABSv1::cTendonObj::GetNameListOnStory ( _bstr_t StoryName, long * NumberNames, SAFEARRAY * * MyName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008", (BSTR)StoryName, NumberNames, MyName);
    return _result;
}

#pragma implementation_key(1326)
inline long ETABSv1::cTendonObj::GetLoadForceStress_1 ( _bstr_t Name, long * NumberItems, SAFEARRAY * * TendonName, SAFEARRAY * * LoadPatFinal, SAFEARRAY * * LoadPatTransfer, SAFEARRAY * * JackFrom, SAFEARRAY * * LoadType, SAFEARRAY * * LoadValue, SAFEARRAY * * LossSpecification, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6008\x6003\x6003\x6005\x6003\x0003", (BSTR)Name, NumberItems, TendonName, LoadPatFinal, LoadPatTransfer, JackFrom, LoadType, LoadValue, LossSpecification, ItemType);
    return _result;
}

#pragma implementation_key(1327)
inline long ETABSv1::cTendonObj::GetLossesDetailed ( _bstr_t Name, long * NumberItems, SAFEARRAY * * TendonName, SAFEARRAY * * CurvatureCoeff, SAFEARRAY * * WobbleCoeff, SAFEARRAY * * LossAnchorage, SAFEARRAY * * LossShortening, SAFEARRAY * * LossCreep, SAFEARRAY * * LossShrinkage, SAFEARRAY * * LossSteelRelax, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x6005\x6005\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, TendonName, CurvatureCoeff, WobbleCoeff, LossAnchorage, LossShortening, LossCreep, LossShrinkage, LossSteelRelax, ItemType);
    return _result;
}

#pragma implementation_key(1328)
inline long ETABSv1::cTendonObj::GetLossesFixed ( _bstr_t Name, long * NumberItems, SAFEARRAY * * TendonName, SAFEARRAY * * StressingFixed, SAFEARRAY * * LongTermFixed, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x0003", (BSTR)Name, NumberItems, TendonName, StressingFixed, LongTermFixed, ItemType);
    return _result;
}

#pragma implementation_key(1329)
inline long ETABSv1::cTendonObj::GetLossesPercent ( _bstr_t Name, long * NumberItems, SAFEARRAY * * TendonName, SAFEARRAY * * StressingPercent, SAFEARRAY * * LongTermPercent, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x6005\x0003", (BSTR)Name, NumberItems, TendonName, StressingPercent, LongTermPercent, ItemType);
    return _result;
}

#pragma implementation_key(1330)
inline long ETABSv1::cTendonObj::GetNumberStrands ( _bstr_t Name, long * NumberItems, SAFEARRAY * * TendonName, SAFEARRAY * * NumberStrands, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6003\x0003", (BSTR)Name, NumberItems, TendonName, NumberStrands, ItemType);
    return _result;
}

#pragma implementation_key(1331)
inline long ETABSv1::cTendonObj::GetDatumOffset ( _bstr_t Name, long * NumberItems, SAFEARRAY * * TendonName, SAFEARRAY * * DatumOffset, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6005\x0003", (BSTR)Name, NumberItems, TendonName, DatumOffset, ItemType);
    return _result;
}

#pragma implementation_key(1332)
inline long ETABSv1::cTendonObj::GetDrawingPoint ( _bstr_t Name, long * NumberItems, SAFEARRAY * * TendonName, SAFEARRAY * * DrawingPointID, SAFEARRAY * * GX, SAFEARRAY * * GY, SAFEARRAY * * GZ, enum eItemType ItemType ) {
    long _result = 0;
    _com_dispatch_method(this, 0x35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x6008\x6008\x6005\x6005\x6005\x0003", (BSTR)Name, NumberItems, TendonName, DrawingPointID, GX, GY, GZ, ItemType);
    return _result;
}

//
// dispinterface cOptions wrapper method implementations
//

#pragma implementation_key(1333)
inline long ETABSv1::cOptions::GetDefaultFunctionFolder ( BSTR * Path ) {
    long _result = 0;
    _com_dispatch_method(this, 0x3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008", Path);
    return _result;
}

#pragma implementation_key(1334)
inline long ETABSv1::cOptions::SetDefaultFunctionFolder ( _bstr_t Path ) {
    long _result = 0;
    _com_dispatch_method(this, 0x4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Path);
    return _result;
}

//
// dispinterface cSelect wrapper method implementations
//

#pragma implementation_key(1335)
inline long ETABSv1::cSelect::All ( VARIANT_BOOL Deselect ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", Deselect);
    return _result;
}

#pragma implementation_key(1336)
inline long ETABSv1::cSelect::ClearSelection ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1337)
inline long ETABSv1::cSelect::GetSelected ( long * NumberItems, SAFEARRAY * * ObjectType, SAFEARRAY * * ObjectName ) {
    long _result = 0;
    _com_dispatch_method(this, 0x5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x6003\x6008", NumberItems, ObjectType, ObjectName);
    return _result;
}

#pragma implementation_key(1338)
inline long ETABSv1::cSelect::Group ( _bstr_t Name, VARIANT_BOOL Deselect ) {
    long _result = 0;
    _com_dispatch_method(this, 0x6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)Name, Deselect);
    return _result;
}

#pragma implementation_key(1339)
inline long ETABSv1::cSelect::InvertSelection ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0x7, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1340)
inline long ETABSv1::cSelect::PreviousSelection ( ) {
    long _result = 0;
    _com_dispatch_method(this, 0xd, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

//
// dispinterface cView wrapper method implementations
//

#pragma implementation_key(1341)
inline long ETABSv1::cView::RefreshView ( long Window, VARIANT_BOOL Zoom ) {
    long _result = 0;
    _com_dispatch_method(this, 0x1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", Window, Zoom);
    return _result;
}

#pragma implementation_key(1342)
inline long ETABSv1::cView::RefreshWindow ( long Window ) {
    long _result = 0;
    _com_dispatch_method(this, 0x2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", Window);
    return _result;
}
